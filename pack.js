class GFX{width;height;mesh;buffer;texture;flush;free;constructor(e,t,n,r,i,s,a){this.width=e,this.height=t,this.mesh=n,this.buffer=r,this.texture=i,this.flush=s,this.free=a}}class Buffer{width;height;draw;clear;color;depth;free;constructor(e,t,n,r,i,s,a){this.width=e,this.height=t,this.draw=n,this.clear=r,this.color=i,this.depth=s,this.free=a}}let Texture$1=class{width;height;set;free;constructor(e,t,n,r){this.width=e,this.height=t,this.set=n,this.free=r}};class Mesh{free;constructor(e){this.free=e}}class MeshData{indices;positions;uvs;normals;tangents;joints;weights;constructor(e,t,n,r,i,s,a){this.indices=e,this.positions=t,this.uvs=n,this.normals=r,this.tangents=i,this.joints=s,this.weights=a}}class UniformFloat{f;constructor(e){this.f=e}}class UniformInt{i;constructor(e){this.i=e}}class UniformArray{type;value;constructor(e,t){this.type=e,this.value=t}}const GL={DEPTH_BUFFER_BIT:256,STENCIL_BUFFER_BIT:1024,COLOR_BUFFER_BIT:16384,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775,SRC_ALPHA_SATURATE:776,FUNC_ADD:32774,BLEND_EQUATION:32777,BLEND_EQUATION_RGB:32777,BLEND_EQUATION_ALPHA:34877,FUNC_SUBTRACT:32778,FUNC_REVERSE_SUBTRACT:32779,BLEND_DST_RGB:32968,BLEND_SRC_RGB:32969,BLEND_DST_ALPHA:32970,BLEND_SRC_ALPHA:32971,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,BLEND_COLOR:32773,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,ARRAY_BUFFER_BINDING:34964,ELEMENT_ARRAY_BUFFER_BINDING:34965,STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048,BUFFER_SIZE:34660,BUFFER_USAGE:34661,CURRENT_VERTEX_ATTRIB:34342,FRONT:1028,BACK:1029,FRONT_AND_BACK:1032,CULL_FACE:2884,BLEND:3042,DITHER:3024,STENCIL_TEST:2960,DEPTH_TEST:2929,SCISSOR_TEST:3089,POLYGON_OFFSET_FILL:32823,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_COVERAGE:32928,NO_ERROR:0,INVALID_ENUM:1280,INVALID_VALUE:1281,INVALID_OPERATION:1282,OUT_OF_MEMORY:1285,CW:2304,CCW:2305,LINE_WIDTH:2849,ALIASED_POINT_SIZE_RANGE:33901,ALIASED_LINE_WIDTH_RANGE:33902,CULL_FACE_MODE:2885,FRONT_FACE:2886,DEPTH_RANGE:2928,DEPTH_WRITEMASK:2930,DEPTH_CLEAR_VALUE:2931,DEPTH_FUNC:2932,STENCIL_CLEAR_VALUE:2961,STENCIL_FUNC:2962,STENCIL_FAIL:2964,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STENCIL_BACK_FUNC:34816,STENCIL_BACK_FAIL:34817,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,VIEWPORT:2978,SCISSOR_BOX:3088,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,UNPACK_ALIGNMENT:3317,PACK_ALIGNMENT:3333,MAX_TEXTURE_SIZE:3379,MAX_VIEWPORT_DIMS:3386,SUBPIXEL_BITS:3408,RED_BITS:3410,GREEN_BITS:3411,BLUE_BITS:3412,ALPHA_BITS:3413,DEPTH_BITS:3414,STENCIL_BITS:3415,POLYGON_OFFSET_UNITS:10752,POLYGON_OFFSET_FACTOR:32824,TEXTURE_BINDING_2D:32873,SAMPLE_BUFFERS:32936,SAMPLES:32937,SAMPLE_COVERAGE_VALUE:32938,SAMPLE_COVERAGE_INVERT:32939,COMPRESSED_TEXTURE_FORMATS:34467,DONT_CARE:4352,FASTEST:4353,NICEST:4354,GENERATE_MIPMAP_HINT:33170,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FRAGMENT_SHADER:35632,VERTEX_SHADER:35633,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VARYING_VECTORS:36348,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_FRAGMENT_UNIFORM_VECTORS:36349,SHADER_TYPE:35663,DELETE_STATUS:35712,LINK_STATUS:35714,VALIDATE_STATUS:35715,ATTACHED_SHADERS:35717,ACTIVE_UNIFORMS:35718,ACTIVE_ATTRIBUTES:35721,SHADING_LANGUAGE_VERSION:35724,CURRENT_PROGRAM:35725,NEVER:512,LESS:513,EQUAL:514,LEQUAL:515,GREATER:516,NOTEQUAL:517,GEQUAL:518,ALWAYS:519,KEEP:7680,REPLACE:7681,INCR:7682,DECR:7683,INVERT:5386,INCR_WRAP:34055,DECR_WRAP:34056,VENDOR:7936,RENDERER:7937,VERSION:7938,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TEXTURE_2D:3553,TEXTURE:5890,TEXTURE_CUBE_MAP:34067,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,MAX_CUBE_MAP_TEXTURE_SIZE:34076,TEXTURE0:33984,TEXTURE1:33985,TEXTURE2:33986,TEXTURE3:33987,TEXTURE4:33988,TEXTURE5:33989,TEXTURE6:33990,TEXTURE7:33991,TEXTURE8:33992,TEXTURE9:33993,TEXTURE10:33994,TEXTURE11:33995,TEXTURE12:33996,TEXTURE13:33997,TEXTURE14:33998,TEXTURE15:33999,TEXTURE16:34e3,TEXTURE17:34001,TEXTURE18:34002,TEXTURE19:34003,TEXTURE20:34004,TEXTURE21:34005,TEXTURE22:34006,TEXTURE23:34007,TEXTURE24:34008,TEXTURE25:34009,TEXTURE26:34010,TEXTURE27:34011,TEXTURE28:34012,TEXTURE29:34013,TEXTURE30:34014,TEXTURE31:34015,ACTIVE_TEXTURE:34016,REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,IMPLEMENTATION_COLOR_READ_TYPE:35738,IMPLEMENTATION_COLOR_READ_FORMAT:35739,COMPILE_STATUS:35713,LOW_FLOAT:36336,MEDIUM_FLOAT:36337,HIGH_FLOAT:36338,LOW_INT:36339,MEDIUM_INT:36340,HIGH_INT:36341,FRAMEBUFFER:36160,RENDERBUFFER:36161,RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,RENDERBUFFER_WIDTH:36162,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_STENCIL_SIZE:36181,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,COLOR_ATTACHMENT0:36064,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306,NONE:0,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_UNSUPPORTED:36061,FRAMEBUFFER_BINDING:36006,RENDERBUFFER_BINDING:36007,MAX_RENDERBUFFER_SIZE:34024,INVALID_FRAMEBUFFER_OPERATION:1286,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,CONTEXT_LOST_WEBGL:37442,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,BROWSER_DEFAULT_WEBGL:37444,READ_BUFFER:3074,UNPACK_ROW_LENGTH:3314,UNPACK_SKIP_ROWS:3315,UNPACK_SKIP_PIXELS:3316,PACK_ROW_LENGTH:3330,PACK_SKIP_ROWS:3331,PACK_SKIP_PIXELS:3332,COLOR:6144,DEPTH:6145,STENCIL:6146,RED:6403,RGB8:32849,RGBA8:32856,RGB10_A2:32857,TEXTURE_BINDING_3D:32874,UNPACK_SKIP_IMAGES:32877,UNPACK_IMAGE_HEIGHT:32878,TEXTURE_3D:32879,TEXTURE_WRAP_R:32882,MAX_3D_TEXTURE_SIZE:32883,UNSIGNED_INT_2_10_10_10_REV:33640,MAX_ELEMENTS_VERTICES:33e3,MAX_ELEMENTS_INDICES:33001,TEXTURE_MIN_LOD:33082,TEXTURE_MAX_LOD:33083,TEXTURE_BASE_LEVEL:33084,TEXTURE_MAX_LEVEL:33085,MIN:32775,MAX:32776,DEPTH_COMPONENT24:33190,MAX_TEXTURE_LOD_BIAS:34045,TEXTURE_COMPARE_MODE:34892,TEXTURE_COMPARE_FUNC:34893,CURRENT_QUERY:34917,QUERY_RESULT:34918,QUERY_RESULT_AVAILABLE:34919,STREAM_READ:35041,STREAM_COPY:35042,STATIC_READ:35045,STATIC_COPY:35046,DYNAMIC_READ:35049,DYNAMIC_COPY:35050,MAX_DRAW_BUFFERS:34852,DRAW_BUFFER0:34853,DRAW_BUFFER1:34854,DRAW_BUFFER2:34855,DRAW_BUFFER3:34856,DRAW_BUFFER4:34857,DRAW_BUFFER5:34858,DRAW_BUFFER6:34859,DRAW_BUFFER7:34860,DRAW_BUFFER8:34861,DRAW_BUFFER9:34862,DRAW_BUFFER10:34863,DRAW_BUFFER11:34864,DRAW_BUFFER12:34865,DRAW_BUFFER13:34866,DRAW_BUFFER14:34867,DRAW_BUFFER15:34868,MAX_FRAGMENT_UNIFORM_COMPONENTS:35657,MAX_VERTEX_UNIFORM_COMPONENTS:35658,SAMPLER_3D:35679,SAMPLER_2D_SHADOW:35682,FRAGMENT_SHADER_DERIVATIVE_HINT:35723,PIXEL_PACK_BUFFER:35051,PIXEL_UNPACK_BUFFER:35052,PIXEL_PACK_BUFFER_BINDING:35053,PIXEL_UNPACK_BUFFER_BINDING:35055,FLOAT_MAT2x3:35685,FLOAT_MAT2x4:35686,FLOAT_MAT3x2:35687,FLOAT_MAT3x4:35688,FLOAT_MAT4x2:35689,FLOAT_MAT4x3:35690,SRGB:35904,SRGB8:35905,SRGB8_ALPHA8:35907,COMPARE_REF_TO_TEXTURE:34894,RGBA32F:34836,RGB32F:34837,RGBA16F:34842,RGB16F:34843,VERTEX_ATTRIB_ARRAY_INTEGER:35069,MAX_ARRAY_TEXTURE_LAYERS:35071,MIN_PROGRAM_TEXEL_OFFSET:35076,MAX_PROGRAM_TEXEL_OFFSET:35077,MAX_VARYING_COMPONENTS:35659,TEXTURE_2D_ARRAY:35866,TEXTURE_BINDING_2D_ARRAY:35869,R11F_G11F_B10F:35898,UNSIGNED_INT_10F_11F_11F_REV:35899,RGB9_E5:35901,UNSIGNED_INT_5_9_9_9_REV:35902,TRANSFORM_FEEDBACK_BUFFER_MODE:35967,MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS:35968,TRANSFORM_FEEDBACK_VARYINGS:35971,TRANSFORM_FEEDBACK_BUFFER_START:35972,TRANSFORM_FEEDBACK_BUFFER_SIZE:35973,TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN:35976,RASTERIZER_DISCARD:35977,MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS:35978,MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS:35979,INTERLEAVED_ATTRIBS:35980,SEPARATE_ATTRIBS:35981,TRANSFORM_FEEDBACK_BUFFER:35982,TRANSFORM_FEEDBACK_BUFFER_BINDING:35983,RGBA32UI:36208,RGB32UI:36209,RGBA16UI:36214,RGB16UI:36215,RGBA8UI:36220,RGB8UI:36221,RGBA32I:36226,RGB32I:36227,RGBA16I:36232,RGB16I:36233,RGBA8I:36238,RGB8I:36239,RED_INTEGER:36244,RGB_INTEGER:36248,RGBA_INTEGER:36249,SAMPLER_2D_ARRAY:36289,SAMPLER_2D_ARRAY_SHADOW:36292,SAMPLER_CUBE_SHADOW:36293,UNSIGNED_INT_VEC2:36294,UNSIGNED_INT_VEC3:36295,UNSIGNED_INT_VEC4:36296,INT_SAMPLER_2D:36298,INT_SAMPLER_3D:36299,INT_SAMPLER_CUBE:36300,INT_SAMPLER_2D_ARRAY:36303,UNSIGNED_INT_SAMPLER_2D:36306,UNSIGNED_INT_SAMPLER_3D:36307,UNSIGNED_INT_SAMPLER_CUBE:36308,UNSIGNED_INT_SAMPLER_2D_ARRAY:36311,DEPTH_COMPONENT32F:36012,DEPTH32F_STENCIL8:36013,FLOAT_32_UNSIGNED_INT_24_8_REV:36269,FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING:33296,FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE:33297,FRAMEBUFFER_ATTACHMENT_RED_SIZE:33298,FRAMEBUFFER_ATTACHMENT_GREEN_SIZE:33299,FRAMEBUFFER_ATTACHMENT_BLUE_SIZE:33300,FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE:33301,FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE:33302,FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE:33303,FRAMEBUFFER_DEFAULT:33304,UNSIGNED_INT_24_8:34042,DEPTH24_STENCIL8:35056,UNSIGNED_NORMALIZED:35863,DRAW_FRAMEBUFFER_BINDING:36006,READ_FRAMEBUFFER:36008,DRAW_FRAMEBUFFER:36009,READ_FRAMEBUFFER_BINDING:36010,RENDERBUFFER_SAMPLES:36011,FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER:36052,MAX_COLOR_ATTACHMENTS:36063,COLOR_ATTACHMENT1:36065,COLOR_ATTACHMENT2:36066,COLOR_ATTACHMENT3:36067,COLOR_ATTACHMENT4:36068,COLOR_ATTACHMENT5:36069,COLOR_ATTACHMENT6:36070,COLOR_ATTACHMENT7:36071,COLOR_ATTACHMENT8:36072,COLOR_ATTACHMENT9:36073,COLOR_ATTACHMENT10:36074,COLOR_ATTACHMENT11:36075,COLOR_ATTACHMENT12:36076,COLOR_ATTACHMENT13:36077,COLOR_ATTACHMENT14:36078,COLOR_ATTACHMENT15:36079,FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:36182,MAX_SAMPLES:36183,HALF_FLOAT:5131,RG:33319,RG_INTEGER:33320,R8:33321,RG8:33323,R16F:33325,R32F:33326,RG16F:33327,RG32F:33328,R8I:33329,R8UI:33330,R16I:33331,R16UI:33332,R32I:33333,R32UI:33334,RG8I:33335,RG8UI:33336,RG16I:33337,RG16UI:33338,RG32I:33339,RG32UI:33340,VERTEX_ARRAY_BINDING:34229,R8_SNORM:36756,RG8_SNORM:36757,RGB8_SNORM:36758,RGBA8_SNORM:36759,SIGNED_NORMALIZED:36764,COPY_READ_BUFFER:36662,COPY_WRITE_BUFFER:36663,COPY_READ_BUFFER_BINDING:36662,COPY_WRITE_BUFFER_BINDING:36663,UNIFORM_BUFFER:35345,UNIFORM_BUFFER_BINDING:35368,UNIFORM_BUFFER_START:35369,UNIFORM_BUFFER_SIZE:35370,MAX_VERTEX_UNIFORM_BLOCKS:35371,MAX_FRAGMENT_UNIFORM_BLOCKS:35373,MAX_COMBINED_UNIFORM_BLOCKS:35374,MAX_UNIFORM_BUFFER_BINDINGS:35375,MAX_UNIFORM_BLOCK_SIZE:35376,MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS:35377,MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS:35379,UNIFORM_BUFFER_OFFSET_ALIGNMENT:35380,ACTIVE_UNIFORM_BLOCKS:35382,UNIFORM_TYPE:35383,UNIFORM_SIZE:35384,UNIFORM_BLOCK_INDEX:35386,UNIFORM_OFFSET:35387,UNIFORM_ARRAY_STRIDE:35388,UNIFORM_MATRIX_STRIDE:35389,UNIFORM_IS_ROW_MAJOR:35390,UNIFORM_BLOCK_BINDING:35391,UNIFORM_BLOCK_DATA_SIZE:35392,UNIFORM_BLOCK_ACTIVE_UNIFORMS:35394,UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES:35395,UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER:35396,UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER:35398,INVALID_INDEX:4294967295,MAX_VERTEX_OUTPUT_COMPONENTS:37154,MAX_FRAGMENT_INPUT_COMPONENTS:37157,MAX_SERVER_WAIT_TIMEOUT:37137,OBJECT_TYPE:37138,SYNC_CONDITION:37139,SYNC_STATUS:37140,SYNC_FLAGS:37141,SYNC_FENCE:37142,SYNC_GPU_COMMANDS_COMPLETE:37143,UNSIGNALED:37144,SIGNALED:37145,ALREADY_SIGNALED:37146,TIMEOUT_EXPIRED:37147,CONDITION_SATISFIED:37148,WAIT_FAILED:37149,SYNC_FLUSH_COMMANDS_BIT:1,VERTEX_ATTRIB_ARRAY_DIVISOR:35070,ANY_SAMPLES_PASSED:35887,ANY_SAMPLES_PASSED_CONSERVATIVE:36202,SAMPLER_BINDING:35097,RGB10_A2UI:36975,INT_2_10_10_10_REV:36255,TRANSFORM_FEEDBACK:36386,TRANSFORM_FEEDBACK_PAUSED:36387,TRANSFORM_FEEDBACK_ACTIVE:36388,TRANSFORM_FEEDBACK_BINDING:36389,TEXTURE_IMMUTABLE_FORMAT:37167,MAX_ELEMENT_INDEX:36203,TEXTURE_IMMUTABLE_LEVELS:33503,TIMEOUT_IGNORED:-1,MAX_CLIENT_WAIT_TIMEOUT_WEBGL:37447,QUERY_COUNTER_BITS_EXT:34916,TIME_ELAPSED_EXT:35007,TIMESTAMP_EXT:36392,GPU_DISJOINT_EXT:36795,TEXTURE_MAX_ANISOTROPY_EXT:34046,MAX_TEXTURE_MAX_ANISOTROPY_EXT:34047,UNMASKED_VENDOR_WEBGL:37445,UNMASKED_RENDERER_WEBGL:37446,COMPLETION_STATUS_KHR:37297,COMPRESSED_RGB_S3TC_DXT1_EXT:33776,COMPRESSED_RGBA_S3TC_DXT1_EXT:33777,COMPRESSED_RGBA_S3TC_DXT3_EXT:33778,COMPRESSED_RGBA_S3TC_DXT5_EXT:33779,COMPRESSED_SRGB_S3TC_DXT1_EXT:35916,COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT:35917,COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT:35918,COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT:35919,COMPRESSED_R11_EAC:37488,COMPRESSED_SIGNED_R11_EAC:37489,COMPRESSED_RG11_EAC:37490,COMPRESSED_SIGNED_RG11_EAC:37491,COMPRESSED_RGB8_ETC2:37492,COMPRESSED_SRGB8_ETC2:37493,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:37494,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:37495,COMPRESSED_RGBA8_ETC2_EAC:37496,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:37497,COMPRESSED_RGB_PVRTC_4BPPV1_IMG:35840,COMPRESSED_RGB_PVRTC_2BPPV1_IMG:35841,COMPRESSED_RGBA_PVRTC_4BPPV1_IMG:35842,COMPRESSED_RGBA_PVRTC_2BPPV1_IMG:35843,COMPRESSED_RGBA_ASTC_4x4_KHR:37808,COMPRESSED_RGBA_ASTC_5x4_KHR:37809,COMPRESSED_RGBA_ASTC_5x5_KHR:37810,COMPRESSED_RGBA_ASTC_6x5_KHR:37811,COMPRESSED_RGBA_ASTC_6x6_KHR:37812,COMPRESSED_RGBA_ASTC_8x5_KHR:37813,COMPRESSED_RGBA_ASTC_8x6_KHR:37814,COMPRESSED_RGBA_ASTC_8x8_KHR:37815,COMPRESSED_RGBA_ASTC_10x5_KHR:37816,COMPRESSED_RGBA_ASTC_10x6_KHR:37817,COMPRESSED_RGBA_ASTC_10x8_KHR:37818,COMPRESSED_RGBA_ASTC_10x10_KHR:37819,COMPRESSED_RGBA_ASTC_12x10_KHR:37820,COMPRESSED_RGBA_ASTC_12x12_KHR:37821,COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:37840,COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:37841,COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:37842,COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:37843,COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:37844,COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:37845,COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:37846,COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:37847,COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:37848,COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:37849,COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:37850,COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:37851,COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:37852,COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:37853},TYPE_SIZE={[GL.BYTE]:1,[GL.UNSIGNED_BYTE]:1,[GL.SHORT]:2,[GL.UNSIGNED_SHORT]:2,[GL.INT]:4,[GL.UNSIGNED_INT]:4,[GL.FLOAT]:4},TEXTURE_FORMATS={[GL.R8]:[GL.RED,GL.UNSIGNED_BYTE],[GL.R8_SNORM]:[GL.RED,GL.BYTE],[GL.R16F]:[GL.RED,GL.FLOAT],[GL.R32F]:[GL.RED,GL.FLOAT],[GL.R8UI]:[GL.RED_INTEGER,GL.UNSIGNED_BYTE],[GL.R8I]:[GL.RED_INTEGER,GL.BYTE],[GL.R16UI]:[GL.RED_INTEGER,GL.UNSIGNED_SHORT],[GL.R16I]:[GL.RED_INTEGER,GL.SHORT],[GL.R32UI]:[GL.RED_INTEGER,GL.UNSIGNED_INT],[GL.R32I]:[GL.RED_INTEGER,GL.INT],[GL.RG8]:[GL.RG,GL.UNSIGNED_BYTE],[GL.RG8_SNORM]:[GL.RG,GL.BYTE],[GL.RG16F]:[GL.RG,GL.FLOAT],[GL.RG32F]:[GL.RG,GL.FLOAT],[GL.RG8UI]:[GL.RG_INTEGER,GL.UNSIGNED_BYTE],[GL.RG8I]:[GL.RG_INTEGER,GL.BYTE],[GL.RG16UI]:[GL.RG_INTEGER,GL.UNSIGNED_SHORT],[GL.RG16I]:[GL.RG_INTEGER,GL.SHORT],[GL.RG32UI]:[GL.RG_INTEGER,GL.UNSIGNED_INT],[GL.RG32I]:[GL.RG_INTEGER,GL.INT],[GL.RGB8]:[GL.RGB,GL.UNSIGNED_BYTE],[GL.SRGB8]:[GL.RGB,GL.UNSIGNED_BYTE],[GL.RGB565]:[GL.RGB,GL.UNSIGNED_SHORT_5_6_5],[GL.RGB8_SNORM]:[GL.RGB,GL.BYTE],[GL.R11F_G11F_B10F]:[GL.RGB,GL.UNSIGNED_INT_10F_11F_11F_REV],[GL.RGB9_E5]:[GL.RGB,GL.UNSIGNED_INT_5_9_9_9_REV],[GL.RGB16F]:[GL.RGB,GL.FLOAT],[GL.RGB32F]:[GL.RGB,GL.FLOAT],[GL.RGB8UI]:[GL.RGB_INTEGER,GL.UNSIGNED_BYTE],[GL.RGB8I]:[GL.RGB_INTEGER,GL.BYTE],[GL.RGB16UI]:[GL.RGB_INTEGER,GL.UNSIGNED_SHORT],[GL.RGB16I]:[GL.RGB_INTEGER,GL.SHORT],[GL.RGB32UI]:[GL.RGB_INTEGER,GL.UNSIGNED_INT],[GL.RGB32I]:[GL.RGB_INTEGER,GL.INT],[GL.RGBA8]:[GL.RGBA,GL.UNSIGNED_BYTE],[GL.SRGB8_ALPHA8]:[GL.RGBA,GL.UNSIGNED_BYTE],[GL.RGBA8_SNORM]:[GL.RGBA,GL.BYTE],[GL.RGB5_A1]:[GL.RGBA,GL.UNSIGNED_SHORT_5_5_5_1],[GL.RGBA4]:[GL.RGBA,GL.UNSIGNED_SHORT_4_4_4_4],[GL.RGB10_A2]:[GL.RGBA,GL.UNSIGNED_INT_2_10_10_10_REV],[GL.RGBA16F]:[GL.RGBA,GL.FLOAT],[GL.RGBA32F]:[GL.RGBA,GL.FLOAT],[GL.RGBA8UI]:[GL.RGBA_INTEGER,GL.UNSIGNED_BYTE],[GL.RGBA8I]:[GL.RGBA_INTEGER,GL.BYTE],[GL.RGB10_A2UI]:[GL.RGBA_INTEGER,GL.UNSIGNED_INT_2_10_10_10_REV],[GL.RGBA16UI]:[GL.RGBA_INTEGER,GL.UNSIGNED_SHORT],[GL.RGBA16I]:[GL.RGBA_INTEGER,GL.SHORT],[GL.RGBA32I]:[GL.RGBA_INTEGER,GL.INT],[GL.RGBA32UI]:[GL.RGBA_INTEGER,GL.UNSIGNED_INT],[GL.DEPTH_COMPONENT16]:[GL.DEPTH_COMPONENT,GL.UNSIGNED_SHORT],[GL.DEPTH_COMPONENT24]:[GL.DEPTH_COMPONENT,GL.UNSIGNED_INT],[GL.DEPTH_COMPONENT32F]:[GL.DEPTH_COMPONENT,GL.FLOAT],[GL.DEPTH24_STENCIL8]:[GL.DEPTH_STENCIL,GL.UNSIGNED_INT_24_8],[GL.DEPTH32F_STENCIL8]:[GL.DEPTH_STENCIL,GL.FLOAT_32_UNSIGNED_INT_24_8_REV]},COMPRESSED_TEXTURE_TYPES={[GL.COMPRESSED_RGB_S3TC_DXT1_EXT]:!0,[GL.COMPRESSED_RGBA_S3TC_DXT1_EXT]:!0,[GL.COMPRESSED_RGBA_S3TC_DXT3_EXT]:!0,[GL.COMPRESSED_RGBA_S3TC_DXT5_EXT]:!0,[GL.COMPRESSED_SRGB_S3TC_DXT1_EXT]:!0,[GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT]:!0,[GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT]:!0,[GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT]:!0,[GL.COMPRESSED_R11_EAC]:!0,[GL.COMPRESSED_SIGNED_R11_EAC]:!0,[GL.COMPRESSED_RG11_EAC]:!0,[GL.COMPRESSED_SIGNED_RG11_EAC]:!0,[GL.COMPRESSED_RGB8_ETC2]:!0,[GL.COMPRESSED_SRGB8_ETC2]:!0,[GL.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2]:!0,[GL.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2]:!0,[GL.COMPRESSED_RGBA8_ETC2_EAC]:!0,[GL.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC]:!0,[GL.COMPRESSED_RGBA_ASTC_4x4_KHR]:!0,[GL.COMPRESSED_RGBA_ASTC_5x4_KHR]:!0,[GL.COMPRESSED_RGBA_ASTC_5x5_KHR]:!0,[GL.COMPRESSED_RGBA_ASTC_6x5_KHR]:!0,[GL.COMPRESSED_RGBA_ASTC_6x6_KHR]:!0,[GL.COMPRESSED_RGBA_ASTC_8x5_KHR]:!0,[GL.COMPRESSED_RGBA_ASTC_8x6_KHR]:!0,[GL.COMPRESSED_RGBA_ASTC_8x8_KHR]:!0,[GL.COMPRESSED_RGBA_ASTC_10x5_KHR]:!0,[GL.COMPRESSED_RGBA_ASTC_10x6_KHR]:!0,[GL.COMPRESSED_RGBA_ASTC_10x8_KHR]:!0,[GL.COMPRESSED_RGBA_ASTC_10x10_KHR]:!0,[GL.COMPRESSED_RGBA_ASTC_12x10_KHR]:!0,[GL.COMPRESSED_RGBA_ASTC_12x12_KHR]:!0,[GL.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR]:!0,[GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR]:!0,[GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR]:!0,[GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR]:!0,[GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR]:!0,[GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR]:!0,[GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR]:!0,[GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR]:!0,[GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR]:!0,[GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR]:!0,[GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR]:!0,[GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR]:!0,[GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR]:!0,[GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR]:!0,[GL.COMPRESSED_RGB_PVRTC_4BPPV1_IMG]:!0,[GL.COMPRESSED_RGB_PVRTC_2BPPV1_IMG]:!0,[GL.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG]:!0,[GL.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG]:!0},WEBGL_INFO={},DUMMY_UNIT_ARRAY=new Array(1),DUMMY_OBJECT={},TEXTURE_FORMAT_DEFAULTS={[GL.UNSIGNED_BYTE]:{[GL.RED]:GL.R8,[GL.RG]:GL.RG8,[GL.RGB]:GL.RGB8,[GL.RGBA]:GL.RGBA8},[GL.UNSIGNED_SHORT]:{[GL.DEPTH_COMPONENT]:GL.DEPTH_COMPONENT16},[GL.FLOAT]:{[GL.RED]:GL.R16F,[GL.RG]:GL.RG16F,[GL.RGB]:GL.RGB16F,[GL.RGBA]:GL.RGBA16F,[GL.DEPTH_COMPONENT]:GL.DEPTH_COMPONENT32F}};class Cubemap{constructor(e,t,n){if(this.gl=e,this.texture=null,this.appState=t,this.compressed=COMPRESSED_TEXTURE_TYPES[n.internalFormat],void 0!==n.format&&(console.warn("Cubemap option 'format' is deprecated and will be removed. Use 'internalFormat' with a sized format instead."),this.compressed=Boolean(COMPRESSED_TEXTURE_TYPES[n.format]),void 0===n.type&&(n.type=n.format===GL.DEPTH_COMPONENT?GL.UNSIGNED_SHORT:GL.UNSIGNED_BYTE),void 0===n.internalFormat&&(this.compressed?n.internalFormat=n.format:n.internalFormat=TEXTURE_FORMAT_DEFAULTS[n.type][n.format])),this.compressed)this.internalFormat=n.internalFormat,this.format=n.internalFormat,this.type=GL.UNSIGNED_BYTE;else{this.internalFormat=void 0!==n.internalFormat?n.internalFormat:GL.RGBA8;let e=TEXTURE_FORMATS[this.internalFormat];this.format=e[0],this.type=void 0!==n.type?n.type:e[1]}this.currentUnit=-1;let r=Array.isArray(n.negX),i=r?n.negX[0]:n.negX,{width:s=i.width,height:a=i.height,flipY:o=!1,premultiplyAlpha:c=!1,minFilter:l=(i?GL.LINEAR_MIPMAP_NEAREST:GL.NEAREST),magFilter:h=(i?GL.LINEAR:GL.NEAREST),wrapS:u=GL.REPEAT,wrapT:_=GL.REPEAT,compareMode:p=GL.NONE,compareFunc:d=GL.LEQUAL,minLOD:f=null,maxLOD:E=null,baseLevel:m=null,maxLevel:T=null,maxAnisotropy:R=1}=n;this.width=s,this.height=a,this.flipY=o,this.premultiplyAlpha=c,this.minFilter=l,this.magFilter=h,this.wrapS=u,this.wrapT=_,this.compareMode=p,this.compareFunc=d,this.minLOD=f,this.maxLOD=E,this.baseLevel=m,this.maxLevel=T,this.maxAnisotropy=Math.min(R,WEBGL_INFO.MAX_TEXTURE_ANISOTROPY),this.mipmaps=l===GL.LINEAR_MIPMAP_NEAREST||l===GL.LINEAR_MIPMAP_LINEAR,this.miplevelsProvided=r&&n.negX.length>1,this.levels=this.mipmaps?Math.floor(Math.log2(Math.min(this.width,this.height)))+1:1,this.restore(n)}restore(e=DUMMY_OBJECT){this.texture=this.gl.createTexture(),-1!==this.currentUnit&&(this.appState.textures[this.currentUnit]=null),this.bind(0),this.gl.pixelStorei(GL.UNPACK_FLIP_Y_WEBGL,this.flipY),this.gl.pixelStorei(GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha),this.gl.texParameteri(GL.TEXTURE_CUBE_MAP,GL.TEXTURE_MAG_FILTER,this.magFilter),this.gl.texParameteri(GL.TEXTURE_CUBE_MAP,GL.TEXTURE_MIN_FILTER,this.minFilter),this.gl.texParameteri(GL.TEXTURE_CUBE_MAP,GL.TEXTURE_WRAP_S,this.wrapS),this.gl.texParameteri(GL.TEXTURE_CUBE_MAP,GL.TEXTURE_WRAP_T,this.wrapT),this.gl.texParameteri(GL.TEXTURE_CUBE_MAP,GL.TEXTURE_COMPARE_FUNC,this.compareFunc),this.gl.texParameteri(GL.TEXTURE_CUBE_MAP,GL.TEXTURE_COMPARE_MODE,this.compareMode),null!==this.baseLevel&&this.gl.texParameteri(GL.TEXTURE_CUBE_MAP,GL.TEXTURE_BASE_LEVEL,this.baseLevel),null!==this.maxLevel&&this.gl.texParameteri(GL.TEXTURE_CUBE_MAP,GL.TEXTURE_MAX_LEVEL,this.maxLevel),null!==this.minLOD&&this.gl.texParameteri(GL.TEXTURE_CUBE_MAP,GL.TEXTURE_MIN_LOD,this.minLOD),null!==this.maxLOD&&this.gl.texParameteri(GL.TEXTURE_CUBE_MAP,GL.TEXTURE_MAX_LOD,this.maxLOD),this.maxAnisotropy>1&&this.gl.texParameteri(GL.TEXTURE_CUBE_MAP,GL.TEXTURE_MAX_ANISOTROPY_EXT,this.maxAnisotropy),this.gl.texStorage2D(GL.TEXTURE_CUBE_MAP,this.levels,this.internalFormat,this.width,this.height);let{negX:t,posX:n,negY:r,posY:i,negZ:s,posZ:a}=e;return t&&(this.faceData(GL.TEXTURE_CUBE_MAP_NEGATIVE_X,t),this.faceData(GL.TEXTURE_CUBE_MAP_POSITIVE_X,n),this.faceData(GL.TEXTURE_CUBE_MAP_NEGATIVE_Y,r),this.faceData(GL.TEXTURE_CUBE_MAP_POSITIVE_Y,i),this.faceData(GL.TEXTURE_CUBE_MAP_NEGATIVE_Z,s),this.faceData(GL.TEXTURE_CUBE_MAP_POSITIVE_Z,a)),this.mipmaps&&!this.miplevelsProvided&&this.gl.generateMipmap(GL.TEXTURE_CUBE_MAP),this}delete(){return this.texture&&(this.gl.deleteTexture(this.texture),this.texture=null,this.appState.textures[this.currentUnit]=null,this.currentUnit=-1),this}faceData(e,t){Array.isArray(t)||(DUMMY_UNIT_ARRAY[0]=t,t=DUMMY_UNIT_ARRAY);let n,r=this.mipmaps?t.length:1,i=this.width,s=this.height;if(this.compressed)for(n=0;n<r;++n)this.gl.compressedTexSubImage2D(e,n,0,0,i,s,this.format,t[n]),i=Math.max(i>>1,1),s=Math.max(s>>1,1);else for(n=0;n<r;++n)this.gl.texSubImage2D(e,n,0,0,i,s,this.format,this.type,t[n]),i=Math.max(i>>1,1),s=Math.max(s>>1,1);return this}bind(e){let t=this.appState.textures[e];return t!==this&&(t&&(t.currentUnit=-1),-1!==this.currentUnit&&(this.appState.textures[this.currentUnit]=null),this.gl.activeTexture(GL.TEXTURE0+e),this.gl.bindTexture(GL.TEXTURE_CUBE_MAP,this.texture),this.appState.textures[e]=this,this.currentUnit=e),this}}class DrawCall{constructor(e,t,n,r=null,i){this.gl=e,this.currentProgram=n,this.drawPrimitive=GL.TRIANGLES,this.currentVertexArray=r,this.currentTransformFeedback=null,this.appState=t,this.uniformIndices={},this.uniformNames=new Array(WEBGL_INFO.MAX_UNIFORMS),this.uniformValues=new Array(WEBGL_INFO.MAX_UNIFORMS),this.uniformCount=0,this.uniformBuffers=new Array(WEBGL_INFO.MAX_UNIFORM_BUFFERS),this.uniformBlockNames=new Array(WEBGL_INFO.MAX_UNIFORM_BUFFERS),this.uniformBlockCount=0,this.textures=new Array(WEBGL_INFO.MAX_TEXTURE_UNITS),this.textureCount=0,this.offsets=new Int32Array(1),this.numElements=new Int32Array(1),this.numInstances=new Int32Array(1),this.currentVertexArray&&(this.numElements[0]=this.currentVertexArray.numElements,this.numInstances[0]=this.currentVertexArray.numInstances),this.numDraws=1,void 0!==i&&(console.warn("Primitive argument to 'App.createDrawCall' is deprecated and will be removed. Use 'DrawCall.primitive' instead."),this.primitive(i))}primitive(e){return this.drawPrimitive=e,this}transformFeedback(e){return this.currentTransformFeedback=e,this}uniform(e,t){let n=this.uniformIndices[e];return void 0===n&&(n=this.uniformCount++,this.uniformIndices[e]=n,this.uniformNames[n]=e),this.uniformValues[n]=t,this}texture(e,t){let n=this.currentProgram.samplers[e];return this.textures[n]=t,this}uniformBlock(e,t){let n=this.currentProgram.uniformBlocks[e];return this.uniformBuffers[n]=t,this}drawRanges(...e){this.numDraws=e.length,this.offsets.length<this.numDraws&&(this.offsets=new Int32Array(this.numDraws)),this.numElements.length<this.numDraws&&(this.numElements=new Int32Array(this.numDraws)),this.numInstances.length<this.numDraws&&(this.numInstances=new Int32Array(this.numDraws));for(let t=0;t<this.numDraws;++t){let n=e[t];this.offsets[t]=n[0],this.numElements[t]=n[1],this.numInstances[t]=n[2]||1}return this}draw(){let e=this.uniformNames,t=this.uniformValues,n=this.uniformBuffers,r=this.currentProgram.uniformBlockCount,i=this.textures,s=this.currentProgram.samplerCount,a=!1;this.currentProgram.bind(),this.currentVertexArray&&(this.currentVertexArray.bind(),a=this.currentVertexArray.indexed);for(let n=0;n<this.uniformCount;++n)this.currentProgram.uniform(e[n],t[n]);for(let e=0;e<r;++e)n[e].bind(e);for(let e=0;e<s;++e)i[e].bind(e);if(this.currentTransformFeedback?(this.currentTransformFeedback.bind(),this.gl.beginTransformFeedback(this.drawPrimitive)):this.appState.transformFeedback&&(this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK,null),this.appState.transformFeedback=null),WEBGL_INFO.MULTI_DRAW_INSTANCED){let e=this.appState.extensions.multiDrawInstanced;a?e.multiDrawElementsInstancedWEBGL(this.drawPrimitive,this.numElements,0,this.currentVertexArray.indexType,this.offsets,0,this.numInstances,0,this.numDraws):e.multiDrawArraysInstancedWEBGL(this.drawPrimitive,this.offsets,0,this.numElements,0,this.numInstances,0,this.numDraws)}else if(a)for(let e=0;e<this.numDraws;++e)this.gl.drawElementsInstanced(this.drawPrimitive,this.numElements[e],this.currentVertexArray.indexType,this.offsets[e],this.numInstances[e]);else for(let e=0;e<this.numDraws;++e)this.gl.drawArraysInstanced(this.drawPrimitive,this.offsets[e],this.numElements[e],this.numInstances[e]);return this.currentTransformFeedback&&this.gl.endTransformFeedback(),this}}class Texture{constructor(e,t,n,r,i=r.width,s=r.height,a,o,c=DUMMY_OBJECT){if(this.gl=e,this.binding=n,this.texture=null,this.width=i||0,this.height=s||0,this.depth=a||0,this.is3D=o,this.appState=t,this.compressed=Boolean(COMPRESSED_TEXTURE_TYPES[c.internalFormat]),void 0!==c.format&&(console.warn("Texture option 'format' is deprecated and will be removed. Use 'internalFormat' with a sized format instead."),this.compressed=Boolean(COMPRESSED_TEXTURE_TYPES[c.format]),void 0===c.type&&(c.type=c.format===GL.DEPTH_COMPONENT?GL.UNSIGNED_SHORT:GL.UNSIGNED_BYTE),void 0===c.internalFormat&&(this.compressed?c.internalFormat=c.format:c.internalFormat=TEXTURE_FORMAT_DEFAULTS[c.type][c.format])),this.compressed)this.internalFormat=c.internalFormat,this.format=this.internalFormat,this.type=GL.UNSIGNED_BYTE;else{this.internalFormat=void 0!==c.internalFormat?c.internalFormat:GL.RGBA8;let e=TEXTURE_FORMATS[this.internalFormat];this.format=e[0],this.type=void 0!==c.type?c.type:e[1]}this.currentUnit=-1;let{minFilter:l=(r?GL.LINEAR_MIPMAP_NEAREST:GL.NEAREST),magFilter:h=(r?GL.LINEAR:GL.NEAREST),wrapS:u=GL.REPEAT,wrapT:_=GL.REPEAT,wrapR:p=GL.REPEAT,compareMode:d=GL.NONE,compareFunc:f=GL.LEQUAL,minLOD:E=null,maxLOD:m=null,baseLevel:T=null,maxLevel:R=null,maxAnisotropy:g=1,flipY:v=!1,premultiplyAlpha:A=!1}=c;this.minFilter=l,this.magFilter=h,this.wrapS=u,this.wrapT=_,this.wrapR=p,this.compareMode=d,this.compareFunc=f,this.minLOD=E,this.maxLOD=m,this.baseLevel=T,this.maxLevel=R,this.maxAnisotropy=Math.min(g,WEBGL_INFO.MAX_TEXTURE_ANISOTROPY),this.flipY=v,this.premultiplyAlpha=A,this.mipmaps=l===GL.LINEAR_MIPMAP_NEAREST||l===GL.LINEAR_MIPMAP_LINEAR,this.restore(r)}restore(e){return this.texture=null,this.resize(this.width,this.height,this.depth),e&&this.data(e),this}resize(e,t,n){if(n=n||0,this.texture&&e===this.width&&t===this.height&&n===this.depth)return this;let r;return this.gl.deleteTexture(this.texture),-1!==this.currentUnit&&(this.appState.textures[this.currentUnit]=null),this.texture=this.gl.createTexture(),this.bind(Math.max(this.currentUnit,0)),this.width=e,this.height=t,this.depth=n,this.gl.texParameteri(this.binding,GL.TEXTURE_MIN_FILTER,this.minFilter),this.gl.texParameteri(this.binding,GL.TEXTURE_MAG_FILTER,this.magFilter),this.gl.texParameteri(this.binding,GL.TEXTURE_WRAP_S,this.wrapS),this.gl.texParameteri(this.binding,GL.TEXTURE_WRAP_T,this.wrapT),this.gl.texParameteri(this.binding,GL.TEXTURE_WRAP_R,this.wrapR),this.gl.texParameteri(this.binding,GL.TEXTURE_COMPARE_FUNC,this.compareFunc),this.gl.texParameteri(this.binding,GL.TEXTURE_COMPARE_MODE,this.compareMode),null!==this.minLOD&&this.gl.texParameterf(this.binding,GL.TEXTURE_MIN_LOD,this.minLOD),null!==this.maxLOD&&this.gl.texParameterf(this.binding,GL.TEXTURE_MAX_LOD,this.maxLOD),null!==this.baseLevel&&this.gl.texParameteri(this.binding,GL.TEXTURE_BASE_LEVEL,this.baseLevel),null!==this.maxLevel&&this.gl.texParameteri(this.binding,GL.TEXTURE_MAX_LEVEL,this.maxLevel),this.maxAnisotropy>1&&this.gl.texParameteri(this.binding,GL.TEXTURE_MAX_ANISOTROPY_EXT,this.maxAnisotropy),this.is3D?(r=this.mipmaps?Math.floor(Math.log2(Math.max(Math.max(this.width,this.height),this.depth)))+1:1,this.gl.texStorage3D(this.binding,r,this.internalFormat,this.width,this.height,this.depth)):(r=this.mipmaps?Math.floor(Math.log2(Math.max(this.width,this.height)))+1:1,this.gl.texStorage2D(this.binding,r,this.internalFormat,this.width,this.height)),this}data(e){Array.isArray(e)||(DUMMY_UNIT_ARRAY[0]=e,e=DUMMY_UNIT_ARRAY);let t,n=this.mipmaps?e.length:1,r=this.width,i=this.height,s=this.depth,a=this.mipmaps&&1===e.length;if(this.bind(Math.max(this.currentUnit,0)),this.gl.pixelStorei(GL.UNPACK_FLIP_Y_WEBGL,this.flipY),this.gl.pixelStorei(GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha),this.compressed)if(this.is3D)for(t=0;t<n;++t)this.gl.compressedTexSubImage3D(this.binding,t,0,0,0,r,i,s,this.format,e[t]),r=Math.max(r>>1,1),i=Math.max(i>>1,1),s=Math.max(s>>1,1);else for(t=0;t<n;++t)this.gl.compressedTexSubImage2D(this.binding,t,0,0,r,i,this.format,e[t]),r=Math.max(r>>1,1),i=Math.max(i>>1,1);else if(this.is3D)for(t=0;t<n;++t)this.gl.texSubImage3D(this.binding,t,0,0,0,r,i,s,this.format,this.type,e[t]),r=Math.max(r>>1,1),i=Math.max(i>>1,1),s=Math.max(s>>1,1);else for(t=0;t<n;++t)this.gl.texSubImage2D(this.binding,t,0,0,r,i,this.format,this.type,e[t]),r=Math.max(r>>1,1),i=Math.max(i>>1,1);return a&&this.gl.generateMipmap(this.binding),this}delete(){return this.texture&&(this.gl.deleteTexture(this.texture),this.texture=null,-1!==this.currentUnit&&this.appState.textures[this.currentUnit]===this&&(this.appState.textures[this.currentUnit]=null,this.currentUnit=-1)),this}bind(e){let t=this.appState.textures[e];return this.appState.activeTexture!==e&&(this.gl.activeTexture(GL.TEXTURE0+e),this.appState.activeTexture=e),t!==this&&(t&&(t.currentUnit=-1),-1!==this.currentUnit&&(this.appState.textures[this.currentUnit]=null),this.gl.bindTexture(this.binding,this.texture),this.appState.textures[e]=this,this.currentUnit=e),this}}class Renderbuffer{constructor(e,t,n,r,i=0){this.gl=e,this.renderbuffer=null,this.width=t,this.height=n,this.internalFormat=r,this.samples=i,this.restore()}restore(){return this.renderbuffer=this.gl.createRenderbuffer(),this.resize(this.width,this.height),this}resize(e,t){return this.width=e,this.height=t,this.gl.bindRenderbuffer(GL.RENDERBUFFER,this.renderbuffer),this.gl.renderbufferStorageMultisample(GL.RENDERBUFFER,this.samples,this.internalFormat,this.width,this.height),this.gl.bindRenderbuffer(GL.RENDERBUFFER,null),this}delete(){return this.gl.deleteRenderbuffer(this.renderbuffer),this.renderbuffer=null,this}}class Framebuffer{constructor(e,t){this.gl=e,this.framebuffer=null,this.appState=t,this.numColorTargets=0,this.colorAttachments=[],this.colorAttachmentEnums=[],this.colorAttachmentTargets=[],this.depthAttachment=null,this.depthAttachmentTarget=null,this.width=0,this.height=0,this.restore()}restore(){return this.appState.drawFramebuffer===this&&(this.appState.drawFramebuffer=null),this.appState.readFramebuffer===this&&(this.appState.readFramebuffer=null),this.framebuffer=this.gl.createFramebuffer(),this}colorTarget(e,t,n=(t.is3D?0:GL.TEXTURE_2D)){if(e>=this.numColorTargets){let t=e+1;this.colorAttachmentEnums.length=t,this.colorAttachments.length=t,this.colorAttachmentTargets.length=t;for(let e=this.numColorTargets;e<t-1;++e)this.colorAttachmentEnums[e]=GL.NONE,this.colorAttachments[e]=null,this.colorAttachmentTargets[e]=0;this.numColorTargets=t}this.colorAttachmentEnums[e]=GL.COLOR_ATTACHMENT0+e,this.colorAttachments[e]=t,this.colorAttachmentTargets[e]=n;let r=this.bindAndCaptureState();return t instanceof Renderbuffer?this.gl.framebufferRenderbuffer(GL.DRAW_FRAMEBUFFER,this.colorAttachmentEnums[e],GL.RENDERBUFFER,t.renderbuffer):t.is3D?this.gl.framebufferTextureLayer(GL.DRAW_FRAMEBUFFER,this.colorAttachmentEnums[e],t.texture,0,n):this.gl.framebufferTexture2D(GL.DRAW_FRAMEBUFFER,this.colorAttachmentEnums[e],n,t.texture,0),this.gl.drawBuffers(this.colorAttachmentEnums),this.width=t.width,this.height=t.height,this.restoreState(r),this}depthTarget(e,t=(e.is3D?0:GL.TEXTURE_2D)){let n=this.bindAndCaptureState();return this.depthAttachment=e,this.depthAttachmentTarget=t,e instanceof Renderbuffer?this.gl.framebufferRenderbuffer(GL.DRAW_FRAMEBUFFER,GL.DEPTH_ATTACHMENT,GL.RENDERBUFFER,e.renderbuffer):e.is3D?this.gl.framebufferTextureLayer(GL.DRAW_FRAMEBUFFER,GL.DEPTH_ATTACHMENT,e.texture,0,t):this.gl.framebufferTexture2D(GL.DRAW_FRAMEBUFFER,GL.DEPTH_ATTACHMENT,t,e.texture,0),this.width=e.width,this.height=e.height,this.restoreState(n),this}resize(e=this.gl.drawingBufferWidth,t=this.gl.drawingBufferHeight){let n=this.bindAndCaptureState();for(let n=0;n<this.numColorTargets;++n){let r=this.colorAttachments[n];r&&(r.resize(e,t),r instanceof Texture&&(r.is3D?this.gl.framebufferTextureLayer(GL.DRAW_FRAMEBUFFER,this.colorAttachmentEnums[n],r.texture,0,this.colorAttachmentTargets[n]):this.gl.framebufferTexture2D(GL.DRAW_FRAMEBUFFER,this.colorAttachmentEnums[n],this.colorAttachmentTargets[n],r.texture,0)))}return this.depthAttachment&&(this.depthAttachment.resize(e,t),this.depthAttachment instanceof Texture&&(this.depthAttachment.is3D?this.gl.framebufferTextureLayer(GL.DRAW_FRAMEBUFFER,GL.DEPTH_ATTACHMENT,this.depthAttachment.texture,0,this.depthAttachmentTarget):this.gl.framebufferTexture2D(GL.DRAW_FRAMEBUFFER,GL.DEPTH_ATTACHMENT,this.depthAttachmentTarget,this.depthAttachment.texture,0))),this.width=e,this.height=t,this.restoreState(n),this}delete(){return this.framebuffer&&(this.gl.deleteFramebuffer(this.framebuffer),this.framebuffer=null,this.appState.drawFramebuffer===this&&(this.gl.bindFramebuffer(GL.DRAW_FRAMEBUFFER,null),this.appState.drawFramebuffer=null),this.appState.readFramebuffer===this&&(this.gl.bindFramebuffer(GL.READ_FRAMEBUFFER,null),this.appState.readFramebuffer=null)),this}getStatus(){let e=this.bindAndCaptureState(),t=this.gl.checkFramebufferStatus(GL.DRAW_FRAMEBUFFER);return this.restoreState(e),t}bindForDraw(){return this.appState.drawFramebuffer!==this&&(this.gl.bindFramebuffer(GL.DRAW_FRAMEBUFFER,this.framebuffer),this.appState.drawFramebuffer=this),this}bindForRead(){return this.appState.readFramebuffer!==this&&(this.gl.bindFramebuffer(this.gl.READ_FRAMEBUFFER,this.framebuffer),this.appState.readFramebuffer=this),this}bindAndCaptureState(){let e=this.appState.drawFramebuffer;return e!==this&&this.gl.bindFramebuffer(GL.DRAW_FRAMEBUFFER,this.framebuffer),e}restoreState(e){return e!==this&&this.gl.bindFramebuffer(GL.DRAW_FRAMEBUFFER,e?e.framebuffer:null),this}get colorTextures(){return console.error("Framebuffer.colorTextures is deprecated and will be removed. Please use Framebuffer.colorAttachments."),this.colorAttachments}get depthTexture(){return console.error("Framebuffer.depthTexture is deprecated and will be removed. Please use Framebuffer.depthAttachment."),this.depthAttachment}}class Shader{constructor(e,t,n,r){this.gl=e,this.appState=t,this.shader=null,this.type=n,this.source=r.trim(),this.restore()}restore(){return this.shader=this.gl.createShader(this.type),this.gl.shaderSource(this.shader,this.source),this.gl.compileShader(this.shader),this}translatedSource(){return WEBGL_INFO.DEBUG_SHADERS?this.appState.extensions.debugShaders.getTranslatedShaderSource(this.shader):"(Unavailable)"}delete(){return this.shader&&(this.gl.deleteShader(this.shader),this.shader=null),this}checkCompilation(){return(()=>{if(35632==this.type)return!0;let e="//// code",t=e=>e.split(":").slice(3).join(":");if(this.source.includes(e)){let n=(t=>{let n=0,r=t.split("");for(let i=0;i<r.length;i++)if("\n"==r[i]&&n++,t.substr(i,9)===e)return n;return-1})(this.source);return this.gl.getShaderInfoLog(this.shader).split("\n").slice(0,-1).forEach((r=>{let i=(e=>parseInt(e.split(":")[2]))(r);i<n&&console.error("error before "+e);let s=e=>"    "+this.source.split("\n")[i-1+e];console.error(["line:"+(i-n),"    "+s(-2),"    "+s(-1),">>>>"+s(0),"    "+s(1),"    "+s(2),t(r)].join("\n"))})),!0}})(),this}}const UNIFORM_FUNC_NAME={};UNIFORM_FUNC_NAME[GL.BOOL]="uniform1i",UNIFORM_FUNC_NAME[GL.INT]="uniform1i",UNIFORM_FUNC_NAME[GL.SAMPLER_2D]="uniform1i",UNIFORM_FUNC_NAME[GL.INT_SAMPLER_2D]="uniform1i",UNIFORM_FUNC_NAME[GL.UNSIGNED_INT_SAMPLER_2D]="uniform1i",UNIFORM_FUNC_NAME[GL.SAMPLER_2D_SHADOW]="uniform1i",UNIFORM_FUNC_NAME[GL.SAMPLER_2D_ARRAY]="uniform1i",UNIFORM_FUNC_NAME[GL.INT_SAMPLER_2D_ARRAY]="uniform1i",UNIFORM_FUNC_NAME[GL.UNSIGNED_INT_SAMPLER_2D_ARRAY]="uniform1i",UNIFORM_FUNC_NAME[GL.SAMPLER_2D_ARRAY_SHADOW]="uniform1i",UNIFORM_FUNC_NAME[GL.SAMPLER_CUBE]="uniform1i",UNIFORM_FUNC_NAME[GL.INT_SAMPLER_CUBE]="uniform1i",UNIFORM_FUNC_NAME[GL.UNSIGNED_INT_SAMPLER_CUBE]="uniform1i",UNIFORM_FUNC_NAME[GL.SAMPLER_CUBE_SHADOW]="uniform1i",UNIFORM_FUNC_NAME[GL.SAMPLER_3D]="uniform1i",UNIFORM_FUNC_NAME[GL.INT_SAMPLER_3D]="uniform1i",UNIFORM_FUNC_NAME[GL.UNSIGNED_INT_SAMPLER_3D]="uniform1i",UNIFORM_FUNC_NAME[GL.UNSIGNED_INT]="uniform1ui",UNIFORM_FUNC_NAME[GL.FLOAT]="uniform1f",UNIFORM_FUNC_NAME[GL.FLOAT_VEC2]="uniform2f",UNIFORM_FUNC_NAME[GL.FLOAT_VEC3]="uniform3f",UNIFORM_FUNC_NAME[GL.FLOAT_VEC4]="uniform4f",UNIFORM_FUNC_NAME[GL.INT_VEC2]="uniform2i",UNIFORM_FUNC_NAME[GL.INT_VEC3]="uniform3i",UNIFORM_FUNC_NAME[GL.INT_VEC4]="uniform4i",UNIFORM_FUNC_NAME[GL.UNSIGNED_INT_VEC2]="uniform2ui",UNIFORM_FUNC_NAME[GL.UNSIGNED_INT_VEC3]="uniform3ui",UNIFORM_FUNC_NAME[GL.UNSIGNED_INT_VEC4]="uniform4ui",UNIFORM_FUNC_NAME[GL.BOOL_VEC2]="uniform2i",UNIFORM_FUNC_NAME[GL.BOOL_VEC3]="uniform3i",UNIFORM_FUNC_NAME[GL.BOOL_VEC4]="uniform4i",UNIFORM_FUNC_NAME[GL.FLOAT_MAT2]="uniformMatrix2fv",UNIFORM_FUNC_NAME[GL.FLOAT_MAT3]="uniformMatrix3fv",UNIFORM_FUNC_NAME[GL.FLOAT_MAT4]="uniformMatrix4fv",UNIFORM_FUNC_NAME[GL.FLOAT_MAT2x3]="uniformMatrix2x3fv",UNIFORM_FUNC_NAME[GL.FLOAT_MAT2x4]="uniformMatrix2x4fv",UNIFORM_FUNC_NAME[GL.FLOAT_MAT3x2]="uniformMatrix3x2fv",UNIFORM_FUNC_NAME[GL.FLOAT_MAT3x4]="uniformMatrix3x4fv",UNIFORM_FUNC_NAME[GL.FLOAT_MAT4x2]="uniformMatrix4x2fv",UNIFORM_FUNC_NAME[GL.FLOAT_MAT4x3]="uniformMatrix4x3fv";const UNIFORM_COMPONENT_COUNT={};UNIFORM_COMPONENT_COUNT[GL.BOOL]=1,UNIFORM_COMPONENT_COUNT[GL.INT]=1,UNIFORM_COMPONENT_COUNT[GL.SAMPLER_2D]=1,UNIFORM_COMPONENT_COUNT[GL.INT_SAMPLER_2D]=1,UNIFORM_COMPONENT_COUNT[GL.UNSIGNED_INT_SAMPLER_2D]=1,UNIFORM_COMPONENT_COUNT[GL.SAMPLER_2D_SHADOW]=1,UNIFORM_COMPONENT_COUNT[GL.SAMPLER_2D_ARRAY]=1,UNIFORM_COMPONENT_COUNT[GL.INT_SAMPLER_2D_ARRAY]=1,UNIFORM_COMPONENT_COUNT[GL.UNSIGNED_INT_SAMPLER_2D_ARRAY]=1,UNIFORM_COMPONENT_COUNT[GL.SAMPLER_2D_ARRAY_SHADOW]=1,UNIFORM_COMPONENT_COUNT[GL.SAMPLER_CUBE]=1,UNIFORM_COMPONENT_COUNT[GL.INT_SAMPLER_CUBE]=1,UNIFORM_COMPONENT_COUNT[GL.UNSIGNED_INT_SAMPLER_CUBE]=1,UNIFORM_COMPONENT_COUNT[GL.SAMPLER_CUBE_SHADOW]=1,UNIFORM_COMPONENT_COUNT[GL.SAMPLER_3D]=1,UNIFORM_COMPONENT_COUNT[GL.INT_SAMPLER_3D]=1,UNIFORM_COMPONENT_COUNT[GL.UNSIGNED_INT_SAMPLER_3D]=1,UNIFORM_COMPONENT_COUNT[GL.UNSIGNED_INT]=1,UNIFORM_COMPONENT_COUNT[GL.FLOAT]=1,UNIFORM_COMPONENT_COUNT[GL.FLOAT_VEC2]=2,UNIFORM_COMPONENT_COUNT[GL.FLOAT_VEC3]=3,UNIFORM_COMPONENT_COUNT[GL.FLOAT_VEC4]=4,UNIFORM_COMPONENT_COUNT[GL.INT_VEC2]=2,UNIFORM_COMPONENT_COUNT[GL.INT_VEC3]=3,UNIFORM_COMPONENT_COUNT[GL.INT_VEC4]=4,UNIFORM_COMPONENT_COUNT[GL.UNSIGNED_INT_VEC2]=2,UNIFORM_COMPONENT_COUNT[GL.UNSIGNED_INT_VEC3]=3,UNIFORM_COMPONENT_COUNT[GL.UNSIGNED_INT_VEC4]=4,UNIFORM_COMPONENT_COUNT[GL.BOOL_VEC2]=2,UNIFORM_COMPONENT_COUNT[GL.BOOL_VEC3]=3,UNIFORM_COMPONENT_COUNT[GL.BOOL_VEC4]=4,UNIFORM_COMPONENT_COUNT[GL.FLOAT_MAT2]=4,UNIFORM_COMPONENT_COUNT[GL.FLOAT_MAT3]=9,UNIFORM_COMPONENT_COUNT[GL.FLOAT_MAT4]=16,UNIFORM_COMPONENT_COUNT[GL.FLOAT_MAT2x3]=6,UNIFORM_COMPONENT_COUNT[GL.FLOAT_MAT2x4]=8,UNIFORM_COMPONENT_COUNT[GL.FLOAT_MAT3x2]=6,UNIFORM_COMPONENT_COUNT[GL.FLOAT_MAT3x4]=12,UNIFORM_COMPONENT_COUNT[GL.FLOAT_MAT4x2]=8,UNIFORM_COMPONENT_COUNT[GL.FLOAT_MAT4x3]=12;const UNIFORM_CACHE_CLASS={};UNIFORM_CACHE_CLASS[GL.INT]=Int32Array,UNIFORM_CACHE_CLASS[GL.SAMPLER_2D]=Int32Array,UNIFORM_CACHE_CLASS[GL.INT_SAMPLER_2D]=Int32Array,UNIFORM_CACHE_CLASS[GL.UNSIGNED_INT_SAMPLER_2D]=Int32Array,UNIFORM_CACHE_CLASS[GL.SAMPLER_2D_SHADOW]=Int32Array,UNIFORM_CACHE_CLASS[GL.SAMPLER_2D_ARRAY]=Int32Array,UNIFORM_CACHE_CLASS[GL.INT_SAMPLER_2D_ARRAY]=Int32Array,UNIFORM_CACHE_CLASS[GL.UNSIGNED_INT_SAMPLER_2D_ARRAY]=Int32Array,UNIFORM_CACHE_CLASS[GL.SAMPLER_2D_ARRAY_SHADOW]=Int32Array,UNIFORM_CACHE_CLASS[GL.SAMPLER_CUBE]=Int32Array,UNIFORM_CACHE_CLASS[GL.INT_SAMPLER_CUBE]=Int32Array,UNIFORM_CACHE_CLASS[GL.UNSIGNED_INT_SAMPLER_CUBE]=Int32Array,UNIFORM_CACHE_CLASS[GL.SAMPLER_CUBE_SHADOW]=Int32Array,UNIFORM_CACHE_CLASS[GL.SAMPLER_3D]=Int32Array,UNIFORM_CACHE_CLASS[GL.INT_SAMPLER_3D]=Int32Array,UNIFORM_CACHE_CLASS[GL.UNSIGNED_INT_SAMPLER_3D]=Int32Array,UNIFORM_CACHE_CLASS[GL.UNSIGNED_INT]=Uint32Array,UNIFORM_CACHE_CLASS[GL.FLOAT]=Float32Array,UNIFORM_CACHE_CLASS[GL.FLOAT_VEC2]=Float32Array,UNIFORM_CACHE_CLASS[GL.FLOAT_VEC3]=Float32Array,UNIFORM_CACHE_CLASS[GL.FLOAT_VEC4]=Float32Array,UNIFORM_CACHE_CLASS[GL.INT_VEC2]=Int32Array,UNIFORM_CACHE_CLASS[GL.INT_VEC3]=Int32Array,UNIFORM_CACHE_CLASS[GL.INT_VEC4]=Int32Array,UNIFORM_CACHE_CLASS[GL.UNSIGNED_INT_VEC2]=Uint32Array,UNIFORM_CACHE_CLASS[GL.UNSIGNED_INT_VEC3]=Uint32Array,UNIFORM_CACHE_CLASS[GL.UNSIGNED_INT_VEC4]=Uint32Array;class SingleComponentUniform{constructor(e,t,n){this.gl=e,this.handle=t,this.glFuncName=UNIFORM_FUNC_NAME[n],this.cache=n!==GL.BOOL&&0}set(e){this.cache!==e&&(this.gl[this.glFuncName](this.handle,e),this.cache=e)}}class MultiNumericUniform{constructor(e,t,n,r){this.gl=e,this.handle=t,this.glFuncName=UNIFORM_FUNC_NAME[n]+"v",this.count=r,this.cache=new UNIFORM_CACHE_CLASS[n](UNIFORM_COMPONENT_COUNT[n]*r)}set(e){for(let t=0,n=e.length;t<n;++t)if(this.cache[t]!==e[t])return this.gl[this.glFuncName](this.handle,e),void this.cache.set(e)}}class MultiBoolUniform{constructor(e,t,n,r){this.gl=e,this.handle=t,this.glFuncName=UNIFORM_FUNC_NAME[n]+"v",this.count=r,this.cache=new Array(UNIFORM_COMPONENT_COUNT[n]*r).fill(!1)}set(e){for(let t=0,n=e.length;t<n;++t)if(this.cache[t]!==e[t]){this.gl[this.glFuncName](this.handle,e);for(let r=t;r<n;r++)this.cache[r]=e[r];return}}}class MatrixUniform{constructor(e,t,n,r){this.gl=e,this.handle=t,this.glFuncName=UNIFORM_FUNC_NAME[n],this.count=r,this.cache=new Float32Array(UNIFORM_COMPONENT_COUNT[n]*r)}set(e){for(let t=0,n=e.length;t<n;++t)if(this.cache[t]!==e[t])return this.gl[this.glFuncName](this.handle,!1,e),void this.cache.set(e)}}class Program{constructor(e,t,n,r,i){this.gl=e,this.appState=t,this.program=null,this.transformFeedbackVaryings=i||null,this.uniforms={},this.uniformBlocks={},this.uniformBlockCount=0,this.samplers={},this.samplerCount=0,this.vertexSource=null,this.vertexShader=null,this.fragmentSource=null,this.fragmentShader=null,this.linked=!1,"string"==typeof n?this.vertexSource=n:this.vertexShader=n,"string"==typeof r?this.fragmentSource=r:this.fragmentShader=r,this.initialize()}restore(){return this.initialize(),this.link(),this.checkLinkage(),this}translatedVertexSource(){if(this.vertexShader)return this.vertexShader.translatedSource();{let e=new Shader(this.gl,this.appState,GL.VERTEX_SHADER,this.vertexSource),t=e.translatedSource();return e.delete(),t}}translatedFragmentSource(){if(this.fragmentShader)return this.fragmentShader.translatedSource();{let e=new Shader(this.gl,this.appState,GL.FRAGMENT_SHADER,this.fragmentSource),t=e.translatedSource();return e.delete(),t}}delete(){return this.program&&(this.gl.deleteProgram(this.program),this.program=null,this.appState.program===this&&(this.gl.useProgram(null),this.appState.program=null)),this}initialize(){return this.appState.program===this&&(this.gl.useProgram(null),this.appState.program=null),this.linked=!1,this.uniformBlockCount=0,this.samplerCount=0,this.vertexSource&&(this.vertexShader=new Shader(this.gl,this.appState,GL.VERTEX_SHADER,this.vertexSource)),this.fragmentSource&&(this.fragmentShader=new Shader(this.gl,this.appState,GL.FRAGMENT_SHADER,this.fragmentSource)),this.program=this.gl.createProgram(),this}link(){return this.gl.attachShader(this.program,this.vertexShader.shader),this.gl.attachShader(this.program,this.fragmentShader.shader),this.transformFeedbackVaryings&&this.gl.transformFeedbackVaryings(this.program,this.transformFeedbackVaryings,GL.SEPARATE_ATTRIBS),this.gl.linkProgram(this.program),this}checkCompletion(){return!WEBGL_INFO.PARALLEL_SHADER_COMPILE||this.gl.getProgramParameter(this.program,GL.COMPLETION_STATUS_KHR)}checkLinkage(){return this.linked||(this.gl.getProgramParameter(this.program,GL.LINK_STATUS)?(this.linked=!0,this.initVariables()):(console.error(this.gl.getProgramInfoLog(this.program)),this.vertexShader.checkCompilation(),this.fragmentShader.checkCompilation()),this.vertexSource&&(this.vertexShader.delete(),this.vertexShader=null),this.fragmentSource&&(this.fragmentShader.delete(),this.fragmentShader=null)),this}initVariables(){this.bind();let e,t=this.gl.getProgramParameter(this.program,GL.ACTIVE_UNIFORMS);for(let n=0;n<t;++n){let t=this.gl.getActiveUniform(this.program,n),r=this.gl.getUniformLocation(this.program,t.name),i=null,s=t.type,a=t.size;switch(s){case GL.SAMPLER_2D:case GL.INT_SAMPLER_2D:case GL.UNSIGNED_INT_SAMPLER_2D:case GL.SAMPLER_2D_SHADOW:case GL.SAMPLER_2D_ARRAY:case GL.INT_SAMPLER_2D_ARRAY:case GL.UNSIGNED_INT_SAMPLER_2D_ARRAY:case GL.SAMPLER_2D_ARRAY_SHADOW:case GL.SAMPLER_CUBE:case GL.INT_SAMPLER_CUBE:case GL.UNSIGNED_INT_SAMPLER_CUBE:case GL.SAMPLER_CUBE_SHADOW:case GL.SAMPLER_3D:case GL.INT_SAMPLER_3D:case GL.UNSIGNED_INT_SAMPLER_3D:e=this.samplerCount++,this.samplers[t.name]=e,this.gl.uniform1i(r,e);break;case GL.INT:case GL.UNSIGNED_INT:case GL.FLOAT:i=a>1?MultiNumericUniform:SingleComponentUniform;break;case GL.BOOL:i=a>1?MultiBoolUniform:SingleComponentUniform;break;case GL.FLOAT_VEC2:case GL.INT_VEC2:case GL.UNSIGNED_INT_VEC2:case GL.FLOAT_VEC3:case GL.INT_VEC3:case GL.UNSIGNED_INT_VEC3:case GL.FLOAT_VEC4:case GL.INT_VEC4:case GL.UNSIGNED_INT_VEC4:i=MultiNumericUniform;break;case GL.BOOL_VEC2:case GL.BOOL_VEC3:case GL.BOOL_VEC4:i=MultiBoolUniform;break;case GL.FLOAT_MAT2:case GL.FLOAT_MAT3:case GL.FLOAT_MAT4:case GL.FLOAT_MAT2x3:case GL.FLOAT_MAT2x4:case GL.FLOAT_MAT3x2:case GL.FLOAT_MAT3x4:case GL.FLOAT_MAT4x2:case GL.FLOAT_MAT4x3:i=MatrixUniform;break;default:console.error("Unrecognized type for uniform ",t.name)}i&&(this.uniforms[t.name]=new i(this.gl,r,s,a))}let n=this.gl.getProgramParameter(this.program,GL.ACTIVE_UNIFORM_BLOCKS);for(let e=0;e<n;++e){let t=this.gl.getActiveUniformBlockName(this.program,e),n=this.gl.getUniformBlockIndex(this.program,t),r=this.uniformBlockCount++;this.gl.uniformBlockBinding(this.program,n,r),this.uniformBlocks[t]=r}}uniform(e,t){return this.uniforms[e]&&this.uniforms[e].set(t),this}bind(){return this.appState.program!==this&&(this.gl.useProgram(this.program),this.appState.program=this),this}}class Query{constructor(e,t){this.gl=e,this.query=null,this.target=t,this.active=!1,this.result=null,this.restore()}restore(){return this.query=this.gl.createQuery(),this.active=!1,this.result=null,this}begin(){return this.active||(this.gl.beginQuery(this.target,this.query),this.result=null),this}end(){return this.active||(this.gl.endQuery(this.target),this.active=!0),this}ready(){return!(!this.active||!this.gl.getQueryParameter(this.query,GL.QUERY_RESULT_AVAILABLE))&&(this.active=!1,this.result=Number(this.gl.getQueryParameter(this.query,GL.QUERY_RESULT)),!0)}delete(){return this.query&&(this.gl.deleteQuery(this.query),this.query=null),this}}class Timer{constructor(e){this.gl=e,this.cpuTimer=window.performance||window.Date,this.gpuTimerQuery=null,this.cpuStartTime=0,this.cpuTime=0,this.gpuTime=0,this.restore()}restore(){return WEBGL_INFO.GPU_TIMER&&(this.gpuTimerQuery?this.gpuTimerQuery.restore():this.gpuTimerQuery=new Query(this.gl,GL.TIME_ELAPSED_EXT)),this.cpuStartTime=0,this.cpuTime=0,this.gpuTime=0,this}start(){return WEBGL_INFO.GPU_TIMER?this.gpuTimerQuery.active||(this.gpuTimerQuery.begin(),this.cpuStartTime=this.cpuTimer.now()):this.cpuStartTime=this.cpuTimer.now(),this}end(){return WEBGL_INFO.GPU_TIMER?this.gpuTimerQuery.active||(this.gpuTimerQuery.end(),this.cpuTime=this.cpuTimer.now()-this.cpuStartTime):this.cpuTime=this.cpuTimer.now()-this.cpuStartTime,this}ready(){if(WEBGL_INFO.GPU_TIMER){if(!this.gpuTimerQuery.active)return!1;var e=this.gpuTimerQuery.ready(),t=this.gl.getParameter(GL.GPU_DISJOINT_EXT);return!(!e||t)&&(this.gpuTime=this.gpuTimerQuery.result/1e6,!0)}return Boolean(this.cpuStartTime)}delete(){return this.gpuTimerQuery&&(this.gpuTimerQuery.delete(),this.gpuTimerQuery=null),this}}class TransformFeedback{constructor(e,t){this.gl=e,this.appState=t,this.transformFeedback=null,this.restore()}restore(){return this.appState.transformFeedback===this&&(this.appState.transformFeedback=null),this.transformFeedback=this.gl.createTransformFeedback(),this}feedbackBuffer(e,t){return this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK,this.transformFeedback),this.gl.bindBufferBase(GL.TRANSFORM_FEEDBACK_BUFFER,e,t.buffer),this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK,null),this.gl.bindBufferBase(GL.TRANSFORM_FEEDBACK_BUFFER,e,null),this}delete(){return this.transformFeedback&&(this.gl.deleteTransformFeedback(this.transformFeedback),this.transformFeedback=null,this.appState.transformFeedback===this&&(this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK,null),this.appState.transformFeedback=null)),this}bind(){return this.appState.transformFeedback!==this&&(this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK,this.transformFeedback),this.appState.transformFeedback=this),this}}class UniformBuffer{constructor(e,t,n,r=e.DYNAMIC_DRAW){this.gl=e,this.buffer=null,this.dataViews={},this.offsets=new Array(n.length),this.sizes=new Array(n.length),this.types=new Array(n.length),this.size=0,this.usage=r,this.appState=t,this.currentBase=-1;for(let e=0,t=n.length;e<t;++e){let t=n[e];switch(t){case GL.FLOAT:case GL.INT:case GL.UNSIGNED_INT:case GL.BOOL:this.offsets[e]=this.size,this.sizes[e]=1,t===GL.INT?this.types[e]=GL.INT:t===GL.UNSIGNED_INT?this.types[e]=GL.UNSIGNED_INT:this.types[e]=GL.FLOAT,this.size++;break;case GL.FLOAT_VEC2:case GL.INT_VEC2:case GL.UNSIGNED_INT_VEC2:case GL.BOOL_VEC2:this.size+=this.size%2,this.offsets[e]=this.size,this.sizes[e]=2,t===GL.INT_VEC2?this.types[e]=GL.INT:t===GL.UNSIGNED_INT_VEC2?this.types[e]=GL.UNSIGNED_INT:this.types[e]=GL.FLOAT,this.size+=2;break;case GL.FLOAT_VEC3:case GL.INT_VEC3:case GL.UNSIGNED_INT_VEC3:case GL.BOOL_VEC3:case GL.FLOAT_VEC4:case GL.INT_VEC4:case GL.UNSIGNED_INT_VEC4:case GL.BOOL_VEC4:this.size+=(4-this.size%4)%4,this.offsets[e]=this.size,this.sizes[e]=4,t===GL.INT_VEC4||t===GL.INT_VEC3?this.types[e]=GL.INT:t===GL.UNSIGNED_INT_VEC4||t===GL.UNSIGNED_INT_VEC3?this.types[e]=GL.UNSIGNED_INT:this.types[e]=GL.FLOAT,this.size+=4;break;case GL.FLOAT_MAT2:case GL.FLOAT_MAT2x3:case GL.FLOAT_MAT2x4:this.size+=(4-this.size%4)%4,this.offsets[e]=this.size,this.sizes[e]=8,this.types[e]=GL.FLOAT,this.size+=8;break;case GL.FLOAT_MAT3:case GL.FLOAT_MAT3x2:case GL.FLOAT_MAT3x4:this.size+=(4-this.size%4)%4,this.offsets[e]=this.size,this.sizes[e]=12,this.types[e]=GL.FLOAT,this.size+=12;break;case GL.FLOAT_MAT4:case GL.FLOAT_MAT4x2:case GL.FLOAT_MAT4x3:this.size+=(4-this.size%4)%4,this.offsets[e]=this.size,this.sizes[e]=16,this.types[e]=GL.FLOAT,this.size+=16;break;default:console.error("Unsupported type for uniform buffer.")}}this.size+=(4-this.size%4)%4,this.data=new Float32Array(this.size),this.dataViews[GL.FLOAT]=this.data,this.dataViews[GL.INT]=new Int32Array(this.data.buffer),this.dataViews[GL.UNSIGNED_INT]=new Uint32Array(this.data.buffer),this.dirtyStart=this.size,this.dirtyEnd=0,this.restore()}restore(){return-1!==this.currentBase&&this.appState.uniformBuffers[this.currentBase]===this&&(this.appState.uniformBuffers[this.currentBase]=null),this.buffer=this.gl.createBuffer(),this.gl.bindBuffer(GL.UNIFORM_BUFFER,this.buffer),this.gl.bufferData(GL.UNIFORM_BUFFER,4*this.size,this.usage),this.gl.bindBuffer(GL.UNIFORM_BUFFER,null),this}set(e,t){let n=this.dataViews[this.types[e]],r=this.offsets[e],i=this.sizes[e];return 1===this.sizes[e]?n[r]=t:n.set(t,r),r<this.dirtyStart&&(this.dirtyStart=r),this.dirtyEnd<r+i&&(this.dirtyEnd=r+i),this}update(){if(this.dirtyStart>=this.dirtyEnd)return this;let e=this.data.subarray(this.dirtyStart,this.dirtyEnd),t=4*this.dirtyStart;return this.gl.bindBuffer(this.gl.UNIFORM_BUFFER,this.buffer),this.gl.bufferSubData(this.gl.UNIFORM_BUFFER,t,e),this.gl.bindBuffer(this.gl.UNIFORM_BUFFER,null),this.dirtyStart=this.size,this.dirtyEnd=0,this}delete(){return this.buffer&&(this.gl.deleteBuffer(this.buffer),this.buffer=null,-1!==this.currentBase&&this.appState.uniformBuffers[this.currentBase]===this&&(this.appState.uniformBuffers[this.currentBase]=null)),this}bind(e){let t=this.appState.uniformBuffers[e];return t!==this&&(t&&(t.currentBase=-1),-1!==this.currentBase&&(this.appState.uniformBuffers[this.currentBase]=null),this.gl.bindBufferBase(this.gl.UNIFORM_BUFFER,e,this.buffer),this.appState.uniformBuffers[e]=this,this.currentBase=e),this}}class VertexArray{constructor(e,t){this.gl=e,this.appState=t,this.vertexArray=null,this.indexType=null,this.indexed=!1,this.numElements=0,this.numInstances=1,this.offsets=0,this.numDraws=1}restore(){return this.appState.vertexArray===this&&(this.appState.vertexArray=null),null!==this.vertexArray&&(this.vertexArray=this.gl.createVertexArray()),this}vertexAttributeBuffer(e,t,n=DUMMY_OBJECT){return this.attributeBuffer(e,t,n,!1),this}instanceAttributeBuffer(e,t,n=DUMMY_OBJECT){return this.attributeBuffer(e,t,n,!0),this}indexBuffer(e){return null===this.vertexArray&&(this.vertexArray=this.gl.createVertexArray()),this.bind(),this.gl.bindBuffer(GL.ELEMENT_ARRAY_BUFFER,e.buffer),this.numElements=3*e.numItems,this.indexType=e.type,this.indexed=!0,this}delete(){return this.vertexArray&&(this.gl.deleteVertexArray(this.vertexArray),this.vertexArray=null,this.appState.vertexArray===this&&(this.gl.bindVertexArray(null),this.appState.vertexArray=null)),this}bind(){return this.appState.vertexArray!==this&&(this.gl.bindVertexArray(this.vertexArray),this.appState.vertexArray=this),this}attributeBuffer(e,t,n={},r){null===this.vertexArray&&(this.vertexArray=this.gl.createVertexArray()),this.bind(),this.gl.bindBuffer(GL.ARRAY_BUFFER,t.buffer);let{type:i=t.type,size:s=t.itemSize,stride:a=0,offset:o=0,normalized:c=!1,integer:l=Boolean(t.integer&&!c)}=n,h=t.numColumns;0===a&&(a=h*s*TYPE_SIZE[i]);for(let t=0;t<h;++t)l?this.gl.vertexAttribIPointer(e+t,s,i,a,o+t*s*TYPE_SIZE[i]):this.gl.vertexAttribPointer(e+t,s,i,c,a,o+t*s*TYPE_SIZE[i]),r&&this.gl.vertexAttribDivisor(e+t,1),this.gl.enableVertexAttribArray(e+t);return 1===this.numDraws&&(r?this.numInstances=t.numItems:this.numElements=this.numElements||t.numItems),this.gl.bindBuffer(GL.ARRAY_BUFFER,null),this}}const INTEGER_TYPES={[GL.BYTE]:!0,[GL.UNSIGNED_BYTE]:!0,[GL.SHORT]:!0,[GL.UNSIGNED_SHORT]:!0,[GL.INT]:!0,[GL.UNSIGNED_INT]:!0};class VertexBuffer{constructor(e,t,n,r,i,s=e.STATIC_DRAW,a){let o,c,l;switch(n){case GL.FLOAT_MAT4:case GL.FLOAT_MAT4x2:case GL.FLOAT_MAT4x3:o=4;break;case GL.FLOAT_MAT3:case GL.FLOAT_MAT3x2:case GL.FLOAT_MAT3x4:o=3;break;case GL.FLOAT_MAT2:case GL.FLOAT_MAT2x3:case GL.FLOAT_MAT2x4:o=2;break;default:o=1}switch(n){case GL.FLOAT_MAT4:case GL.FLOAT_MAT3x4:case GL.FLOAT_MAT2x4:r=4,n=GL.FLOAT;break;case GL.FLOAT_MAT3:case GL.FLOAT_MAT4x3:case GL.FLOAT_MAT2x3:r=3,n=GL.FLOAT;break;case GL.FLOAT_MAT2:case GL.FLOAT_MAT3x2:case GL.FLOAT_MAT4x2:r=2,n=GL.FLOAT}"number"==typeof i?(c=i,n&&(i*=TYPE_SIZE[n]),l=i):(c=i.length,l=i.byteLength),this.gl=e,this.buffer=null,this.appState=t,this.type=n,this.itemSize=r,this.numItems=n?c/(r*o):l/r,this.numColumns=o,this.byteLength=l,this.usage=s,this.indexArray=Boolean(a),this.integer=Boolean(INTEGER_TYPES[this.type]),this.binding=this.indexArray?GL.ELEMENT_ARRAY_BUFFER:GL.ARRAY_BUFFER,this.restore(i)}restore(e){return e||(e=this.byteLength),this.appState.vertexArray&&(this.gl.bindVertexArray(null),this.appState.vertexArray=null),this.buffer=this.gl.createBuffer(),this.gl.bindBuffer(this.binding,this.buffer),this.gl.bufferData(this.binding,e,this.usage),this.gl.bindBuffer(this.binding,null),this}data(e){return this.appState.vertexArray&&(this.gl.bindVertexArray(null),this.appState.vertexArray=null),this.gl.bindBuffer(this.binding,this.buffer),this.gl.bufferSubData(this.binding,0,e),this.gl.bindBuffer(this.binding,null),this}delete(){return this.buffer&&(this.gl.deleteBuffer(this.buffer),this.buffer=null),this}}class App{constructor(e,t){this.canvas=t,this.gl=e,this.width=this.gl.drawingBufferWidth,this.height=this.gl.drawingBufferHeight,this.viewportX=0,this.viewportY=0,this.viewportWidth=0,this.viewportHeight=0,this.currentDrawCalls=null,this.emptyFragmentShader=null,this.state={program:null,vertexArray:null,transformFeedback:null,activeTexture:-1,textures:new Array(WEBGL_INFO.MAX_TEXTURE_UNITS),uniformBuffers:new Array(WEBGL_INFO.MAX_UNIFORM_BUFFERS),freeUniformBufferBases:[],drawFramebuffer:null,readFramebuffer:null,extensions:{}},this.clearBits=this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT|this.gl.STENCIL_BUFFER_BIT,this.cpuTime=0,this.gpuTime=0,this.viewport(0,0,this.width,this.height),this.contextLostExt=null,this.contextRestoredHandler=null,this.initExtensions(),this.canvas.addEventListener("webglcontextlost",(e=>{e.preventDefault()})),this.canvas.addEventListener("webglcontextrestored",(()=>{this.initExtensions(),this.contextRestoredHandler&&this.contextRestoredHandler()}))}loseContext(){return this.contextLostExt&&this.contextLostExt.loseContext(),this}restoreContext(){return this.contextLostExt&&this.contextLostExt.restoreContext(),this}onContextRestored(e){return this.contextRestoredHandler=e,this}colorMask(e,t,n,r){return this.gl.colorMask(e,t,n,r),this}clearColor(e,t,n,r){return this.gl.clearColor(e,t,n,r),this}clearMask(e){return this.clearBits=e,this}clear(){return this.gl.clear(this.clearBits),this}drawFramebuffer(e){return e.bindForDraw(),this}readFramebuffer(e){return e.bindForRead(),this}defaultDrawFramebuffer(){return null!==this.state.drawFramebuffer&&(this.gl.bindFramebuffer(this.gl.DRAW_FRAMEBUFFER,null),this.state.drawFramebuffer=null),this}defaultReadFramebuffer(){return null!==this.state.readFramebuffer&&(this.gl.bindFramebuffer(this.gl.READ_FRAMEBUFFER,null),this.state.readFramebuffer=null),this}blitFramebuffer(e,t=DUMMY_OBJECT){let n=this.state.readFramebuffer,r=this.state.drawFramebuffer,i=n?n.width:this.width,s=n?n.height:this.height,a=r?r.width:this.width,o=r?r.height:this.height,{srcStartX:c=0,srcStartY:l=0,srcEndX:h=i,srcEndY:u=s,dstStartX:_=0,dstStartY:p=0,dstEndX:d=a,dstEndY:f=o,filter:E=GL.NEAREST}=t;return this.gl.blitFramebuffer(c,l,h,u,_,p,d,f,e,E),this}depthRange(e,t){return this.gl.depthRange(e,t),this}depthTest(){return this.gl.enable(this.gl.DEPTH_TEST),this}noDepthTest(){return this.gl.disable(this.gl.DEPTH_TEST),this}depthMask(e){return this.gl.depthMask(e),this}depthFunc(e){return this.gl.depthFunc(e),this}blend(){return this.gl.enable(this.gl.BLEND),this}noBlend(){return this.gl.disable(this.gl.BLEND),this}blendFunc(e,t){return this.gl.blendFunc(e,t),this}blendFuncSeparate(e,t,n,r){return this.gl.blendFuncSeparate(e,t,n,r),this}blendEquation(e){return this.gl.blendEquation(e),this}stencilTest(){return this.gl.enable(this.gl.STENCIL_TEST),this}noStencilTest(){return this.gl.disable(this.gl.STENCIL_TEST),this}stencilMask(e){return this.gl.stencilMask(e),this}stencilMaskSeparate(e,t){return this.gl.stencilMaskSeparate(e,t),this}stencilFunc(e,t,n){return this.gl.stencilFunc(e,t,n),this}stencilFuncSeparate(e,t,n,r){return this.gl.stencilFuncSeparate(e,t,n,r),this}stencilOp(e,t,n){return this.gl.stencilOp(e,t,n),this}stencilOpSeparate(e,t,n,r){return this.gl.stencilOpSeparate(e,t,n,r),this}scissorTest(){return this.gl.enable(this.gl.SCISSOR_TEST),this}noScissorTest(){return this.gl.disable(this.gl.SCISSOR_TEST),this}scissor(e,t,n,r){return this.gl.scissor(e,t,n,r),this}rasterize(){return this.gl.disable(this.gl.RASTERIZER_DISCARD),this}noRasterize(){return this.gl.enable(this.gl.RASTERIZER_DISCARD),this}cullBackfaces(){return this.gl.enable(this.gl.CULL_FACE),this}drawBackfaces(){return this.gl.disable(this.gl.CULL_FACE),this}readPixel(e,t,n,r=DUMMY_OBJECT){let{format:i=GL.RGBA,type:s=GL.UNSIGNED_BYTE}=r;return this.gl.readPixels(e,t,1,1,i,s,n),this}viewport(e,t,n,r){return this.viewportWidth===n&&this.viewportHeight===r&&this.viewportX===e&&this.viewportY===t||(this.viewportX=e,this.viewportY=t,this.viewportWidth=n,this.viewportHeight=r,this.gl.viewport(e,t,this.viewportWidth,this.viewportHeight)),this}defaultViewport(){return this.viewport(0,0,this.width,this.height),this}resize(e,t){return this.canvas.width=e,this.canvas.height=t,this.width=this.gl.drawingBufferWidth,this.height=this.gl.drawingBufferHeight,this.viewport(0,0,this.width,this.height),this}createProgram(e,t,n){return new Program(this.gl,this.state,e,t,n).link().checkLinkage()}createPrograms(...e){return new Promise(((t,n)=>{let r=e.length,i=new Array(r),s=new Array(r),a=r;for(let t=0;t<r;++t){let n=e[t],r=n[0],a=n[1],o=n[2];i[t]=new Program(this.gl,this.state,r,a,o),s[t]=i[t]}for(let e=0;e<r;++e)i[e].link();let o=()=>{let e=0;for(let t=0;t<a;++t)if(s[t].checkCompletion()){if(s[t].checkLinkage(),!s[t].linked)return void n(new Error("Program linkage failed"));++e}else s[t-e]=s[t];a-=e,0===a?t(i):requestAnimationFrame(o)};o()}))}restorePrograms(...e){return new Promise(((t,n)=>{let r=e.length,i=e.slice(),s=r;for(let t=0;t<r;++t)e[t].initialize();for(let t=0;t<r;++t)e[t].link();for(let t=0;t<r;++t)e[t].checkCompletion();let a=()=>{let e=0;for(let t=0;t<s;++t)if(i[t].checkCompletion()){if(i[t].checkLinkage(),!i[t].linked)return void n(new Error("Program linkage failed"));++e}else i[t-e]=i[t];s-=e,0===s?t():requestAnimationFrame(a)};a()}))}createShader(e,t){return new Shader(this.gl,this.state,e,t)}createVertexArray(){return new VertexArray(this.gl,this.state)}createTransformFeedback(){return new TransformFeedback(this.gl,this.state)}createVertexBuffer(e,t,n,r){return new VertexBuffer(this.gl,this.state,e,t,n,r)}createMatrixBuffer(e,t,n){return new VertexBuffer(this.gl,this.state,e,0,t,n)}createInterleavedBuffer(e,t,n){return new VertexBuffer(this.gl,this.state,null,e,t,n)}createIndexBuffer(e,t,n,r){return new VertexBuffer(this.gl,this.state,e,t,n,r,!0)}createUniformBuffer(e,t){return new UniformBuffer(this.gl,this.state,e,t)}createTexture2D(e,t,n,r){return"number"==typeof e?(r=n,n=t,t=e,e=null):void 0===n&&(r=t,t=e.width,n=e.height),new Texture(this.gl,this.state,this.gl.TEXTURE_2D,e,t,n,void 0,!1,r)}createTextureArray(e,t,n,r,i){return"number"==typeof e&&(i=r,r=n,n=t,t=e,e=null),new Texture(this.gl,this.state,this.gl.TEXTURE_2D_ARRAY,e,t,n,r,!0,i)}createTexture3D(e,t,n,r,i){return"number"==typeof e&&(i=r,r=n,n=t,t=e,e=null),new Texture(this.gl,this.state,this.gl.TEXTURE_3D,e,t,n,r,!0,i)}createCubemap(e){return new Cubemap(this.gl,this.state,e)}createRenderbuffer(e,t,n,r=0){return new Renderbuffer(this.gl,e,t,n,r)}createFramebuffer(){return new Framebuffer(this.gl,this.state)}createQuery(e){return new Query(this.gl,e)}createTimer(){return new Timer(this.gl)}createDrawCall(e,t,n){return new DrawCall(this.gl,this.state,e,t,n)}initExtensions(){this.gl.getExtension("EXT_color_buffer_float"),this.gl.getExtension("OES_texture_float_linear"),this.gl.getExtension("WEBGL_compressed_texture_s3tc"),this.gl.getExtension("WEBGL_compressed_texture_s3tc_srgb"),this.gl.getExtension("WEBGL_compressed_texture_etc"),this.gl.getExtension("WEBGL_compressed_texture_astc"),this.gl.getExtension("WEBGL_compressed_texture_pvrtc"),this.gl.getExtension("EXT_disjoint_timer_query_webgl2"),this.gl.getExtension("EXT_disjoint_timer_query"),this.gl.getExtension("EXT_texture_filter_anisotropic"),this.state.extensions.debugShaders=this.gl.getExtension("WEBGL_debug_shaders"),this.contextLostExt=this.gl.getExtension("WEBGL_lose_context"),this.gl.getExtension("KHR_parallel_shader_compile"),this.state.extensions.multiDrawInstanced=this.gl.getExtension("WEBGL_multi_draw_instanced")}}let webglInfoInitialized=!1;const PicoGL=Object.assign({version:"0.15.1",WEBGL_INFO:WEBGL_INFO,createApp(e,t){let n=e.getContext("webgl2",t);return webglInfoInitialized||(WEBGL_INFO.MAX_TEXTURE_UNITS=n.getParameter(GL.MAX_COMBINED_TEXTURE_IMAGE_UNITS),WEBGL_INFO.MAX_UNIFORM_BUFFERS=n.getParameter(GL.MAX_UNIFORM_BUFFER_BINDINGS),WEBGL_INFO.MAX_UNIFORMS=Math.min(n.getParameter(GL.MAX_VERTEX_UNIFORM_VECTORS),n.getParameter(GL.MAX_FRAGMENT_UNIFORM_VECTORS)),WEBGL_INFO.SAMPLES=n.getParameter(GL.SAMPLES),WEBGL_INFO.VENDOR="(Unknown)",WEBGL_INFO.RENDERER="(Unknown)",WEBGL_INFO.FLOAT_RENDER_TARGETS=Boolean(n.getExtension("EXT_color_buffer_float")),WEBGL_INFO.LINEAR_FLOAT_TEXTURES=Boolean(n.getExtension("OES_texture_float_linear")),WEBGL_INFO.S3TC_TEXTURES=Boolean(n.getExtension("WEBGL_compressed_texture_s3tc")),WEBGL_INFO.S3TC_SRGB_TEXTURES=Boolean(n.getExtension("WEBGL_compressed_texture_s3tc_srgb")),WEBGL_INFO.ETC_TEXTURES=Boolean(n.getExtension("WEBGL_compressed_texture_etc")),WEBGL_INFO.ASTC_TEXTURES=Boolean(n.getExtension("WEBGL_compressed_texture_astc")),WEBGL_INFO.PVRTC_TEXTURES=Boolean(n.getExtension("WEBGL_compressed_texture_pvrtc")),WEBGL_INFO.LOSE_CONTEXT=Boolean(n.getExtension("WEBGL_lose_context")),WEBGL_INFO.DEBUG_SHADERS=Boolean(n.getExtension("WEBGL_debug_shaders")),WEBGL_INFO.GPU_TIMER=Boolean(n.getExtension("EXT_disjoint_timer_query_webgl2")||n.getExtension("EXT_disjoint_timer_query")),WEBGL_INFO.TEXTURE_ANISOTROPY=Boolean(n.getExtension("EXT_texture_filter_anisotropic")),WEBGL_INFO.MAX_TEXTURE_ANISOTROPY=WEBGL_INFO.TEXTURE_ANISOTROPY?n.getParameter(GL.MAX_TEXTURE_MAX_ANISOTROPY_EXT):1,WEBGL_INFO.DEBUG_RENDERER_INFO=Boolean(n.getExtension("WEBGL_debug_renderer_info")),WEBGL_INFO.DEBUG_RENDERER_INFO&&(WEBGL_INFO.VENDOR=n.getParameter(GL.UNMASKED_VENDOR_WEBGL),WEBGL_INFO.RENDERER=n.getParameter(GL.UNMASKED_RENDERER_WEBGL)),WEBGL_INFO.PARALLEL_SHADER_COMPILE=Boolean(n.getExtension("KHR_parallel_shader_compile")),WEBGL_INFO.MULTI_DRAW_INSTANCED=Boolean(n.getExtension("WEBGL_multi_draw_instanced")),webglInfoInitialized=!0),new App(n,e)}},GL),mapget=(e,t,n)=>{e.has(t)||e.set(t,n());let r=e.get(t);return void 0===r?n():r};let prefix="x_",math="\n    const float pi = 3.1415926535897932384626433832795;\n    // https://en.wikipedia.org/wiki/Waveform\n    // #define sine(x)     smoothstep(0., 1., wave(x))\n    // #define square(x)   step(0.5, wave(x))\n    // #define sawtooth(x) mod(wave(x), 1.)\n    float priv_lwave(float t) {\n        return 1. - abs(mod(t, 1.) * 2. - 1.);\n    }\n    float wave(float t) {\n        return smoothstep(0., 1., priv_lwave(t));\n        // not the same: ...\n        // return sin(t * pi * 2. - pi * 0.5) * 0.5 + 0.5; // CHECK\n    }\n    /*\n        vec2 bezier(vec2 a, vec2 b, vec2 c, vec2 d, float t) {\n            return pow(1. - t, 3.) * a + 3. * pow(1. - t, 2.) * t * b + 3. * (1. - t) * pow(t, 2.) * c + pow(t, 3.) * d;\n        }\n        float ease(float x, float y, float a, float b, float t) {\n            return bezier(vec2(0.), vec2(x, y), vec2(a, b), vec2(1.), t).y;\n        }\n    */\n    // rescale: a/b == rescale(a, 0, b, 0, 1)\n    float rescale(float x, float amin, float amax, float bmin, float bmax) {\n        float a = amax - amin;\n        float b = bmax - bmin;\n        return (x - amin) * b / a + bmin;\n    }\n    // float range(float amin, float amax, float bmin, float bmax, float x) {\n    //     float a = amax - amin;\n    //     float b = bmax - bmin;\n    //     return (x - amin) * b / a + bmin;\n    // }\n",matrices="\n    mat4 translate(float x, float y, float z) {\n        return mat4(\n            1, 0, 0, 0,\n            0, 1, 0, 0,\n            0, 0, 1, 0,\n            x, y, z, 1\n        );\n    }\n    mat4 rotatex(float a) {\n        float c = cos(a);\n        float s = sin(a);\n        return mat4(\n            1, 0, 0, 0,\n            0, c, s, 0,\n            0,-s, c, 0,\n            0, 0, 0, 1\n        );\n    }\n    mat4 rotatey(float a) {\n        float c = cos(a);\n        float s = sin(a);\n        return mat4(\n            c, 0,-s, 0,\n            0, 1, 0, 0,\n            s, 0, c, 0,\n            0, 0, 0, 1\n        );\n    }\n    mat4 rotatez(float a) {\n        float c = cos(a);\n        float s = sin(a);\n        return mat4(\n            c, s, 0, 0,\n           -s, c, 0, 0,\n            0, 0, 1, 0,\n            0, 0, 0, 1\n        );\n    }\n    mat4 scale(float x, float y, float z) {\n        return mat4(\n            x, 0, 0, 0,\n            0, y, 0, 0,\n            0, 0, z, 0,\n            0, 0, 0, 1\n        );\n    }\n\n\n    float hfov2v(float hfov, float aspect) {\n        return 2. * atan(tan(hfov * 0.5) / aspect);\n    }\n    float vfov2h(float vfov, float aspect) {\n        return 2. * atan(tan(vfov * 0.5) * aspect);\n    }\n    // float f = 1. / tan(radians(fov) * 0.5);\n    // infinite far: [10]: -1, [14]: -2 * near\n    mat4 perspective_vfov_r(float vfov, float aspect, float near, float far) {\n        float f = tan(pi * 0.5 - 0.5 * vfov);\n        float rangeinv = 1.0 / (near - far);\n        return mat4(\n            f / aspect, 0,                            0,  0,\n                     0, f,                            0,  0,\n                     0, 0, (near + far) * rangeinv * 1., -1,\n                     0, 0,  near * far  * rangeinv * 2.,  0\n        );\n    }\n    mat4 perspective(float fov, float aspect, float near, float far) {\n        return perspective_vfov_r(radians(fov), aspect, near, far);\n    }\n\n\n\n\n\n    mat4 frustum(float left, float right, float bottom, float top, float near, float far) {\n        float dx = right - left;\n        float dy = top - bottom;\n        float dz = near - far;\n        return mat4(\n            2. * near / dx, 0, 0, 0,\n            0, 2. * near / dy, 0, 0,\n            (left + right) / dx, (top + bottom) / dy, far / dz, -1,\n            0, 0, near * far / dz, 0\n        );\n    }\n\n    mat4 ortho(float left, float right, float top, float bottom, float near, float far) {\n        float w = 1. / (right - left);\n        float h = 1. / (top - bottom);\n        float p = 1. / (far - near);\n        float x = (right + left) * w;     // far + near is 1, far - near is 1\n        float y = (top + bottom) * h;\n        float z = (far + near) * p;\n        return transpose(mat4(\n            2. * w,      0,       0, -x,\n                0, 2. * h,       0, -y,\n                0,      0, -2. * p, -z,\n                0,      0,       0,  1\n        ));\n    }\n\n\n    // mat4 ortho_2(float left, float right, float top, float bottom, float near, float far) {\n    //     return mat4(\n    //         2. / (right - left),      0,       0, 0,\n    //         0,                     2. / (top - bottom),       0, 0,\n    //             0,      0,                     2. / (far - near), 0,\n    //         (right + left) / (right-left), (top + bottom) / (top-bottom), (far + near) / (far-near),  1\n    //     );\n    // }\n\n\n\n\n    const mat4 orthoquad = mat4( // ortho(-0.5, 0.5, 0.5, -0.5, 0., 1.)\n        2., 0,  0,   0,\n        0,  2., 0,  -0,\n        0,  0, -2., -1.,\n        0,  0,  0,   1.\n    );\n    // const mat4 orthoquad = mat4(\n    //     1, 0, 0, -0,\n    //     0, 1, 0, -0,\n    //     0, 0, -1, -0,\n    //     0, 0, 0, 1\n    // );\n\n\n\n\n    // vec3 rvec_dir(mat3 m, vec3 dir) {\n    //     return vec3(\n    //         m[0].x * dir.x + m[1].x * dir.y + m[2].x * dir.z,\n    //         m[0].y * dir.x + m[1].y * dir.y + m[2].y * dir.z,\n    //         m[0].z * dir.x + m[1].z * dir.y + m[2].z * dir.z\n    //     );\n    // }\n    vec3 position(mat4 m) {\n        return m[3].xyz;\n    }\n    // mat3 rotation(mat3 m, vec3 scale) {\n    //     return mat3(m[0] * (1./scale.x), m[1] * (1./scale.y), m[2] * (1./scale.z));\n    // }\n        //  position\n        //  rotation\n        //  scaledup\n    vec3 get_scale(mat4 m) {\n        vec3 s = vec3(length(m[0].xyz), length(m[1].xyz), length(m[2].xyz));\n        float det = determinant(m);\n        if(det < 0.) s.x = -s.x;\n        return s;\n    }\n    vec3[3] decompose_unsafe(mat4 m) {\n        vec3 p = position(m);\n        vec3 s = get_scale(m);\n        m[0].xyz *= 1. / s.x;\n        m[1].xyz *= 1. / s.y;\n        m[2].xyz *= 1. / s.z;\n\t\tfloat m11 = m[0].x, m12 = m[1].x, m13 = m[2].x;\n        float m21 = m[0].y, m22 = m[1].y, m23 = m[2].y;\n\t\tfloat m31 = m[0].z, m32 = m[1].z, m33 = m[2].z;\n        // euler xyz\n        float y = asin(clamp(m13, -1., 1.));\n        float x, z;\n        if(abs(m13) < 0.9999999) {\n            x = atan(-m23, m33);\n            z = atan(-m12, m11);\n        }\n        else {\n            x = atan(m32, m22);\n            z = 0.;\n        }\n        vec3[3] r;\n        r[0] = p;\n        r[1] = vec3(x, y, z);\n        r[2] = s;\n        return r;\n    }\n\n    mat4 lookatup(vec3 eye, vec3 t, vec3 up) {\n        vec3 p = eye;\n        vec3 z = normalize(p - t);\n        vec3 x = normalize(cross(up, z));\n        vec3 y = normalize(cross(z, x));\n        return mat4(\n            x[0], x[1], x[2], 0,\n            y[0], y[1], y[2], 0,\n            z[0], z[1], z[2], 0,\n            p[0], p[1], p[2], 1\n        );\n    }\n    mat4 lookat(vec3 eye, vec3 t) {\n        return lookatup(eye, t, vec3(0, 1, 0));\n    }\n\n    // float length_sq(vec3 a) {\n    //     return a.x * a.x + a.y *a. y + a.z * a.z;\n    // }\n    // mat4 threejs_lookat(vec3 eye, vec3 target, vec3 up) {\n    //     vec3 z = eye - target;\n    //     if(length_sq(z) == 0.) z.z = 1.; // eye and target are in the same position\n    //     z = normalize(z);\n    //     vec3 x = cross(up, z);\n    //     if(length_sq(x) == 0.) { // up and z are parallel\n    //         if(abs(up.z) == 1.) z.x += 0.0001;\n    //         else                z.z += 0.0001;\n    //         z = normalize(z);\n    //         x = cross(up, z);\n    //     }\n    //     x = normalize(x);\n    //     vec3 y = cross(z, x);\n    //     return mat4(\n    //         x[0], x[1], x[2], 0,\n    //         y[0], y[1], y[2], 0,\n    //         z[0], z[1], z[2], 0,\n    //         eye[0], eye[1], eye[2], 1\n    //     );\n    // }\n    // mat4 lookat(mat4 m, vec3 target) {\n    //     vec3 eye = position(m);\n    //     vec3 up = vec3(0, 1, 0);\n    //     return threejs_lookat(eye, target, up);\n    // }\n\n\n    // mat4 lookatz(mat4 m, vec3 t) {\n    //     vec3 up = upvec(m);\n    //     return lookatup(m, t, up);\n    // }\n\n    // vec3 upvec(mat4 m) {\n    //     return normalize(vec3(m[1][0], m[1][1], m[1][2]));\n    // }\n\n    // mat4 billboard(mat4 m, mat4 camera) {\n    //     vec3 up = upvec(camera);\n    //     return lookatup(m, -position(camera), up);\n    // }\n    // mat4 billboardz(mat4 m, mat4 camera) {\n    //     return lookatup(m, -position(camera), vec3(0, 1, 0));\n    // }\n",lights="\n\nbool wrap(vec2 uv) {\n    return uv.x < 0. || uv.x > 1. || uv.y < 0. || uv.y > 1.;\n}\n\n    float diffuse(vec3 light, vec3 pos, vec3 normal) {\n        vec3 dist = light - pos.xyz;\n        return max(0., dot(normal, normalize(dist)));\n    }\n    float specular(vec3 light, vec3 pos, vec3 normal, vec3 eye, float shininess) {\n        vec3 lightpos = light;\n        vec3 eyedir = normalize(eye - pos.xyz);\n        vec3 lightdir = normalize(lightpos - pos.xyz);\n        vec3 halfv = normalize(eyedir + lightdir);\n        return pow(max(dot(normal, halfv), 0.), shininess);\n    }\n    // https://danielilett.com/2019-06-12-tut2-3-fresnel/\n    float fresnel(vec3 pos, vec3 normal, vec3 eye) {\n        vec3 v = normalize(eye - pos.xyz);\n        return 1. - dot(normal, v);\n    }\n\n    // projective texture mapping\n    // vec2 projuv(mat4 view, mat4 proj, vec3 pos) {\n    //     vec4 uv = proj * inverse(view) * vec4(pos, 1);\n    //     if(uv.w < 0.) return vec2(-1);\n    //     return (uv.xy / uv.w) * 0.5 + 0.5;\n    // }\n\n\n    bool do_light(vec3 light, vec3 pos, vec3 normal) {\n        vec3 dir = normalize(light - pos);\n        return dot(dir, normal) >= 0.;\n    }\n\n    vec2 projuv(mat4 view, mat4 proj, vec3 pos, vec3 normal) {\n        if(!do_light(position(view), pos, normal)) return vec2(-1);\n        vec4 uv = proj * inverse(view) * vec4(pos, 1);\n        if(uv.w <= 0.) return vec2(-1);\n        if(-uv.w <= uv.x && uv.x <= uv.w && -uv.w <= uv.y && uv.y <= uv.w && -uv.w <= uv.z && uv.z <= uv.w) {\n            return (uv.xy / uv.w) * 0.5 + 0.5;\n        }        \n        return vec2(-1);\n    }\n    vec2 sphereuv(vec3 n) {\n        return vec2(\n            0.5 + atan(n.z, n.x) / (pi * 2.),\n            0.5 - asin(n.y) / pi\n        );\n    }\n    vec2 spotmap_x(mat4 view, vec3 pos) {\n        vec3 dist = normalize(position(view) - pos.xyz);\n        vec3 ray = dist * mat3(view);\n        return sphereuv(ray * mat3(rotatey(pi / -2.)));\n    }\n    vec2 spotmap_nope(mat4 view, vec3 pos, float angle) {\n        if(angle != 1.) return vec2(-1);\n        return spotmap_x(view, pos);\n    }\n\n    vec2 spotuv(mat4 light, vec3 pos, vec3 normal) {\n        if(!do_light(position(light), pos, normal)) return vec2(-1);\n        // light *= rotatex(0.000000001);\n        return spotmap_x(light, pos);\n    }\n\n    float dist(vec3 light, vec3 pos, float d) {\n        float n = distance(light, pos);\n        return 1. - rescale(clamp(n, 0., d), 0., d, 0., 1.);\n    }\n\n\n\n    float shadow(mat4 light, mat4 proj, sampler2D map, vec4 pos, float bias) {\n        vec4 fpos = proj * inverse(light) * pos;\n        vec3 uv = fpos.xyz / fpos.w;\n        uv = uv * 0.5 + 0.5;\n        float r = 0.;\n        if(!wrap(uv.xy)) {\n            float closestDepth = texture(map, uv.xy).r; \n            float currentDepth = uv.z;\n            r = currentDepth - bias > closestDepth  ? 1.0 : 0.0; \n        }\n        return r;\n    }\n\n\n    vec3 cubeuv(vec3 v) {\n        float faceIndex;\n        vec3 vAbs = abs(v);\n        float ma;\n        vec2 uv;\n        if(vAbs.z >= vAbs.x && vAbs.z >= vAbs.y) {\n            faceIndex = v.z < 0.0 ? 5.0 : 4.0;\n            ma = 0.5 / vAbs.z;\n            uv = vec2(v.z < 0.0 ? -v.x : v.x, -v.y);\n        }\n        else if(vAbs.y >= vAbs.x) {\n            faceIndex = v.y < 0.0 ? 2.0 : 3.0;\n            ma = 0.5 / vAbs.y;\n            uv = vec2(v.x, v.y < 0.0 ? -v.z : v.z);\n        }\n        else {\n            faceIndex = v.x < 0.0 ? 1.0 : 0.0;\n            ma = 0.5 / vAbs.x;\n            uv = vec2(v.x < 0.0 ? v.z : -v.z, -v.y);\n        }\n        return vec3(uv * ma + 0.5, faceIndex);\n    }\n\n    vec4 cubemap(vec3 dir, sampler2D right, sampler2D left, sampler2D top, sampler2D bottom, sampler2D front, sampler2D back) {\n        vec3 st = cubeuv(dir);\n        if(st[2] == 0.) return texture(right,  st.xy);\n        if(st[2] == 1.) return texture(left,   st.xy);\n        if(st[2] == 2.) return texture(top,    st.xy);\n        if(st[2] == 3.) return texture(bottom, st.xy);\n        if(st[2] == 4.) return texture(front,  st.xy);\n        // if(st[2] == 5.)\n        return texture(back,   st.xy);\n    }\n\n\n    vec3 reflex(vec3 pos, vec3 normal, vec3 eye) {\n        vec3 I = normalize(eye - pos);\n        vec3 R = reflect(I, normalize(normal));              \n        return R;\n    }\n    vec3 refrax(vec3 pos, vec3 normal, vec3 eye, float ratio) {\n        vec3 I = -normalize(eye - pos);\n        vec3 R = -refract(I, normalize(normal), ratio);\n        return R;\n    }\n\n    // https://www.clicktorelease.com/blog/creating-spherical-environment-mapping-shader/\n    vec2 matcap(vec3 eye, vec3 normal) {\n        vec3 r = reflect(eye, normal);\n        float m = 2. * sqrt( pow( r.x, 2. ) + pow( r.y, 2. ) + pow( r.z + 1., 2. ) );\n        vec2 vN = r.xy / m + .5;\n        return vN;\n    }\n",surface="\n    // mr doob\n    // vec3 normalgen(sampler2D h, vec2 uv) {\n    //     ivec2 size = textureSize(h, 0);\n    //     float px = 1. / float(size.x);// + 0.01;\n    //     float py = 1. / float(size.y);// + 0.01;\n    //     // px = 0.1;\n    //     // px = 0.1;\n    //  // float h00 = texture(h, uv + vec2(-px, -py)).r;\n    //     float h10 = texture(h, uv + vec2( 0., -py)).r;\n    //  // float h20 = texture(h, uv + vec2( px, -py)).r;\n    //     float h01 = texture(h, uv + vec2(-px,  0.)).r;\n    //     float h21 = texture(h, uv + vec2( px,  0.)).r;\n    //  // float h02 = texture(h, uv + vec2(-px,  py)).r;\n    //     float h12 = texture(h, uv + vec2( 0.,  py)).r;\n    //  // float h22 = texture(h, uv + vec2( px,  py)).r;\n    //     vec3 c = vec3((h21 - h01) + 0.5, (h12 - h10) + 0.5, 1);\n    //     return c;\n    // }\n    float sampleSobel(sampler2D t, vec2 uv)\n    {\n        float weight = 1.0;\n        float f = 1. - texture(t, uv).r;\n        return f * weight - (weight * 0.5);\n    }\n    // https://www.shadertoy.com/view/Xtd3DS\n    vec3 normalgen(sampler2D t, vec2 uv)\n    {   \n        ivec2 size = textureSize(t, 0);\n        float x = 1. / float(size.x);\n        float y = 1. / float(size.y);\n        // float x = 1. / 900.;\n        // float y = 1. / 900.;\n        \n        // |-1  0  1|\n        // |-2  0  2| \n        // |-1  0  1|\n        \n        float gX = 0.0;\n        gX += -1.0 * sampleSobel(t, uv + vec2(-x, -y));\n        gX += -2.0 * sampleSobel(t, uv + vec2(-x,  0));\n        gX += -1.0 * sampleSobel(t, uv + vec2(-x, +y));\n        gX += +1.0 * sampleSobel(t, uv + vec2(+x, -y));\n        gX += +2.0 * sampleSobel(t, uv + vec2(+x,  0));\n        gX += +1.0 * sampleSobel(t, uv + vec2(+x, +y));\n        \n        // |-1 -2 -1|\n        // | 0  0  0| \n        // | 1  2  1|\n        \n        float gY = 0.0;\n        gY += -1.0 * sampleSobel(t, uv + vec2(-x, -y));\n        gY += -2.0 * sampleSobel(t, uv + vec2( 0, -y));\n        gY += -1.0 * sampleSobel(t, uv + vec2(+x, -y));\n        gY += +1.0 * sampleSobel(t, uv + vec2(-x, +y));\n        gY += +2.0 * sampleSobel(t, uv + vec2( 0, +y));\n        gY += +1.0 * sampleSobel(t, uv + vec2(+x, +y));\n        \n    \n        vec2 f = vec2(sqrt(gX * gX + gY * gY), atan(-gY, -gX));\n        vec2 gradientDirection = f.x * vec2(cos(f.y), sin(f.y));\n        vec3 normal = normalize(vec3(gradientDirection, 1.0));\n        // normal.x = -normal.x;\n        return normal * 0.5 + 0.5;\n    }    \n    //vec3 normalmap(vec3 normal, vec3 tangent, vec3 bitangent, sampler2D t, vec2 uv, float scale) {\n    vec3 normalmap(mat3 tbn, sampler2D t, vec2 uv, float scale) {\n        vec3 n = texture(t, uv).xyz * 2.0 - 1.0;\n        // n.z *= -0.01;\n        n.xy *= scale;\n        return normalize(tbn * n);\n    }\n    vec2 parallax_f(vec2 uv, vec3 viewdir, sampler2D hmap, float scale, float quality) {\n        const float min = 10.;\n        float max = 512. * quality;\n        float n = mix(max, min, abs(dot(vec3(0, 0, 1), viewdir)));  \n        float depth = 1. / n;\n        float c = 0.;\n        vec2 P = viewdir.xy / viewdir.z * scale;\n        vec2 delta = P / n;\n        vec2 cuv = uv;\n        float ch = texture(hmap, cuv).r;\n        while(c < ch) {\n            cuv -= delta;\n            ch = texture(hmap, cuv).r;  \n            c += depth;  \n        }\n        vec2 prev = cuv + delta;\n        float after  = ch - c;\n        float before = texture(hmap, prev).r - c + depth;\n        float weight = after / (after - before);\n        vec2 r = prev * weight + cuv * (1. - weight);\n        return r;\n    }\n    // vec2 parallax(vec3 normal, vec3 tangent, vec3 bitangent, vec3 eye, vec3 pos, vec2 uv, sampler2D hmap, float scale) {\n    // vec2 parallax(vec3 normal, vec3 tangent, vec3 bitangent, sampler2D hmap, vec2 uv, float scale, vec3 pos, vec3 eye) {\n    vec2 parallax(mat3 tbn, sampler2D t, vec2 uv, float scale, float quality, vec3 pos, vec3 eye) {\n        mat3 ttbn = transpose(tbn);\n        \n        ivec2 size = textureSize(t, 0);\n        float asp = float(size.x) / float(size.y);\n\n        // asp = 1.;\n\n        eye.y *= asp;\n        pos.y *= asp;\n\n        vec3 tbnv = ttbn * eye;\n        vec3 tbnp = ttbn * pos.xyz;\n        vec3 vdir = normalize(tbnv - tbnp);\n        return parallax_f(uv, vdir, t, scale, quality);\n    }\n",particles="\n    // float[4] catmullrom_init_c(float x0, float x1, float t0, float t1) {\n    //     return float[4](\n    //         x0,\n    //         t0,\n    //         -3. * x0 + 3. * x1 - 2. * t0 - t1,\n    //         2. * x0 - 2. * x1 + t0 + t1\n    //     );\n    // }\n    // float[4] catmullrom_init(float x0, float x1, float x2, float x3, float tension) {\n    //     return catmullrom_init_c(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n    // }\n    // float[4] catmullrom_init_nonuni(float x0, float x1, float x2, float x3, float dt0, float dt1, float dt2) {\n    //     float t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n    //     float t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2;\n    //     t1 *= dt1;\n    //     t2 *= dt1;\n    //     return catmullrom_init_c(x1, x2, t1, t2);\n    // }\n    // float catmullrom_calc(float[4] c, float t) {\n    //     float t2 = t * t;\n    //     float t3 = t2 * t;\n    //     return c[0] + c[1] * t + c[2] * t2 + c[3] * t3;\n    // }\n    // float distance_to_squared(vec3 a, vec3 b) {\n    //     float dx = a.x - b.x;\n    //     float dy = a.y - b.y;\n    //     float dz = a.z - b.z;\n    //     return dx * dx + dy * dy + dz * dz;\n    // }\n    // vec3 catmullrom(vec3[4] p, float tension, float t) {\n    //     t = mod(t, 1.);\n    //     int LENGTH = 4;\n    //     float pp = float(LENGTH - 1) * t;\n    //     int ip = int(floor(pp));\n    //     float weight = pp - float(ip);\n    //     if(weight == 0. && ip == (LENGTH - 1)) {\n    //         ip = LENGTH - 2;\n    //         weight = 1.;\n    //     }\n    //     vec3 p0 = (p[0] - p[1]) + p[0];\n    //     vec3 p1 = p[ip % LENGTH];\n    //     vec3 p2 = p[(ip + 1) % LENGTH];\n    //     vec3 p3 = (p[LENGTH - 1] - p[LENGTH - 2]) + p[LENGTH - 1];\n    //     // non-uniform\n    //     float centripetal = 0.25;\n    //     float chordal = 0.5;\n    //     float pw = centripetal;\n    //     float dt0 = pow(distance_to_squared(p0, p1), pw);\n    //     float dt1 = pow(distance_to_squared(p1, p2), pw);\n    //     float dt2 = pow(distance_to_squared(p2, p3), pw);\n    //     if(dt1 < 1e-4) dt1 = 1.;\n    //     if(dt0 < 1e-4) dt0 = dt1;\n    //     if(dt2 < 1e-4) dt2 = dt1;\n    //     return vec3(\n    //         catmullrom_calc(catmullrom_init_nonuni(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2), weight),\n    //         catmullrom_calc(catmullrom_init_nonuni(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2), weight),\n    //         catmullrom_calc(catmullrom_init_nonuni(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2), weight)\n    //     );\n    //     // uniform\n    //     // tension = 0.7;\n    //     return vec3(\n    //         catmullrom_calc(catmullrom_init(p0.x, p1.x, p2.x, p3.x, tension), weight),\n    //         catmullrom_calc(catmullrom_init(p0.y, p1.y, p2.y, p3.y, tension), weight),\n    //         catmullrom_calc(catmullrom_init(p0.z, p1.z, p2.z, p3.z, tension), weight)\n    //     );\n    // }\n    vec3 catmullrom(vec3[4] p, float tension, float t) {\n        // Cardinal Spline Matrix\n        // https://www.shadertoy.com/view/MlGSz3\n        float T = tension;\n        mat4 CRM = mat4(-T,        2.0 - T,  T - 2.0,         T,\n                               2.0 * T,  T - 3.0,  3.0 - 2.0 * T,  -T,\n                              -T,        0.0,      T,               0.0,\n                               0.0,      1.0,      0.0,             0.0);\n        vec3 G1 = p[0];\n        vec3 G2 = p[1];\n        vec3 G3 = p[2];\n        vec3 G4 = p[3];\n        vec3 A = G1 * CRM[0][0] + G2 * CRM[0][1] + G3 * CRM[0][2] + G4 * CRM[0][3];\n        vec3 B = G1 * CRM[1][0] + G2 * CRM[1][1] + G3 * CRM[1][2] + G4 * CRM[1][3];\n        vec3 C = G1 * CRM[2][0] + G2 * CRM[2][1] + G3 * CRM[2][2] + G4 * CRM[2][3];\n        vec3 D = G1 * CRM[3][0] + G2 * CRM[3][1] + G3 * CRM[3][2] + G4 * CRM[3][3];\n        return t * (t * (t * A + B) + C) + D;\n    }\n    // vec3 curvepath(vec3[16] p, int size, float t) {\n    //     t = mod(t, 1.);\n    //     int i = int(floor(rescale(t, 0., 1., 0., float(size - 3))));\n    //     float d = 1. / float(size - 3);\n    //     float dt = mod(t, d);\n    //     vec3[4] v = vec3[4](p[i], p[i + 1], p[i + 2], p[i + 3]);\n    //     float x = 1. / 3.;\n    //     return catmullrom(v, 1., rescale(dt, 0., d, x, x + x));\n    // }\n    vec3 curvepath(vec3[64] p, float[64] ts, int size, float t) {\n        t = mod(t, 1.);\n        int i = int(floor(rescale(t, 0., 1., 0., float(size - 3))));\n        float d = 1. / float(size - 3);\n        float dt = mod(t, d);\n        vec3[4] v = vec3[4](p[i], p[i + 1], p[i + 2], p[i + 3]);\n        return catmullrom(v, ts[i + 1], rescale(dt, 0., d, 0., 1.));\n    }\n//\n//let span =\n    float randi2(int a, int b) {\n        vec2 st = vec2(a, b);\n        return fract(\n            sin(\n                dot(st, vec2(12.9898, 78.233))\n            ) * 43758.5453123\n        );\n    }\n    vec3 span(int seed, float range, float min, float offset, float time) {\n        float life = randi2(seed, 0) * range + min;\n        float off = randi2(seed, 1) * offset;\n        float n = off + time / life;\n        int cycle = int(n) + 2; // +2 to avoid overlap of randi2\n        float t = fract(n);\n        return vec3(cycle, t, seed);\n    }\n    const int START = 0;\n    const int START_RAND = 1;\n    const int END = 2;\n    const int END_RAND = 3;\n    float emit_field(float[4] v, float t, float r1, float r2) {\n        return mix(\n            v[START] + rescale(r1, 0., 1., -v[START_RAND], v[START_RAND]),\n            v[END]   + rescale(r2, 0., 1., -v[END_RAND],   v[END_RAND]),\n            t\n        );\n    }\n    mat4 emit(vec3 span, vec3[4] points, float[4] angle, float[4] size) {\n        int c = int(span.x);\n        float t = span.y;\n        int seed = int(span.z);\n        #define r() randi2(seed, c++)\n        vec3 a = points[START];\n        vec3 ar = points[START_RAND];\n        vec3 b = points[END];\n        vec3 br = points[END_RAND];\n        a.x += rescale(r(), 0., 1., -ar.x, ar.x);\n        a.y += rescale(r(), 0., 1., -ar.y, ar.y);\n        a.z += rescale(r(), 0., 1., -ar.z, ar.z);\n        b.x += rescale(r(), 0., 1., -br.x, br.x);\n        b.y += rescale(r(), 0., 1., -br.y, br.y);\n        b.z += rescale(r(), 0., 1., -br.z, br.z);\n        vec3 p_ = mix(a, b, t);\n        float an = emit_field(angle, t, r(), r());\n        float sz = emit_field(size,  t, r(), r());\n        #undef r\n        return translate(p_.x, p_.y, p_.z) * rotatez(an) * scale(sz, sz, sz);\n    }\n    mat4 emitcurve(vec3 span, vec3[64] ps, vec3[64] ds, float[64] ts, int length, float[4] angle, float[4] size) {\n        int c = int(span.x);\n        float t = span.y;\n        int seed = int(span.z);\n        #define r() randi2(seed, c++)\n        vec3[64] q;\n        for(int i = 0; i < length; i++) {\n            q[i] = vec3(\n                ps[i].x + rescale(r(), 0., 1., -ds[i].x, ds[i].x),\n                ps[i].y + rescale(r(), 0., 1., -ds[i].y, ds[i].y),\n                ps[i].z + rescale(r(), 0., 1., -ds[i].z, ds[i].z)\n            );\n        }\n        vec3 p_ = curvepath(q, ts, length, t);\n        float an = emit_field(angle, t, r(), r());\n        float sz = emit_field(size,  t, r(), r());\n        #undef r\n        return translate(p_.x, p_.y, p_.z) * rotatez(an) * scale(sz, sz, sz);\n    }\n//\n// let slash = \n    float slash_hard(vec4 p_, float a, float b, float c, float d, float time) {\n        float t = mod(time, a + b + c + d);\n        if(t < a) return (t / a - p_.r) > 0.? p_.a : 0.;\n        t -= a;\n        if(t < b) return p_.a;\n        t -= b;\n        if(t < c) return (t / c - p_.r) > 0.? 0. : p_.a;\n        return 0.;\n    }\n    float slash_one(float r, float a, float t, float n) {\n        float tn = t / n;\n        float f = tn - r;\n        float o = 0.5;\n        o = mix(o, 0., tn); // float o = 1. - tn;\n        if(f < 0.) return 0.;\n        if(f < o) {\n            return mix(0., a, rescale(f, 0., o, 0., 1.));\n        }\n        return 1.;\n    }\n    float slash(float pr, float pa, float a, float b, float c, float d, float time) {\n        float t = mod(time, a + b + abs(c) + d);\n        if(t < a) {\n            return slash_one(pr, pa, t, a);\n        }\n        t -= a;\n        if(t < b) {\n            return pa;\n        }\n        t -= b;\n        if(c < 0. && t < -c) {\n            return slash_one(pr, pa, -c - t, -c);\n        }\n        if(t < c) {\n            return 1. - slash_one(pr, pa, t, c);\n        }\n        return 0.;\n    }\n",color="\n    vec3 rgbtohsv(vec3 c) {\n        vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n        vec4 p_ = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n        vec4 q = mix(vec4(p_.xyw, c.r), vec4(c.r, p_.yzx), step(p_.x, c.r));\n        float d = q.x - min(q.w, q.y);\n        float e = 1.0e-10;\n        return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n    }\n    vec3 hsvtorgb(vec3 c) {\n        vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n        vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n        return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n    }\n    vec4 hue(vec4 c, float v) {\n        vec3 hsv = rgbtohsv(c.rgb);\n        hsv.x += v;\n        c.rgb = hsvtorgb(hsv);\n        return c;\n    }\n    vec4 invert(vec4 c) {\n        return vec4(1.-c.r, 1.-c.g, 1.-c.b, c.a);\n    }\n",filters="\n    // vec4 blur_13(sampler2D image, vec2 uv, vec2 strength) {\n    //     vec4 color = vec4(0.0);\n    //     vec2 off1 = vec2(1.411764705882353) * strength;\n    //     vec2 off2 = vec2(3.2941176470588234) * strength;\n    //     vec2 off3 = vec2(5.176470588235294) * strength;\n    //     color += texture(image, uv) * 0.1964825501511404;\n    //     color += texture(image, uv + off1) * 0.2969069646728344;\n    //     color += texture(image, uv - off1) * 0.2969069646728344;\n    //     color += texture(image, uv + off2) * 0.09447039785044732;\n    //     color += texture(image, uv - off2) * 0.09447039785044732;\n    //     color += texture(image, uv + off3) * 0.010381362401148057;\n    //     color += texture(image, uv - off3) * 0.010381362401148057;\n    //     return color;\n    // }\n    // vec4 hblur(sampler2D t, vec2 uv, float strength) {\n    //     return blur_13(t, uv, vec2(strength, 0));\n    // }\n    // vec4 vblur(sampler2D t, vec2 uv, float strength) {\n    //     return blur_13(t, uv, vec2(0, strength));\n    // }\n\n    vec4 blur_13(sampler2D image, vec2 uv, vec2 direction) {\t\n        vec4 color = vec4(0.0);\t\n        vec2 off1 = vec2(1.411764705882353) * direction;\t\n        vec2 off2 = vec2(3.2941176470588234) * direction;\t\n        vec2 off3 = vec2(5.176470588235294) * direction;\t\n        color += texture(image, uv) * 0.1964825501511404;\t\n        color += texture(image, uv + off1) * 0.2969069646728344;\t\n        color += texture(image, uv - off1) * 0.2969069646728344;\t\n        color += texture(image, uv + off2) * 0.09447039785044732;\t\n        color += texture(image, uv - off2) * 0.09447039785044732;\t\n        color += texture(image, uv + off3) * 0.010381362401148057;\t\n        color += texture(image, uv - off3) * 0.010381362401148057;\t\n        return color;\t\n    }\t\n    vec4 hblur(sampler2D t, vec2 uv, float strength) {\t\n        return blur_13(t, uv, vec2(strength, 0));\t\n    }\t\n    vec4 vblur(sampler2D t, vec2 uv, float strength) {\n        return blur_13(t, uv, vec2(0, strength));\n    }\n//\n//let zoomblur = \n    vec4 zoomblur(sampler2D img, vec2 uv, float x, float y, float strength) {\n        vec2 inc = (vec2(x, 1. - y) - uv) * strength;\n        vec4 sum;\n        sum += texture(img, uv - inc * 4.) * 0.051;\n        sum += texture(img, uv - inc * 3.) * 0.0918;\n        sum += texture(img, uv - inc * 2.) * 0.12245;\n        sum += texture(img, uv - inc * 1.) * 0.1531;\n        sum += texture(img, uv + inc * 0.) * 0.1633;\n        sum += texture(img, uv + inc * 1.) * 0.1531;\n        sum += texture(img, uv + inc * 2.) * 0.12245;\n        sum += texture(img, uv + inc * 3.) * 0.0918;\n        sum += texture(img, uv + inc * 4.) * 0.051;\n        return sum;\n    }\n    // vec4 zoomblur2(sampler2D img, vec2 uv, float x, float y, float sa, float sb) {\n    //     vec2 inc = (vec2(x, 1. - y) - uv) * vec2(sa, sb);\n    //     vec4 sum;\n    //     sum += texture(img, uv - inc * 4.) * 0.051;\n    //     sum += texture(img, uv - inc * 3.) * 0.0918;\n    //     sum += texture(img, uv - inc * 2.) * 0.12245;\n    //     sum += texture(img, uv - inc * 1.) * 0.1531;\n    //     sum += texture(img, uv + inc * 0.) * 0.1633;\n    //     sum += texture(img, uv + inc * 1.) * 0.1531;\n    //     sum += texture(img, uv + inc * 2.) * 0.12245;\n    //     sum += texture(img, uv + inc * 3.) * 0.0918;\n    //     sum += texture(img, uv + inc * 4.) * 0.051;\n    //     return sum;\n    // }\n    float sobel(sampler2D t, vec2 uv, float x, float y) { // x and y are strength\n        vec4 h = vec4(0);\n        h -= texture(t, vec2(uv.x - x, uv.y - y)) * 1.;\n        h -= texture(t, vec2(uv.x - x, uv.y    )) * 2.;\n        h -= texture(t, vec2(uv.x - x, uv.y + y)) * 1.;\n        h += texture(t, vec2(uv.x + x, uv.y - y)) * 1.;\n        h += texture(t, vec2(uv.x + x, uv.y    )) * 2.;\n        h += texture(t, vec2(uv.x + x, uv.y + y)) * 1.;\n        vec4 v_ = vec4(0);\n        v_ -= texture(t, vec2(uv.x - x, uv.y - y)) * 1.;\n        v_ -= texture(t, vec2(uv.x    , uv.y - y)) * 2.;\n        v_ -= texture(t, vec2(uv.x + x, uv.y - y)) * 1.;\n        v_ += texture(t, vec2(uv.x - x, uv.y + y)) * 1.;\n        v_ += texture(t, vec2(uv.x    , uv.y + y)) * 2.;\n        v_ += texture(t, vec2(uv.x + x, uv.y + y)) * 1.;\n        vec3 edge = sqrt(h.rgb * h.rgb + v_.rgb * v_.rgb);\n        return (edge.x + edge.y + edge.z) / 3.;\n    }\n    // https://www.shadertoy.com/view/XlsXRB\n    float outline_x(sampler2D t, vec2 uv, float samples_dx, bool inside) {\n        vec2 size = vec2(textureSize(t, 0));\n        ivec2 iuv = ivec2(int(uv.x * size.x), int(uv.y * size.y));\n        float samples = round(samples_dx * size.x);\n        int isamples = int(samples);\n        float d = samples;\n        for(int x = -isamples; x != isamples; x++) {\n            for(int y = -isamples; y != isamples; y++) {\n                float a = texelFetch(t, iuv + ivec2(x, y), 0).a;\n                if(inside) a = 1. - a;\n                // if(dot(normalize(vec2(x, y)), normalize(vec2(0, -5))) < 0.75) continue;\n                if(a > 0.5) {\n                    d = min(d, length(vec2(x, y)));\n                }\n            }\n        }\n        d = clamp(d, 0., samples) / samples;\n        // d = clamp(d, 0., 1.); // may be over -0.00000001\n        return 1. - d;\n    }\n    float outline(sampler2D t, vec2 uv, float samples_dx) {\n        return outline_x(t, uv, samples_dx, false);\n    }\n\n\n\n\n\n    const float[64] ssao_noise = float[64](\n        -0.7123168110847473, 0.7018580436706543, 0., 0., -0.6823078393936157, -0.7310649752616882, 0., 0., 0.8779285550117493, -0.47879165410995483, 0., 0., 0.7977963089942932, 0.602927029132843, 0., 0., 0.15651366114616394, -0.9876757860183716, 0., 0., 0.9920237064361572, -0.12605135142803192, 0., 0., -0.8378090262413025, -0.5459634065628052, 0., 0., 0.6735560297966003, 0.7391361594200134, 0., 0., 0.02000349946320057, 0.999799907207489, 0., 0., 0.30650821328163147, -0.9518679976463318, 0., 0., -0.4286597669124603, 0.903465986251831, 0., 0., 0.7592897415161133, 0.6507527232170105, 0., 0., 0.9918479919433594, -0.1274268627166748, 0., 0., 0.7089933753013611, -0.7052151560783386, 0., 0., 0.9855568408966064, 0.1693449169397354, 0., 0., 0.4421997368335724, -0.8969166278839111, 0., 0.\n    );\n    vec4 table_get(vec4[16] table, int i, int j) {\n        return table[i * 4 + j];\n    }\n    vec3 ssao_noise_lookup(float x, float y) {\n        // float[64] T = ssao_noise;\n        // vec4[24] table;\n        // table[0] = vec4(T[0],  T[1],  T[2],  T[3]);\n        // table[1] = vec4(T[4],  T[5],  T[6],  T[7]);\n        // table[2] = vec4(T[8],  T[9],  T[10], T[11]);\n        // table[3] = vec4(T[12], T[13], T[14], T[15]);\n        // table[4] = table[0];\n        // table[5] = vec4(T[16], T[17], T[18], T[19]);\n        // table[6] = vec4(T[20], T[21], T[22], T[23]);\n        // table[7] = vec4(T[24], T[25], T[26], T[27]);\n        // table[8] = vec4(T[28], T[29], T[30], T[31]);\n        // table[9] = table[5];\n        // table[10] = vec4(T[32], T[33], T[34], T[35]);\n        // table[11] = vec4(T[36], T[37], T[38], T[39]);\n        // table[12] = vec4(T[40], T[41], T[42], T[43]);\n        // table[13] = vec4(T[44], T[45], T[46], T[47]);\n        // table[14] = table[10];\n        // table[15] = vec4(T[48], T[49], T[50], T[51]);\n        // table[16] = vec4(T[52], T[53], T[54], T[55]);\n        // table[17] = vec4(T[56], T[57], T[58], T[59]);\n        // table[18] = vec4(T[60], T[61], T[62], T[63]);\n        // table[19] = table[15];\n        // table[20] = table[0];\n        // table[21] = table[1];\n        // table[22] = table[2];\n        // table[23] = table[3];\n        float[64] T = ssao_noise;\n        vec4[16] table;\n        table[0] =  vec4(T[0],  T[1],  T[2],  T[3]);\n        table[1] =  vec4(T[4],  T[5],  T[6],  T[7]);\n        table[2] =  vec4(T[8],  T[9],  T[10], T[11]);\n        table[3] =  vec4(T[12], T[13], T[14], T[15]);\n        table[4] =  vec4(T[16], T[17], T[18], T[19]);\n        table[5] =  vec4(T[20], T[21], T[22], T[23]);\n        table[6] =  vec4(T[24], T[25], T[26], T[27]);\n        table[7] =  vec4(T[28], T[29], T[30], T[31]);\n        table[8] =  vec4(T[32], T[33], T[34], T[35]);\n        table[9] =  vec4(T[36], T[37], T[38], T[39]);\n        table[10] = vec4(T[40], T[41], T[42], T[43]);\n        table[11] = vec4(T[44], T[45], T[46], T[47]);\n        table[12] = vec4(T[48], T[49], T[50], T[51]);\n        table[13] = vec4(T[52], T[53], T[54], T[55]);\n        table[14] = vec4(T[56], T[57], T[58], T[59]);\n        table[15] = vec4(T[60], T[61], T[62], T[63]);\n\n        x = mod(x, 1.);\n        y = mod(y, 1.);\n        float yy = y * 4.;\n        float xx = x * 4.;\n\n        int j = int(floor(xx));\n        float jd = fract(xx);\n        int j2 = j + 1;\n        if(j2 == 4) j2 = 0;\n        \n        int i = int(floor(yy));\n        float id = fract(yy);\n        int i2 = i + 1;\n        if(i2 == 4) i2 = 0;\n\n        vec4 a = table_get(table, i,  j);\n        vec4 b = table_get(table, i,  j2);\n        // vec4 c = table_get(table, i2, j2);\n        vec4 d = table_get(table, i2, j);\n\n        vec4 X = mix(a, b, jd);\n        vec4 Y = mix(a, d, id);\n        vec4 R = (X + Y) / 2.;\n\n        return vec3(R.xyz);\n    }\n    \n    float[192] ssao_kernel = float[192](-0.09374634215485403,-0.000375369488122982,0.01754888749241413,0.017984001619785535,-0.04356818942450886,0.03569104774985324,-0.043783772268963614,-0.03428895654049228,0.06042799265745649,-0.049004574674518894,-0.06304131859385166,0.027820859347207735,-0.03586738716809315,-0.061326853471432886,0.03525915815457384,-0.06871109333104407,0.01440255699091857,0.04853617849294936,-0.07251809166741986,0.014862179462582895,0.044602699837812995,-0.004731613274647387,-0.017119952135333877,0.0010520665356540406,0.004400121280317265,0.0081662423060754,0.0024589850574472513,0.02537708481215369,0.040274072947467134,0.038324930598352736,-0.007138754764226268,0.049238945168016926,0.006914354524334151,-0.03812673535532064,0.031884808551242524,0.02335045312675197,-0.055864272680788835,-0.006359346492396586,0.0535015245616255,-0.009584547833344784,-0.011422438717361047,0.010290444556246493,0.021175210042685355,0.008931455967788389,0.011879037149721137,-0.004793906537912411,0.012239745521245257,0.13845648606007668,-0.12320928777467297,-0.03853214341372054,0.03412892884776708,-0.08198963874808374,-0.0695686376581193,0.08181684092432585,0.01823509576170111,-0.04889349713193072,0.03762078575423584,-0.032004831476432356,-0.052774232426097925,0.04569333909528465,0.0940348428347339,0.10626822873154232,0.09972482655676185,0.007802552274548907,0.005133272072566735,0.002166986454912428,0.07866566481805626,0.1552667569400362,0.07852789908155675,-0.03798069797314559,-0.0502937747707072,0.11348609067133583,-0.002146962492623746,-0.20358790691639203,0.06879590114599042,-0.11591459015942243,-0.1218945568148924,0.03321024826595269,-0.027859925696481828,0.020007218450851617,0.014431493454092136,0.052639650429022834,0.056978184034887906,0.007799340007003614,0.031220462682335793,0.16666673577793695,0.010408441481931355,-0.03762052936151246,0.03275710650902212,0.004346024772262918,-0.0130415503531828,0.06797832940740839,0.1999559866974219,-0.042058242343440556,-0.22307173108637188,0.12414794904835745,0.12561713530566443,-0.18244935949291594,0.18400526123373917,-0.16826845611664232,0.0803426684231622,0.1623067171427741,0.14300190679782254,0.1837605876166513,0.006462688612661839,0.11952513771136124,-0.3324093275082819,0.03137726320181103,-0.17258251668034924,0.011217030790295497,0.03996294616883077,0.2113137917319127,0.03779921619255335,0.07011234335317412,0.1634120795831472,-0.06457250655616936,0.11192856623922605,-0.19992681370486173,-0.3392611456024551,0.15736686389572502,0.30014044700952447,-0.02073647740507387,0.17808231831412402,-0.11875919251439018,-0.1751823944565052,0.36157555075342246,-0.3425712118794504,0.016253681339188523,0.16911073962736342,0.16933453937240683,-0.1772008093683016,0.07905365814824468,-0.21845331969168105,0.037079630424815185,0.393764176967778,-0.2086258507041632,-0.29730180456336996,0.007498636375080457,-0.002646146646925911,0.008584992115597294,0.0350626152112999,-0.09889040746774319,-0.015992421153517632,0.1328136203632947,-0.1974356421528559,0.0485295866318073,0.04025833872279758,0.32849577823378845,-0.2881668991695629,0.12646953557617205,0.20828762680152946,0.03234418544741987,0.06099372996636346,0.12544830224195277,0.0785383512646071,0.10857925036501055,-0.26441094277718147,-0.2216408863852765,0.2635546996574406,-0.17758098372840736,0.22486559143510249,0.28015606633562423,-0.21150219089628147,0.005408811711959217,0.04227624334243415,-0.15864015220389596,-0.21092533958378795,0.45207521628208824,0.09108306426946074,0.06849434139019694,0.14582484416096658,-0.48576565292941276,0.3269469461022946,0.560117393154986,-0.19101145455923585,-0.08707745185721452,0.2095832167054974,0.3330429107637653,0.4361984010525983,0.5965322553062029,0.18626542472931382,-0.13442625118145018,0.09891189581983724,-0.23747211790531572,0.302296765488922,0.243641847704324,0.0514500352700186,-0.04402159188998558,0.4888981072719507,0.0018009241897987776,0.03609386481524951,0.014861843655224498);\n\n    float ssao(float w, float h, mat4 proj, mat4 camera, sampler2D tpos, sampler2D tnormal, vec2 uv, float radius, float bias) {\n        vec2 noise_scale = vec2(w / 4., h / 4.); // noise_texture.size()\n        vec3 pos = (inverse(camera) * texture(tpos, uv)).xyz;\n        vec3 q = (mat3(transpose(camera))) * texture(tnormal, uv).xyz;\n        vec3 normal = (q.xyz);\n        float xx = mod(uv.x * noise_scale.x, 1.);\n        float yy = mod(uv.y * noise_scale.y, 1.);\n        // vec3 rvec = texture(noise, vec2(xx, yy)).xyz;\n        vec3 rvec = ssao_noise_lookup(xx, yy);\n        vec3 tangent   = normalize(rvec - normal * dot(rvec, normal));\n        vec3 bitangent = cross(normal, tangent);\n        mat3 TBN       = mat3(tangent, bitangent, normal);\n        float occlusion = 0.;\n        for(int i = 0; i < 192; i += 3) {\n            vec3 s = TBN * vec3(\n                ssao_kernel[i],\n                ssao_kernel[i + 1],\n                ssao_kernel[i + 2]\n            );\n            s = pos + s * radius; \n            vec4 offset = vec4(s, 1);\n            offset      = proj * offset;\n            offset.xyz /= offset.w;\n            offset.xyz  = offset.xyz * 0.5 + 0.5;\n            float depth = (inverse(camera) * texture(tpos, offset.xy)).z;\n            float range = smoothstep(0., 1., radius / abs(pos.z - depth));\n            occlusion += (depth >= s.z + bias? 1. : 0.) * range;\n        }  \n        occlusion = 1. - clamp(occlusion / 64., 0., 1.);\n        return occlusion;\n    }\n\n\n\n\n\n\n\n\n\n\n\n",misc="\n    float aspect(sampler2D t) {\n        ivec2 size = textureSize(t, 0);\n        return float(size.x) / float(size.y);\n    }\n\n    // mat4 quat2mat(vec4 q) {\n    //     float x2 = q.x + q.x, y2 = q.y + q.y, z2 = q.z + q.z;\n    //     float xx = q.x * x2,  xy = q.x * y2,  xz = q.x * z2;\n    //     float yy = q.y * y2,  yz = q.y * z2,  zz = q.z * z2;\n    //     float wx = q.w * x2,  wy = q.w * y2,  wz = q.w * z2;\n    //     vec3 s = vec3(1);\n    //     mat4 m = mat4(1);\n    //     m[0][0] = (1. - (yy + zz)) * s.x;\n    //     m[1][0] = (xy + wz) * s.x;\n    //     m[2][0] = (xz - wy) * s.x;\n    //     m[0][1] = (xy - wz) * s.y;\n    //     m[1][1] = (1. - (xx + zz)) * s.y;\n    //     m[2][1] = (yz + wx) * s.y;\n    //     m[0][2] = (xz + wy) * s.z;\n    //     m[1][2] = (yz - wx) * s.z;\n    //     m[2][2] = (1. - (xx + yy)) * s.z;\n    //     return transpose(m); /////////////////////////////////////////////////////////\n    // }\n    // mat4 clip_x(sampler2D s, uvec4 joints, vec4 weights, float time) {\n    //     vec4 head = texelFetch(s, ivec2(0, 0), 0);\n    //     float length = head.x;\n    //     // if(length == 0.) return mat4(1);\n    //     float fps = head.y;\n    //     int bones = int(head.z);\n    //     if(bones <= 1) return mat4(1);\n    //     float t = mod(time, length);\n    //     int frame = int(t * fps);\n    //     mat4 r = mat4(0);\n    //     int size = textureSize(s, 0).x;\n    //     for(int i = 0; i < 4; i++) {\n    //         int p = 1 + frame * bones * 2 + (int(joints[i]) + 1) * 2;\n\n    //         int x = p % size;\n    //         int y = p / size;\n    //         int x2 = (p + 1) % size;\n    //         int y2 = (p + 1) / size;\n\n\n    //         // int x = int(floor(mod(float(p), float(size))));\n    //         // int y = int(floor(   float(p) / float(size)));\n    //         // int x2 = int(floor(mod(float(p + 1), float(size))));\n    //         // int y2 = int(floor(   float(p + 1) / float(size)));\n\n\n    //         // x = p - (y * size);\n    //         vec3 a =  texelFetch(s, ivec2(x, y), 0).xyz;\n    //         vec4 aq = texelFetch(s, ivec2(x2, y2), 0);\n\n    //         // vec3 a =  texelFetch(s, ivec2(p, 0), 0).xyz;\n    //         // vec4 aq = texelFetch(s, ivec2(p + 1, 0), 0);\n    //         r += (translate(a.x, a.y, a.z) * quat2mat(aq)) * weights[i];\n    //     }\n    //     return r;\n    // }\n\n    // float texel(sampler2D s, int p) {\n    //     int channels = 4;\n    //     int width = textureSize(s, 0).x * channels;\n    //     int x = p % width;\n    //     int y = p / width;\n    //     vec4 tex = texelFetch(s, ivec2(x / channels, y), 0);\n    //     int offset = x % channels;\n    //     return tex[offset];\n    // }\n    mat4 clip_item(sampler2D s, int p, int size) {\n        int x1 = p % size;\n        int y1 = p / size;\n        int x2 = (p + 1) % size;\n        int y2 = (p + 1) / size;\n        int x3 = (p + 2) % size;\n        int y3 = (p + 2) / size;\n        int x4 = (p + 3) % size;\n        int y4 = (p + 3) / size;\n        vec4 a = texelFetch(s, ivec2(x1, y1), 0);\n        vec4 b = texelFetch(s, ivec2(x2, y2), 0);\n        vec4 c = texelFetch(s, ivec2(x3, y3), 0);\n        vec4 d = texelFetch(s, ivec2(x4, y4), 0);\n        return mat4(a, b, c, d);\n    }\n    mat4 clip(sampler2D s, uvec4 joints, vec4 weights, float time) {\n        vec4 head = texelFetch(s, ivec2(0, 0), 0);\n        float length = head.x;\n        float fps = head.y;\n        int stride = int(head.z);\n        float t = mod(time, length);\n        int frame = int(t * fps);\n        int size = textureSize(s, 0).x;\n        int p = 1 + frame * stride * 4 + 0;\n        mat4 r = clip_item(s, p, size);\n        if(stride <= 1) return r;\n        mat4 q = mat4(0);\n        for(int i = 0; i < 4; i++) {\n            int p = 1 + frame * stride * 4 + (int(joints[i]) + 1) * 4;\n            q += clip_item(s, p, size) * weights[i];\n        }\n        return r * q;\n    }\n\n// dist\n    // https://www.iquilezles.org/www/articles/intersectors/intersectors.htm\n    // https://www.geometrictools.com/Source/Distance3D.html\n    // r = 0.0025\n    // distrayseg\n    // if m is 1, returns depth\n    //    when 0, just 0 (overlap)\n    // float distrayseg(vec3 ro, vec3 rd, vec3 pa, vec3 pb, float r, float m, float none) {\n    //     vec3 ba = pb - pa;\n    //     vec3 oa = ro - pa;\n    //     float baba = dot(ba, ba);\n    //     float bard = dot(ba, rd);\n    //     float baoa = dot(ba, oa);\n    //     float rdoa = dot(rd, oa);\n    //     float oaoa = dot(oa, oa);\n    //     float a = baba        - bard * bard;\n    //     float b = baba * rdoa - baoa * bard;\n    //     float c = baba * oaoa - baoa * baoa - r * r * baba;\n    //     float h = b * b - a * c;\n    //     if(h >= 0.) {\n    //         float t = (-b - sqrt(h)) / a;\n    //         float y = baoa + t * bard;\n    //         if(y > 0. && y < baba) { // body\n    //             return t * m;\n    //         }\n    //         vec3 oc = (y <= 0.)? oa : ro - pb; // caps\n    //         b = dot(rd, oc);\n    //         c = dot(oc, oc) - r * r;\n    //         h = b * b - c;\n    //         if(h > 0.) return -b - sqrt(h);\n    //     }\n    //     return none;\n    // }\n\n    // px and py are the pivot points; (-0.5, -0.5 is top left, 0.5, 0.5 is bottom right)\n    mat4 sprite(float tw, float th, float x, float y, float w, float h, float r, float px, float py) {\n        mat4 m = ortho(-tw / 2., tw / 2., th / 2., -th / 2., 0., 1.);\n        m *= translate(x + w / 2. - tw / 2., -y - h / 2. + th / 2., 0.);\n        m *= translate(px * w, -py * h, 0.);\n        m *= rotatez(r);\n        m *= scale(w, h, 1.);\n        m *= translate(-px, py, 0.);\n        return m;                \n    }\n\n\n",blend=(e,t)=>"\n    float "+e+"_f(float Sc, float Dc) {\n        return "+t+";\n    }\n    // vec4 "+e+"(vec4 Sca, vec4 Dca) {\n    vec4 "+e+"(vec4 Dca, vec4 Sca) {\n        vec3 Sc = Sca.a == 0.? vec3(0) : Sca.rgb / Sca.a;\n        vec3 Dc = Dca.a == 0.? vec3(0) : Dca.rgb / Dca.a;\n        float Sa = Sca.a;\n        float Da = Dca.a;\n        float X = 1.;\n        float Y = 1.;\n        float Z = 1.;\n        float r = "+e+"_f(Sc.r, Dc.r) * Sa * Da + Y * Sca.r * (1.-Da) + Z * Dca.r * (1.-Sa);\n        float g = "+e+"_f(Sc.g, Dc.g) * Sa * Da + Y * Sca.g * (1.-Da) + Z * Dca.g * (1.-Sa);\n        float b = "+e+"_f(Sc.b, Dc.b) * Sa * Da + Y * Sca.b * (1.-Da) + Z * Dca.b * (1.-Sa);\n        float a = X * Sa * Da  + Y * Sa  * (1.-Da) + Z * Da  * (1.-Sa);\n        return vec4(r, g, b, a);\n    }\n",blendmodes="\n    "+blend("blend","Sc")+"\n    // dissolve\n    "+blend("darken","min(Sc, Dc)")+"\n    "+blend("multiply","Sc * Dc")+"\n    "+blend("colorburn","(Sc == 0.)? 0. : 1. - min(1., (1. - Dc) / Sc)")+"\n    "+blend("linearburn","max(Dc + Sc - 1., 0.)")+"\n    // darker color\n    "+blend("lighten","max(Sc, Dc)")+"\n    "+blend("screen","Sc + Dc - (Sc * Dc)")+"\n    "+blend("colordodge","(Sc == 1.)? 1. : min(1., Dc / (1. - Sc))")+"\n    "+blend("addition","Sc + Dc")+" // linear dodge\n    // lighter color\n    "+blend("overlay","\n        (2. * Dc <= 1.)?\n            2. * Sc * Dc\n        :\n            1. - 2. * (1. - Dc) * (1. - Sc)\n    ")+"\n    "+blend("softlight","\n        (2. * Sc <= 1.)?\n            Dc - (1. - 2. * Sc) * Dc * (1. - Dc)\n        : (2. * Sc > 1. && 4. * Dc <= 1.)?\n            Dc + (2. * Sc - 1.) * (4. * Dc * (4. * Dc + 1.) * (Dc - 1.) + 7. * Dc)\n        :\n            Dc + (2. * Sc - 1.) * (pow(Dc, 0.5) - Dc)")+"\n    "+blend("hardlight","(2. * Sc <= 1.)? 2. * Sc * Dc : 1. - 2. * (1. - Dc) * (1. - Sc)")+"\n    // vividlight\n    // linearlight\n    // pinlight\n    // hardmix\n    "+blend("difference","abs(Dc - Sc)")+"\n    "+blend("exclusion","Sc + Dc - 2. * Sc * Dc")+"\n    "+blend("subtract","Dc - Sc")+"\n    // divide\n    // hue\n    // saturation\n    // color\n    // luminosity\n",ETC="\n    // vec3[2] ray(mat4 proj, mat4 camera, vec2 uv) {\n    //     proj[2][2] = -1.;\n    //     proj[3][2] = -1.;\n    //     vec3 ro = position(camera);\n    //     vec4 ndc = vec4(uv * 2. - 1., 1., 1.);\n    //     vec3 rd = normalize((camera * inverse(proj) * ndc).xyz);\n    //     return vec3[2](ro, rd);\n    // }\n\n    // // i is image, s screen\n    // vec2 uvfit(vec2 uv, float i, float s) {\n    //     uv -= 0.5;\n    //     if(s > i) uv.x = s * uv.x / i;\n    //     else      uv.y = (1. / s) * uv.y / (1. / i);\n    //     uv += 0.5;\n    //     return uv;\n    // }\n    // vec2 uvscale(vec2 uv, float n) {\n    //     uv -= 0.5;\n    //     uv *= 1. / n;\n    //     uv += 0.5;\n    //     return uv;\n    // }\n\n    vec2 mirror(vec2 uv) {\n        uv.x = mod(uv.x, 2.);\n        uv.y = mod(uv.y, 2.);\n        if(uv.x > 1.) uv.x = 1. - (uv.x - 1.);\n        if(uv.y > 1.) uv.y = 1. - (uv.y - 1.);\n        return uv;\n    }\n\n    // float disp(sampler2D disp, vec2 uv, float time, float scale) {\n    //     uv *= scale;\n    //     uv += time;\n    //     return textureLod(disp, mirror(uv), 0.).x;\n    // }\n\n    float vnoise_F(vec2 p) {\n        #define rand(f) fract(sin(f) * 10000.)   \n        #define rand2d(x, y) rand(x + y * 100.)    // OG 10000.\n        float sw = rand2d(floor(p.x), floor(p.y));\n        float se = rand2d(ceil(p.x),  floor(p.y));\n        float nw = rand2d(floor(p.x), ceil(p.y));\n        float ne = rand2d(ceil(p.x),  ceil(p.y));\n        #undef rand\n        #undef rand2d\n        vec2 inter = smoothstep(0., 1., fract(p));\n        float s = mix(sw, se, inter.x);\n        float n = mix(nw, ne, inter.x);\n        return mix(s, n, inter.y);\n    }\n    // float fbm(vec2 p) {\n    //     float total = 0.0;\n    //     total += vnoise_F(p);\n    //     total += vnoise_F(p * 2.) / 2.;\n    //     total += vnoise_F(p * 4.) / 4.;\n    //     total += vnoise_F(p * 8.) / 8.;\n    //     total += vnoise_F(p * 16.) / 16.;\n    //     total /= 1. + 1./2. + 1./4. + 1./8. + 1./16.;\n    //     return total;\n    // }\n    float vnoise(vec2 p, int octs) {\n        float total = 0.;\n        float div = 0.;\n        for(int i = 0; i < octs; i++) {\n            float mul = pow(2., float(i));\n            total += vnoise_F(p * mul) / mul;\n            div += 1. / mul;\n        }\n        return total / div;\n    }\n\n\n",shaderlib="\n    "+math+"\n    "+matrices+"\n    "+lights+"\n    "+surface+"\n    "+particles+"\n    "+color+"\n    "+filters+"\n    "+misc+"\n    "+blendmodes+"\n    "+ETC+"\n",shadertag="//// code",shader=(e,t)=>{let n=prefix,r=e+(e.includes(" vertex(")?"":"\n        mat4 vertex(vx a) {\n            return orthoquad;\n        }    \n    "),i=2==(r.includes("mat4 vertex(")?1:r.includes("mat4[3] vertex(")?2:0),s=r.includes("vec4 pixel(")?1:r.includes("vec4[2] pixel(")?2:r.includes("vec4[3] pixel(")?3:r.includes("vec4[4] pixel(")?4:r.includes("vec5 pixel(")?5:0,a=t.map((([e,t])=>"uniform "+t+" "+n+e+";")).join("\n"),o=t.map((([e,t])=>"sampler2D"===t?"":t+" "+e+";")).join("\n"),c=t.map((([e,t])=>"sampler2D"===t?"":", "+n+e)).join(""),l=t.map((([e,t])=>"sampler2D"===t?e:"")).filter((e=>e)).join("|"),h=new RegExp("(^|\\W)(v|p|a)\\.("+l+")(\\W|$)","g");r=r.replace(h,((e,t,r,i,s)=>t+n+i+s));let u="#version 300 es\n        precision highp float;\n        precision highp int;\n        "+shaderlib+"\n        "+shadertag+"\n        "+a+"\n        struct vx {\n            int instance;\n            uvec4 joints;\n            vec4 weights;\n            "+o+"\n        };\n        struct px {\n            int instance;\n            vec2 uv;\n            bool front;\n            float depth;\n            ivec2 st;\n            "+(i?"\n                vec3 pos;\n                float posw;\n                vec3 normal;\n                // vec3 vpos;\n                // vec3 vnormal;\n                mat3 tbn;\n                vec3 eye;":"")+"\n            "+o+"\n        };\n        struct vec5 { vec4 _v4; float _f; };\n        // f -> nowrite\n    ";return[u+"\n        #define discard 0.\n        "+r+"\n        layout(location=0) in  vec4 a_pos;\n        layout(location=1) in  vec2 a_uv;\n        layout(location=2) in  vec3 a_normal;\n        layout(location=3) in  vec4 a_tangent;\n        layout(location=4) in uvec4 a_joints;\n        layout(location=5) in  vec4 a_weights;\n        out vec4 v_pos;\n        out vec2 v_uv;\n        out vec3 v_normal;\n        out vec3 v_tangent;\n        out vec3 v_bitangent;\n        \n        // out vec4 v_vpos;\n        // out vec3 v_vnormal;\n\n        flat out vec3 v_eye;\n        flat out int  v_instance;\n        void main()\t{\n            vx args = vx(\n                gl_InstanceID,\n                a_joints,\n                a_weights\n                "+c+"\n            );            \n            mat4 m = mat4(1);\n            mat4 v = mat4(1);\n            mat4 p = mat4(1);\n            "+(i?"\n                mat4[3] pvm = vertex(args);\n                p = pvm[0];\n                v = pvm[1];\n                m = pvm[2];":"\n                m = vertex(args);\n            ")+"\n            gl_Position = (p * v * m) * a_pos;\n            v_uv = a_uv;\n            v_instance = gl_InstanceID;\n            "+(i?"\n                v_pos = m * a_pos;\n                // v_vpos = (v * m) * a_pos;\n\n                mat3 nm = mat3(transpose(inverse(m)));\n                v_normal = normalize(nm * a_normal);\n\n                // mat3 vnm = mat3(transpose(inverse(v * m)));\n                // v_vnormal = normalize(vnm * a_normal);\n\n                v_tangent = normalize(nm * a_tangent.xyz);\n                v_bitangent = normalize(cross(v_normal, v_tangent) * a_tangent.w);\n                v_eye = position(inverse(v));":"")+"\n        }",u+"\n        "+r+`\n        in vec4 v_pos;\n        in vec2 v_uv;\n        in vec3 v_normal;\n        in vec3 v_tangent;\n        in vec3 v_bitangent;\n\n        // in vec4 v_vpos;\n        // in vec3 v_vnormal;\n\n        flat in vec3 v_eye;\n        flat in int v_instance;\n        out vec4[${4===s?"4":3===s?"3":2===s?"2":"1"}] color; // resizes?\n        void main() {\n            vec3 normal = normalize(v_normal);\n            vec3 tangent = normalize(v_tangent);\n            vec3 bitangent = normalize(v_bitangent);\n            // vec3 vnormal = normalize(v_vnormal);\n            px args = px(\n                v_instance,\n                v_uv,\n                gl_FrontFacing,\n                gl_FragCoord.z,\n                ivec2(gl_FragCoord.xy)\n                // 1.0 - (gl_FragCoord.z / gl_FragCoord.w) / 10000.\n                `+(i?",\n                    v_pos.xyz,\n                    v_pos.w,\n                    normal,\n                    // v_vpos.xyz,\n                    // vnormal,\n                    mat3(tangent, bitangent, normal),\n                    v_eye":"")+"\n                "+c+"\n            );\n            "+(1==s?"\n                vec4 c = pixel(args);\n                color[0] = c;\n            ":2==s?"\n                vec4[2] c = pixel(args);\n                color[0] = c[0];\n                color[1] = c[1];\n            ":3==s?"\n                vec4[3] c = pixel(args);\n                color[0] = c[0];\n                color[1] = c[1];\n                color[2] = c[2];\n            ":4==s?"\n                vec4[4] c = pixel(args);\n                color[0] = c[0];\n                color[1] = c[1];\n                color[2] = c[2];\n                color[3] = c[3];\n            ":5==s?"\n                vec5 c = pixel(args);\n                color[0] = c._v4;\n                gl_FragDepth = c._f;\n            ":0==s?"\n                color[0] = vec4(0);\n            ":(()=>{throw s})())+"\n        }"]};class PeakMesh extends Mesh{vao;constructor(e,t){super(e.free),this.vao=t}}class PeakTexture extends Texture$1{tex;constructor(e,t){super(e.width,e.height,e.set,e.free),this.tex=t}}class DefaultFramebuffer{}class Peak{width;height;mesh;program;texture;fbo;clear;blit;draw;free;constructor(e,t,n,r,i,s,a,o,c,l){this.width=e,this.height=t,this.mesh=n,this.program=r,this.texture=i,this.fbo=s,this.clear=a,this.blit=o,this.draw=c,this.free=l}static struct=e=>new Peak(e.width,e.height,e.mesh,e.program,e.texture,e.fbo,e.clear,e.blit,e.draw,e.free)}class State{app;drawcalls;constructor(e,t){this.app=e,this.drawcalls=t}}let Mesh_struct=e=>new Mesh(e.free),Texture_struct$1=e=>new Texture$1(e.width,e.height,e.set,e.free);const width=e=>()=>e.app.width,height=e=>()=>e.app.height,mesh=e=>t=>{let n=[],r=(t,r,i,s,a,o)=>{let c=e.app.createVertexBuffer(i,s,a);n.push(c);let l=o?Object.fromEntries([["integer",PicoGL.VERTEX_ATTRIB_ARRAY_INTEGER]]):void 0;return t.vertexAttributeBuffer(r,c,l)},i=PicoGL.UNSIGNED_INT,s=PicoGL.FLOAT,a=e.app.createVertexArray(),o=e.app.createIndexBuffer(i,3,t.indices);n.push(o),a.indexBuffer(o),r(a,0,s,3,t.positions,!1),r(a,1,s,2,t.uvs,!1),r(a,2,s,3,t.normals,!1),r(a,3,s,4,t.tangents,!1),r(a,4,i,4,t.joints,!0),r(a,5,s,4,t.weights,!1);let c=Mesh_struct({free:()=>(n.forEach((e=>e.delete())),n=[],Array.from(e.drawcalls.entries()).forEach((e=>(e[0],e[1].delete(a)))),a.delete())});return new PeakMesh(c,a)},program=e=>(t,n)=>e.app.createProgram(t,n),texture=e=>(t,n,r,i,s,a,o)=>{let c=e=>{if("clamp"===e)return PicoGL.CLAMP_TO_EDGE;if("repeat"===e)return PicoGL.REPEAT;if("mirror"===e)return PicoGL.MIRRORED_REPEAT;throw e},l=t.constructor===Float32Array?PicoGL.RGBA32F:PicoGL.RGBA8,h=[["internalFormat",l],["minFilter",PicoGL.NEAREST],["magFilter",PicoGL.NEAREST],["wrapS",c(a)],["wrapT",c(o)]],u=[["internalFormat",l],["premultiplyAlpha",!0],["maxAnisotropy",PicoGL.WEBGL_INFO.MAX_TEXTURE_ANISOTROPY],["flipY",s],["wrapS",c(a)],["wrapT",c(o)]],_=i?h:u,p=(()=>{if(t instanceof ImageBitmap&&s){let e=document.createElement("canvas");e.width=t.width,e.height=t.height,e.getContext("2d")?.drawImage(t,0,0,e.width,e.height),t=e}return t instanceof HTMLImageElement||t instanceof HTMLCanvasElement?e.app.createTexture2D(t,Object.fromEntries(_)):e.app.createTexture2D(t,n,r,Object.fromEntries(_))})(),d=Texture_struct$1({width:()=>n,height:()=>r,set:e=>p.data(e),free:()=>p.delete()});return new PeakTexture(d,p)},fbo=e=>(t,n,r,i,s)=>{let a=(t,n,r)=>e.app.createRenderbuffer(t,n,r,PicoGL.WEBGL_INFO.SAMPLES),o=e.app.createFramebuffer();if(i){let i=PicoGL.DEPTH_COMPONENT32F,s=Object.fromEntries([["internalFormat",i]]),c=r?a(t,n,i):e.app.createTexture2D(t,n,s);o.depthTarget(c)}return s.forEach(((i,s)=>{let c="rgba32f"===i?PicoGL.RGBA32F:PicoGL.RGBA8,l=[["internalFormat",c],["premultiplyAlpha",!0],["flipY",!0],["wrapS",PicoGL.CLAMP_TO_EDGE],["wrapT",PicoGL.CLAMP_TO_EDGE],["maxAnisotropy",PicoGL.WEBGL_INFO.MAX_TEXTURE_ANISOTROPY]],h=r?a(t,n,c):e.app.createTexture2D(t,n,Object.fromEntries(l));return o.colorTarget(s,h)})),o},clear=e=>(t,n,r)=>{let i=0;n&&(i|=PicoGL.COLOR_BUFFER_BIT),r&&(i|=PicoGL.DEPTH_BUFFER_BIT),e.app.clearBits=i,e.app.depthMask(!0),t instanceof DefaultFramebuffer?e.app.defaultDrawFramebuffer():e.app.drawFramebuffer(t),e.app.clearColor(0,0,0,0).clear()},blit$1=e=>(t,n,r,i)=>{t instanceof DefaultFramebuffer?e.app.defaultDrawFramebuffer():e.app.drawFramebuffer(t),n instanceof DefaultFramebuffer?e.app.defaultReadFramebuffer():e.app.readFramebuffer(n);let s=0;return r&&(s|=PicoGL.COLOR_BUFFER_BIT),i&&(s|=PicoGL.DEPTH_BUFFER_BIT),e.app.depthMask(!0),e.app.blitFramebuffer(s)},draw=e=>(t,n,r,i,s,a,o,c,l,h,u)=>{let _=mapget(e.drawcalls,r,(()=>new Map)),p=mapget(_,n.vao,(()=>e.app.createDrawCall(r,n.vao)));n.vao.numInstances=s,p.numInstances[0]=s;let d=Object.keys(r.uniforms),f=Object.keys(r.samplers);i.forEach(((e,t)=>{(e=>d.includes(e)||f.includes(e))(prefix+t)&&(e instanceof PeakTexture?p.texture(prefix+t,e.tex):e instanceof UniformFloat?p.uniform(prefix+t,e.f):e instanceof UniformInt?p.uniform(prefix+t,e.i):e instanceof UniformArray?p.uniform(prefix+t,new Float32Array(e.value)):"number"!=typeof e||p.uniform(prefix+t,e))})),e.app.viewport(0,0,h,u),a?e.app.depthTest():e.app.noDepthTest(),e.app.depthFunc(PicoGL.LEQUAL),e.app.depthMask(o);let E=PicoGL.ONE,m=PicoGL.ONE_MINUS_SRC_ALPHA,T=PicoGL.DST_COLOR,R=PicoGL.ONE_MINUS_SRC_COLOR;return e.app.blend(),"normal"===c&&e.app.blendFuncSeparate(E,m,E,m),"add"===c&&e.app.blendFuncSeparate(E,E,E,E),"multiply"===c&&e.app.blendFuncSeparate(T,m,E,m),"screen"===c&&e.app.blendFuncSeparate(E,R,E,m),"none"===l?e.app.drawBackfaces():(e.app.cullBackfaces(),"back"===l&&e.app.gl.cullFace(PicoGL.BACK),"front"===l&&e.app.gl.cullFace(PicoGL.FRONT),"both"===l&&e.app.gl.cullFace(PicoGL.FRONT_AND_BACK)),t instanceof DefaultFramebuffer?e.app.defaultDrawFramebuffer():e.app.drawFramebuffer(t),p.draw()},free=e=>()=>e.drawcalls=new Map,peak=e=>{let t=PicoGL.createApp(e,{alpha:!0,antialias:!0,depth:!1,stencil:!1,premultipliedAlpha:!0}),n=new State(t,new Map);return new Peak(width(n),height(n),mesh(n),program(n),texture(n),fbo(n),clear(n),blit$1(n),draw(n),free(n))};class MSAANone{constructor(){}static struct=e=>new MSAANone}let GFX_struct=e=>new GFX(e.width,e.height,e.mesh,e.buffer,e.texture,e.flush,e.free),Buffer_struct=e=>new Buffer(e.width,e.height,e.draw,e.clear,e.color,e.depth,e.free),Texture_struct=e=>new Texture$1(e.width,e.height,e.set,e.free),u32=Uint32Array,f32=Float32Array,quad_mesh=new MeshData(new u32([0,2,1,2,3,1]),new f32([-.5,.5,0,.5,.5,0,-.5,-.5,0,.5,-.5,0]),new f32([0,1,1,1,0,0,1,0]),new f32([0,0,1,0,0,1,0,0,1,0,0,1]),new f32([1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1]),new u32([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),new f32([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]));const gfx=e=>{let t=peak(e),n=t.mesh(quad_mesh),r=new Map,i=(e,i,s,a)=>{let o=a.mesh??n,c=a.shader??"",l=a.uniforms??new Array,h=a.instances??1,u=a.depth??!1,_=a.mask??!0,p=a.blend??"normal",d=a.cull??"back";(a.clear??!1)&&t.clear(e,!0,!0),l.push(["aspect",new UniformFloat(i/s)]),l.push(["instances",new UniformInt(h)]);let f=[];l.forEach((([e,t])=>{let n=(()=>{if(t instanceof Texture$1)return"sampler2D";if(t instanceof UniformFloat)return"float";if(t instanceof UniformInt)return"int";if(t instanceof UniformArray)return t.type;if("number"==typeof t)return"float";throw new Error})();return f.push([e,n])}));let E=f.flat().join(","),m=mapget(r,E+c,(()=>{let e=shader(c,f);return t.program(e[0],e[1])}));o instanceof PeakMesh&&t.draw(e,o,m,new Map(l),h,u,_,p,d,i,s)};return GFX_struct({free:()=>(t.free(),n.free(),Array.from(r.values()).forEach((e=>e.delete())),r=new Map),width:()=>t.width(),height:()=>t.height(),flush:e=>i(new DefaultFramebuffer,t.width(),t.height(),{clear:!0,uniforms:[["buf",e.color()]],shader:"\n                vec4 pixel(px p) {\n                    return texture(p.buf, p.uv);\n                }\n            "}),mesh:e=>t.mesh(e),texture:(e,n)=>{let r=e instanceof Float32Array,i=!r,s=-1,a=-1;if(e instanceof HTMLVideoElement&&(s=e.videoWidth,a=e.videoHeight),e instanceof Float32Array){let t=Math.ceil(Math.sqrt(e.length/4)),n=new Float32Array(t*t*4);n.set(e,0),e=n,s=t,a=t}e instanceof HTMLCanvasElement&&(s=e.width,a=e.height),e instanceof HTMLImageElement&&(s=e.width,a=e.height),e instanceof ImageBitmap&&(s=e.width,a=e.height),e instanceof OffscreenCanvas&&(s=e.width,a=e.height);let o=n?.width??s,c=n?.height??a,l=n?.flip??i,h=n?.wraps??"clamp",u=n?.wrapt??"clamp";if(-1===o||-1===c)throw s;return t.texture(e,o,c,r,l,h,u)},buffer:e=>{let n=e?.width??t.width(),r=e?.height??t.height(),s=e?.msaa??!1,a=e?.depth??!1,o=e?.colors??["rgba8"],c=t.fbo(n,r,!1,a,o),l=new MSAANone;s&&(l=t.fbo(n,r,!0,a,o),t.clear(l,!0,!0)),t.clear(c,!0,!0);let h=!1,u=()=>{l instanceof MSAANone||!1===h&&(t.blit(c,l,!0,!0),h=!0)},_=e=>{let t=Texture_struct({width:()=>e.width,height:()=>e.height,set:t=>{throw e},free:()=>{throw e}});return new PeakTexture(t,e)};return Buffer_struct({free:()=>{let e=e=>(e.depthAttachment&&e.depthAttachment.delete(),e.colorAttachments.forEach((e=>e.delete())),e.delete());e(c),l instanceof MSAANone==!1&&l instanceof DefaultFramebuffer==!1&&e(l)},width:()=>n,height:()=>r,color:(e=0)=>(u(),_(c.colorAttachments[e])),depth:()=>(u(),_(c.depthAttachment)),clear:(e=!0,n=!0)=>(h=!0,l instanceof MSAANone==!1&&t.clear(l,e,n),t.clear(c,e,n)),draw:e=>{h=!1,i(l instanceof MSAANone==!1?l:c,n,r,e)}})}})};let fitrect=(e,t,n,r)=>{let i=e/t>=n/r?n/e:r/t;return[e*i,t*i]};const image=async e=>{let t=await fetch(e),n=await t.blob();return createImageBitmap(n)},blit=(e,t,n=0,r=0,i)=>{let s=i?.width??t.width(),a=i?.height??t.height(),o=i?.rz??0,c=i?.px??0,l=i?.py??0,h=i?.alpha??1,u=i?.hue??0,_=e.width(),p=e.height();return e.draw({uniforms:[["bufw",new UniformFloat(_)],["bufh",new UniformFloat(p)],["x",new UniformFloat(n)],["y",new UniformFloat(r)],["w",new UniformFloat(s)],["h",new UniformFloat(a)],["r",new UniformFloat(o)],["px",new UniformFloat(c)],["py",new UniformFloat(l)],["a",new UniformFloat(h)],["tex",t],["color_hue",u]],shader:"\n            mat4 vertex(vx v) {\n                return sprite(v.bufw, v.bufh, v.x, v.y, v.w, v.h, v.r, v.px, v.py);\n            }\n            vec4 pixel(px p) {\n                return hue(texture(p.tex, p.uv), p.color_hue) * p.a;\n            }\n        "})};class Events{keys;ptrs;clicks;constructor(e,t,n){this.keys=e,this.ptrs=t,this.clicks=n}}class KeyEvent{time;mods;action;code;key;constructor(e,t,n,r,i){this.time=e,this.mods=t,this.action=n,this.code=r,this.key=i}}class PtrEvent{time;mods;action;device;id;x;y;button;buttons;pressure;constructor(e,t,n,r,i,s,a,o,c,l){this.time=e,this.mods=t,this.action=n,this.device=r,this.id=i,this.x=s,this.y=a,this.button=o,this.buttons=c,this.pressure=l}}class ClickEvent{time;mods;x;y;double;constructor(e,t,n,r,i){this.time=e,this.mods=t,this.x=n,this.y=r,this.double=i}}const key_event=(e,t)=>new KeyEvent(Date.now(),[],t,e.code,e.key),ptr_event=(e,t,n)=>{let r=e.pointerType,i=e.pointerId,s=n.getBoundingClientRect(),a=(e.x-s.x)/s.width,o=(e.y-s.y)/s.height;return new PtrEvent(Date.now(),[],t,r,i,a,o,e.button,[],e.pressure)},click_event=(e,t,n)=>{let r=n.getBoundingClientRect(),i=(e.x-r.x)/r.width,s=(e.y-r.y)/r.height;return new ClickEvent(Date.now(),[],i,s,t)},events=(e,t,n)=>{let r=new Map,i=[],s=[],a=[];return e.addEventListener("keydown",(e=>{r.has(e.code)||(i.push(key_event(e,"down")),r.set(e.code,!0))})),e.addEventListener("keyup",(e=>{i.push(key_event(e,"up")),r.delete(e.code)})),t.addEventListener("pointerdown",(e=>s.push(ptr_event(e,"down",n)))),t.addEventListener("pointerup",(e=>s.push(ptr_event(e,"up",n)))),t.addEventListener("pointermove",(e=>s.push(ptr_event(e,"move",n)))),t.addEventListener("click",(e=>a.push(click_event(e,!1,n)))),t.addEventListener("dblclick",(e=>a.push(click_event(e,!0,n)))),()=>{let e=new Events(i,s,a);return i=[],s=[],a=[],e}};class Input{time;delta;key;keys;ptrs;clicks;constructor(e,t,n,r,i,s){this.time=e,this.delta=t,this.key=n,this.keys=r,this.ptrs=i,this.clicks=s}}const keystate=(e,t)=>{t.forEach((t=>{"down"===t.action&&e.set(t.code,!0),"up"===t.action&&e.set(t.code,!1)}))},ticker=(e,t,n,r,i,s)=>{let a=0,o=Date.now(),c=o,l=events(e,t,n),h=new Map,u=n.getContext("2d"),_=async()=>{let e=Date.now(),t=.001*(e-o),i=.001*(e-c);c=e,a+=1;let p=l();keystate(h,p.keys);let d=new Input(t,i,(e=>!!h.get(e)),p.keys,p.ptrs,p.clicks),f=await r(d);u?.clearRect(0,0,n.width,n.height),u?.drawImage(s,0,0),!1!==f&&requestAnimationFrame(_)};_(),setInterval((()=>{console.log(a),a=0}),1e3)},run=async(e,t)=>{document.body.style.display="flex",document.body.style.justifyContent="center",document.body.style.alignItems="center",document.body.style.height="100vh",document.body.style.margin="0",document.body.style.backgroundColor="red";let n=document.createElement("canvas");document.body.append(n);let r=document.createElement("canvas"),i=await e(t,((e,t)=>{r.width=e,r.height=t,n.width=e,n.height=t,n.style.position="absolute";let i=()=>{let[r,i]=fitrect(e,t,window.innerWidth,window.innerHeight);n.style.width=r+"px",n.style.height=i+"px"};return window.onresize=i,i(),r}));i&&ticker(window,document,n,i,0,r)},REVISION="166";"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"166"}})),"undefined"!=typeof window&&(window.__THREE__||(window.__THREE__="166"));const translate=(e,t,n)=>[1,0,0,0,0,1,0,0,0,0,1,0,e,t,n,1],perspective_vfov_r=(e,t,n,r)=>{let i=Math.tan(.5*Math.PI-.5*e),s=1/(n-r);return[i/t,0,0,0,0,i,0,0,0,0,(n+r)*s*1,-1,0,0,n*r*s*2,0]},radians=e=>e*Math.PI/180,perspective=(e,t,n,r)=>perspective_vfov_r(radians(e),t,n,r);let __Process$={};var sr=Object.create,ke=Object.defineProperty,or=Object.getOwnPropertyDescriptor,ar=Object.getOwnPropertyNames,cr=Object.getPrototypeOf,fr=Object.prototype.hasOwnProperty,hr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Q=(e,t)=>{for(var n in t)ke(e,n,{get:t[n],enumerable:!0})},pr=(e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let i of ar(t))!fr.call(e,i)&&i!==n&&ke(e,i,{get:()=>t[i],enumerable:!(r=or(t,i))||r.enumerable});return e},Rt=(e,t,n)=>(n=null!=e?sr(cr(e)):{},pr(e&&e.__esModule?n:ke(n,"default",{value:e,enumerable:!0}),e)),it=hr(((e,t)=>{var n={generateIdentifier:function(){return Math.random().toString(36).substring(2,12)}};n.localCName=n.generateIdentifier(),n.splitLines=function(e){return e.trim().split("\n").map((e=>e.trim()))},n.splitSections=function(e){return e.split("\nm=").map(((e,t)=>(t>0?"m="+e:e).trim()+"\r\n"))},n.getDescription=function(e){let t=n.splitSections(e);return t&&t[0]},n.getMediaSections=function(e){let t=n.splitSections(e);return t.shift(),t},n.matchPrefix=function(e,t){return n.splitLines(e).filter((e=>0===e.indexOf(t)))},n.parseCandidate=function(e){let t;t=0===e.indexOf("a=candidate:")?e.substring(12).split(" "):e.substring(10).split(" ");let n={foundation:t[0],component:{1:"rtp",2:"rtcp"}[t[1]]||t[1],protocol:t[2].toLowerCase(),priority:parseInt(t[3],10),ip:t[4],address:t[4],port:parseInt(t[5],10),type:t[7]};for(let e=8;e<t.length;e+=2)switch(t[e]){case"raddr":n.relatedAddress=t[e+1];break;case"rport":n.relatedPort=parseInt(t[e+1],10);break;case"tcptype":n.tcpType=t[e+1];break;case"ufrag":n.ufrag=t[e+1],n.usernameFragment=t[e+1];break;default:void 0===n[t[e]]&&(n[t[e]]=t[e+1])}return n},n.writeCandidate=function(e){let t=[];t.push(e.foundation);let n=e.component;"rtp"===n?t.push(1):"rtcp"===n?t.push(2):t.push(n),t.push(e.protocol.toUpperCase()),t.push(e.priority),t.push(e.address||e.ip),t.push(e.port);let r=e.type;return t.push("typ"),t.push(r),"host"!==r&&e.relatedAddress&&e.relatedPort&&(t.push("raddr"),t.push(e.relatedAddress),t.push("rport"),t.push(e.relatedPort)),e.tcpType&&"tcp"===e.protocol.toLowerCase()&&(t.push("tcptype"),t.push(e.tcpType)),(e.usernameFragment||e.ufrag)&&(t.push("ufrag"),t.push(e.usernameFragment||e.ufrag)),"candidate:"+t.join(" ")},n.parseIceOptions=function(e){return e.substring(14).split(" ")},n.parseRtpMap=function(e){let t=e.substring(9).split(" "),n={payloadType:parseInt(t.shift(),10)};return t=t[0].split("/"),n.name=t[0],n.clockRate=parseInt(t[1],10),n.channels=3===t.length?parseInt(t[2],10):1,n.numChannels=n.channels,n},n.writeRtpMap=function(e){let t=e.payloadType;void 0!==e.preferredPayloadType&&(t=e.preferredPayloadType);let n=e.channels||e.numChannels||1;return"a=rtpmap:"+t+" "+e.name+"/"+e.clockRate+(1!==n?"/"+n:"")+"\r\n"},n.parseExtmap=function(e){let t=e.substring(9).split(" ");return{id:parseInt(t[0],10),direction:t[0].indexOf("/")>0?t[0].split("/")[1]:"sendrecv",uri:t[1],attributes:t.slice(2).join(" ")}},n.writeExtmap=function(e){return"a=extmap:"+(e.id||e.preferredId)+(e.direction&&"sendrecv"!==e.direction?"/"+e.direction:"")+" "+e.uri+(e.attributes?" "+e.attributes:"")+"\r\n"},n.parseFmtp=function(e){let t,n={},r=e.substring(e.indexOf(" ")+1).split(";");for(let e=0;e<r.length;e++)t=r[e].trim().split("="),n[t[0].trim()]=t[1];return n},n.writeFmtp=function(e){let t="",n=e.payloadType;if(void 0!==e.preferredPayloadType&&(n=e.preferredPayloadType),e.parameters&&Object.keys(e.parameters).length){let r=[];Object.keys(e.parameters).forEach((t=>{void 0!==e.parameters[t]?r.push(t+"="+e.parameters[t]):r.push(t)})),t+="a=fmtp:"+n+" "+r.join(";")+"\r\n"}return t},n.parseRtcpFb=function(e){let t=e.substring(e.indexOf(" ")+1).split(" ");return{type:t.shift(),parameter:t.join(" ")}},n.writeRtcpFb=function(e){let t="",n=e.payloadType;return void 0!==e.preferredPayloadType&&(n=e.preferredPayloadType),e.rtcpFeedback&&e.rtcpFeedback.length&&e.rtcpFeedback.forEach((e=>{t+="a=rtcp-fb:"+n+" "+e.type+(e.parameter&&e.parameter.length?" "+e.parameter:"")+"\r\n"})),t},n.parseSsrcMedia=function(e){let t=e.indexOf(" "),n={ssrc:parseInt(e.substring(7,t),10)},r=e.indexOf(":",t);return r>-1?(n.attribute=e.substring(t+1,r),n.value=e.substring(r+1)):n.attribute=e.substring(t+1),n},n.parseSsrcGroup=function(e){let t=e.substring(13).split(" ");return{semantics:t.shift(),ssrcs:t.map((e=>parseInt(e,10)))}},n.getMid=function(e){let t=n.matchPrefix(e,"a=mid:")[0];if(t)return t.substring(6)},n.parseFingerprint=function(e){let t=e.substring(14).split(" ");return{algorithm:t[0].toLowerCase(),value:t[1].toUpperCase()}},n.getDtlsParameters=function(e,t){return{role:"auto",fingerprints:n.matchPrefix(e+t,"a=fingerprint:").map(n.parseFingerprint)}},n.writeDtlsParameters=function(e,t){let n="a=setup:"+t+"\r\n";return e.fingerprints.forEach((e=>{n+="a=fingerprint:"+e.algorithm+" "+e.value+"\r\n"})),n},n.parseCryptoLine=function(e){let t=e.substring(9).split(" ");return{tag:parseInt(t[0],10),cryptoSuite:t[1],keyParams:t[2],sessionParams:t.slice(3)}},n.writeCryptoLine=function(e){return"a=crypto:"+e.tag+" "+e.cryptoSuite+" "+("object"==typeof e.keyParams?n.writeCryptoKeyParams(e.keyParams):e.keyParams)+(e.sessionParams?" "+e.sessionParams.join(" "):"")+"\r\n"},n.parseCryptoKeyParams=function(e){if(0!==e.indexOf("inline:"))return null;let t=e.substring(7).split("|");return{keyMethod:"inline",keySalt:t[0],lifeTime:t[1],mkiValue:t[2]?t[2].split(":")[0]:void 0,mkiLength:t[2]?t[2].split(":")[1]:void 0}},n.writeCryptoKeyParams=function(e){return e.keyMethod+":"+e.keySalt+(e.lifeTime?"|"+e.lifeTime:"")+(e.mkiValue&&e.mkiLength?"|"+e.mkiValue+":"+e.mkiLength:"")},n.getCryptoParameters=function(e,t){return n.matchPrefix(e+t,"a=crypto:").map(n.parseCryptoLine)},n.getIceParameters=function(e,t){let r=n.matchPrefix(e+t,"a=ice-ufrag:")[0],i=n.matchPrefix(e+t,"a=ice-pwd:")[0];return r&&i?{usernameFragment:r.substring(12),password:i.substring(10)}:null},n.writeIceParameters=function(e){let t="a=ice-ufrag:"+e.usernameFragment+"\r\na=ice-pwd:"+e.password+"\r\n";return e.iceLite&&(t+="a=ice-lite\r\n"),t},n.parseRtpParameters=function(e){let t={codecs:[],headerExtensions:[],fecMechanisms:[],rtcp:[]},r=n.splitLines(e)[0].split(" ");t.profile=r[2];for(let i=3;i<r.length;i++){let s=r[i],a=n.matchPrefix(e,"a=rtpmap:"+s+" ")[0];if(a){let r=n.parseRtpMap(a),i=n.matchPrefix(e,"a=fmtp:"+s+" ");switch(r.parameters=i.length?n.parseFmtp(i[0]):{},r.rtcpFeedback=n.matchPrefix(e,"a=rtcp-fb:"+s+" ").map(n.parseRtcpFb),t.codecs.push(r),r.name.toUpperCase()){case"RED":case"ULPFEC":t.fecMechanisms.push(r.name.toUpperCase())}}}n.matchPrefix(e,"a=extmap:").forEach((e=>{t.headerExtensions.push(n.parseExtmap(e))}));let i=n.matchPrefix(e,"a=rtcp-fb:* ").map(n.parseRtcpFb);return t.codecs.forEach((e=>{i.forEach((t=>{e.rtcpFeedback.find((e=>e.type===t.type&&e.parameter===t.parameter))||e.rtcpFeedback.push(t)}))})),t},n.writeRtpDescription=function(e,t){let r="";r+="m="+e+" ",r+=t.codecs.length>0?"9":"0",r+=" "+(t.profile||"UDP/TLS/RTP/SAVPF")+" ",r+=t.codecs.map((e=>void 0!==e.preferredPayloadType?e.preferredPayloadType:e.payloadType)).join(" ")+"\r\n",r+="c=IN IP4 0.0.0.0\r\n",r+="a=rtcp:9 IN IP4 0.0.0.0\r\n",t.codecs.forEach((e=>{r+=n.writeRtpMap(e),r+=n.writeFmtp(e),r+=n.writeRtcpFb(e)}));let i=0;return t.codecs.forEach((e=>{e.maxptime>i&&(i=e.maxptime)})),i>0&&(r+="a=maxptime:"+i+"\r\n"),t.headerExtensions&&t.headerExtensions.forEach((e=>{r+=n.writeExtmap(e)})),r},n.parseRtpEncodingParameters=function(e){let t,r=[],i=n.parseRtpParameters(e),s=-1!==i.fecMechanisms.indexOf("RED"),a=-1!==i.fecMechanisms.indexOf("ULPFEC"),o=n.matchPrefix(e,"a=ssrc:").map((e=>n.parseSsrcMedia(e))).filter((e=>"cname"===e.attribute)),c=o.length>0&&o[0].ssrc,l=n.matchPrefix(e,"a=ssrc-group:FID").map((e=>e.substring(17).split(" ").map((e=>parseInt(e,10)))));l.length>0&&l[0].length>1&&l[0][0]===c&&(t=l[0][1]),i.codecs.forEach((e=>{if("RTX"===e.name.toUpperCase()&&e.parameters.apt){let n={ssrc:c,codecPayloadType:parseInt(e.parameters.apt,10)};c&&t&&(n.rtx={ssrc:t}),r.push(n),s&&(n=JSON.parse(JSON.stringify(n)),n.fec={ssrc:c,mechanism:a?"red+ulpfec":"red"},r.push(n))}})),0===r.length&&c&&r.push({ssrc:c});let h=n.matchPrefix(e,"b=");return h.length&&(h=0===h[0].indexOf("b=TIAS:")?parseInt(h[0].substring(7),10):0===h[0].indexOf("b=AS:")?1e3*parseInt(h[0].substring(5),10)*.95-16e3:void 0,r.forEach((e=>{e.maxBitrate=h}))),r},n.parseRtcpParameters=function(e){let t={},r=n.matchPrefix(e,"a=ssrc:").map((e=>n.parseSsrcMedia(e))).filter((e=>"cname"===e.attribute))[0];r&&(t.cname=r.value,t.ssrc=r.ssrc);let i=n.matchPrefix(e,"a=rtcp-rsize");t.reducedSize=i.length>0,t.compound=0===i.length;let s=n.matchPrefix(e,"a=rtcp-mux");return t.mux=s.length>0,t},n.writeRtcpParameters=function(e){let t="";return e.reducedSize&&(t+="a=rtcp-rsize\r\n"),e.mux&&(t+="a=rtcp-mux\r\n"),void 0!==e.ssrc&&e.cname&&(t+="a=ssrc:"+e.ssrc+" cname:"+e.cname+"\r\n"),t},n.parseMsid=function(e){let t,r=n.matchPrefix(e,"a=msid:");if(1===r.length)return t=r[0].substring(7).split(" "),{stream:t[0],track:t[1]};let i=n.matchPrefix(e,"a=ssrc:").map((e=>n.parseSsrcMedia(e))).filter((e=>"msid"===e.attribute));return i.length>0?(t=i[0].value.split(" "),{stream:t[0],track:t[1]}):void 0},n.parseSctpDescription=function(e){let t,r=n.parseMLine(e),i=n.matchPrefix(e,"a=max-message-size:");i.length>0&&(t=parseInt(i[0].substring(19),10)),isNaN(t)&&(t=65536);let s=n.matchPrefix(e,"a=sctp-port:");if(s.length>0)return{port:parseInt(s[0].substring(12),10),protocol:r.fmt,maxMessageSize:t};let a=n.matchPrefix(e,"a=sctpmap:");if(a.length>0){let e=a[0].substring(10).split(" ");return{port:parseInt(e[0],10),protocol:e[1],maxMessageSize:t}}},n.writeSctpDescription=function(e,t){let n=[];return n="DTLS/SCTP"!==e.protocol?["m="+e.kind+" 9 "+e.protocol+" "+t.protocol+"\r\n","c=IN IP4 0.0.0.0\r\n","a=sctp-port:"+t.port+"\r\n"]:["m="+e.kind+" 9 "+e.protocol+" "+t.port+"\r\n","c=IN IP4 0.0.0.0\r\n","a=sctpmap:"+t.port+" "+t.protocol+" 65535\r\n"],void 0!==t.maxMessageSize&&n.push("a=max-message-size:"+t.maxMessageSize+"\r\n"),n.join("")},n.generateSessionId=function(){return Math.random().toString().substr(2,22)},n.writeSessionBoilerplate=function(e,t,r){let i,s=void 0!==t?t:2;return i=e||n.generateSessionId(),"v=0\r\no="+(r||"thisisadapterortc")+" "+i+" "+s+" IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\n"},n.getDirection=function(e,t){let r=n.splitLines(e);for(let e=0;e<r.length;e++)switch(r[e]){case"a=sendrecv":case"a=sendonly":case"a=recvonly":case"a=inactive":return r[e].substring(2)}return t?n.getDirection(t):"sendrecv"},n.getKind=function(e){return n.splitLines(e)[0].split(" ")[0].substring(2)},n.isRejected=function(e){return"0"===e.split(" ",2)[1]},n.parseMLine=function(e){let t=n.splitLines(e)[0].substring(2).split(" ");return{kind:t[0],port:parseInt(t[1],10),protocol:t[2],fmt:t.slice(3).join(" ")}},n.parseOLine=function(e){let t=n.matchPrefix(e,"o=")[0].substring(2).split(" ");return{username:t[0],sessionId:t[1],sessionVersion:parseInt(t[2],10),netType:t[3],addressType:t[4],address:t[5]}},n.isValidSDP=function(e){if("string"!=typeof e||0===e.length)return!1;let t=n.splitLines(e);for(let e=0;e<t.length;e++)if(t[e].length<2||"="!==t[e].charAt(1))return!1;return!0},"object"==typeof t&&(t.exports=n)})),Ee=class{constructor(){this.encoder=new TextEncoder,this._pieces=[],this._parts=[]}append_buffer(e){this.flush(),this._parts.push(e)}append(e){this._pieces.push(e)}flush(){if(this._pieces.length>0){let e=new Uint8Array(this._pieces);this._parts.push(e),this._pieces=[]}}toArrayBuffer(){let e=[];for(let t of this._parts)e.push(t);return ur(e).buffer}};function ur(e){let t=0;for(let n of e)t+=n.byteLength;let n=new Uint8Array(t),r=0;for(let t of e){let e=new Uint8Array(t.buffer,t.byteOffset,t.byteLength);n.set(e,r),r+=t.byteLength}return n}function De(e){return new Re(e).unpack()}function Ie(e){let t=new Pe,n=t.pack(e);return n instanceof Promise?n.then((()=>t.getBuffer())):t.getBuffer()}var Re=class{constructor(e){this.index=0,this.dataBuffer=e,this.dataView=new Uint8Array(this.dataBuffer),this.length=this.dataBuffer.byteLength}unpack(){let e,t=this.unpack_uint8();if(t<128)return t;if((224^t)<32)return(224^t)-32;if((e=160^t)<=15)return this.unpack_raw(e);if((e=176^t)<=15)return this.unpack_string(e);if((e=144^t)<=15)return this.unpack_array(e);if((e=128^t)<=15)return this.unpack_map(e);switch(t){case 192:return null;case 193:case 212:case 213:case 214:case 215:return;case 194:return!1;case 195:return!0;case 202:return this.unpack_float();case 203:return this.unpack_double();case 204:return this.unpack_uint8();case 205:return this.unpack_uint16();case 206:return this.unpack_uint32();case 207:return this.unpack_uint64();case 208:return this.unpack_int8();case 209:return this.unpack_int16();case 210:return this.unpack_int32();case 211:return this.unpack_int64();case 216:return e=this.unpack_uint16(),this.unpack_string(e);case 217:return e=this.unpack_uint32(),this.unpack_string(e);case 218:return e=this.unpack_uint16(),this.unpack_raw(e);case 219:return e=this.unpack_uint32(),this.unpack_raw(e);case 220:return e=this.unpack_uint16(),this.unpack_array(e);case 221:return e=this.unpack_uint32(),this.unpack_array(e);case 222:return e=this.unpack_uint16(),this.unpack_map(e);case 223:return e=this.unpack_uint32(),this.unpack_map(e)}}unpack_uint8(){let e=255&this.dataView[this.index];return this.index++,e}unpack_uint16(){let e=this.read(2),t=256*(255&e[0])+(255&e[1]);return this.index+=2,t}unpack_uint32(){let e=this.read(4),t=256*(256*(256*e[0]+e[1])+e[2])+e[3];return this.index+=4,t}unpack_uint64(){let e=this.read(8),t=256*(256*(256*(256*(256*(256*(256*e[0]+e[1])+e[2])+e[3])+e[4])+e[5])+e[6])+e[7];return this.index+=8,t}unpack_int8(){let e=this.unpack_uint8();return e<128?e:e-256}unpack_int16(){let e=this.unpack_uint16();return e<32768?e:e-65536}unpack_int32(){let e=this.unpack_uint32();return e<2**31?e:e-2**32}unpack_int64(){let e=this.unpack_uint64();return e<2**63?e:e-2**64}unpack_raw(e){if(this.length<this.index+e)throw new Error(`BinaryPackFailure: index is out of range ${this.index} ${e} ${this.length}`);let t=this.dataBuffer.slice(this.index,this.index+e);return this.index+=e,t}unpack_string(e){let t,n,r=this.read(e),i=0,s="";for(;i<e;)t=r[i],t<160?(n=t,i++):(192^t)<32?(n=(31&t)<<6|63&r[i+1],i+=2):(224^t)<16?(n=(15&t)<<12|(63&r[i+1])<<6|63&r[i+2],i+=3):(n=(7&t)<<18|(63&r[i+1])<<12|(63&r[i+2])<<6|63&r[i+3],i+=4),s+=String.fromCodePoint(n);return this.index+=e,s}unpack_array(e){let t=new Array(e);for(let n=0;n<e;n++)t[n]=this.unpack();return t}unpack_map(e){let t={};for(let n=0;n<e;n++){t[this.unpack()]=this.unpack()}return t}unpack_float(){let e=this.unpack_uint32();return(0===e>>31?1:-1)*(8388607&e|8388608)*2**((e>>23&255)-127-23)}unpack_double(){let e=this.unpack_uint32(),t=(e>>20&2047)-1023;return(0===e>>31?1:-1)*((1048575&e|1048576)*2**(t-20)+this.unpack_uint32()*2**(t-52))}read(e){let t=this.index;if(t+e<=this.length)return this.dataView.subarray(t,t+e);throw new Error("BinaryPackFailure: read index out of range")}},Pe=class{getBuffer(){return this._bufferBuilder.toArrayBuffer()}pack(e){if("string"==typeof e)this.pack_string(e);else if("number"==typeof e)Math.floor(e)===e?this.pack_integer(e):this.pack_double(e);else if("boolean"==typeof e)!0===e?this._bufferBuilder.append(195):!1===e&&this._bufferBuilder.append(194);else if(void 0===e)this._bufferBuilder.append(192);else{if("object"!=typeof e)throw new Error(`Type "${typeof e}" not yet supported`);if(null===e)this._bufferBuilder.append(192);else{let t=e.constructor;if(e instanceof Array){let t=this.pack_array(e);if(t instanceof Promise)return t.then((()=>this._bufferBuilder.flush()))}else if(e instanceof ArrayBuffer)this.pack_bin(new Uint8Array(e));else if("BYTES_PER_ELEMENT"in e){let t=e;this.pack_bin(new Uint8Array(t.buffer,t.byteOffset,t.byteLength))}else if(e instanceof Date)this.pack_string(e.toString());else{if(e instanceof Blob)return e.arrayBuffer().then((e=>{this.pack_bin(new Uint8Array(e)),this._bufferBuilder.flush()}));if(t!=Object&&!t.toString().startsWith("class"))throw new Error(`Type "${t.toString()}" not yet supported`);{let t=this.pack_object(e);if(t instanceof Promise)return t.then((()=>this._bufferBuilder.flush()))}}}}this._bufferBuilder.flush()}pack_bin(e){let t=e.length;if(t<=15)this.pack_uint8(160+t);else if(t<=65535)this._bufferBuilder.append(218),this.pack_uint16(t);else{if(!(t<=4294967295))throw new Error("Invalid length");this._bufferBuilder.append(219),this.pack_uint32(t)}this._bufferBuilder.append_buffer(e)}pack_string(e){let t=this._textEncoder.encode(e),n=t.length;if(n<=15)this.pack_uint8(176+n);else if(n<=65535)this._bufferBuilder.append(216),this.pack_uint16(n);else{if(!(n<=4294967295))throw new Error("Invalid length");this._bufferBuilder.append(217),this.pack_uint32(n)}this._bufferBuilder.append_buffer(t)}pack_array(e){let t=e.length;if(t<=15)this.pack_uint8(144+t);else if(t<=65535)this._bufferBuilder.append(220),this.pack_uint16(t);else{if(!(t<=4294967295))throw new Error("Invalid length");this._bufferBuilder.append(221),this.pack_uint32(t)}let n=r=>{if(r<t){let t=this.pack(e[r]);return t instanceof Promise?t.then((()=>n(r+1))):n(r+1)}};return n(0)}pack_integer(e){if(e>=-32&&e<=127)this._bufferBuilder.append(255&e);else if(e>=0&&e<=255)this._bufferBuilder.append(204),this.pack_uint8(e);else if(e>=-128&&e<=127)this._bufferBuilder.append(208),this.pack_int8(e);else if(e>=0&&e<=65535)this._bufferBuilder.append(205),this.pack_uint16(e);else if(e>=-32768&&e<=32767)this._bufferBuilder.append(209),this.pack_int16(e);else if(e>=0&&e<=4294967295)this._bufferBuilder.append(206),this.pack_uint32(e);else if(e>=-2147483648&&e<=2147483647)this._bufferBuilder.append(210),this.pack_int32(e);else if(e>=-0x8000000000000000&&e<=0x8000000000000000)this._bufferBuilder.append(211),this.pack_int64(e);else{if(!(e>=0&&e<=0x10000000000000000))throw new Error("Invalid integer");this._bufferBuilder.append(207),this.pack_uint64(e)}}pack_double(e){let t=0;e<0&&(t=1,e=-e);let n=Math.floor(Math.log(e)/Math.LN2),r=e/2**n-1,i=Math.floor(r*2**52),s=2**32,a=t<<31|n+1023<<20|i/s&1048575,o=i%s;this._bufferBuilder.append(203),this.pack_int32(a),this.pack_int32(o)}pack_object(e){let t=Object.keys(e),n=t.length;if(n<=15)this.pack_uint8(128+n);else if(n<=65535)this._bufferBuilder.append(222),this.pack_uint16(n);else{if(!(n<=4294967295))throw new Error("Invalid length");this._bufferBuilder.append(223),this.pack_uint32(n)}let r=n=>{if(n<t.length){let i=t[n];if(e.hasOwnProperty(i)){this.pack(i);let t=this.pack(e[i]);if(t instanceof Promise)return t.then((()=>r(n+1)))}return r(n+1)}};return r(0)}pack_uint8(e){this._bufferBuilder.append(e)}pack_uint16(e){this._bufferBuilder.append(e>>8),this._bufferBuilder.append(255&e)}pack_uint32(e){let t=4294967295&e;this._bufferBuilder.append((4278190080&t)>>>24),this._bufferBuilder.append((16711680&t)>>>16),this._bufferBuilder.append((65280&t)>>>8),this._bufferBuilder.append(255&t)}pack_uint64(e){let t=e/4294967296,n=e%2**32;this._bufferBuilder.append((4278190080&t)>>>24),this._bufferBuilder.append((16711680&t)>>>16),this._bufferBuilder.append((65280&t)>>>8),this._bufferBuilder.append(255&t),this._bufferBuilder.append((4278190080&n)>>>24),this._bufferBuilder.append((16711680&n)>>>16),this._bufferBuilder.append((65280&n)>>>8),this._bufferBuilder.append(255&n)}pack_int8(e){this._bufferBuilder.append(255&e)}pack_int16(e){this._bufferBuilder.append((65280&e)>>8),this._bufferBuilder.append(255&e)}pack_int32(e){this._bufferBuilder.append(e>>>24&255),this._bufferBuilder.append((16711680&e)>>>16),this._bufferBuilder.append((65280&e)>>>8),this._bufferBuilder.append(255&e)}pack_int64(e){let t=Math.floor(e/4294967296),n=e%2**32;this._bufferBuilder.append((4278190080&t)>>>24),this._bufferBuilder.append((16711680&t)>>>16),this._bufferBuilder.append((65280&t)>>>8),this._bufferBuilder.append(255&t),this._bufferBuilder.append((4278190080&n)>>>24),this._bufferBuilder.append((16711680&n)>>>16),this._bufferBuilder.append((65280&n)>>>8),this._bufferBuilder.append(255&n)}constructor(){this._bufferBuilder=new Ee,this._textEncoder=new TextEncoder}},Dt=!0,It=!0;function z(e,t,n){let r=e.match(t);return r&&r.length>=n&&parseInt(r[n],10)}function T(e,t,n){if(!e.RTCPeerConnection)return;let r=e.RTCPeerConnection.prototype,i=r.addEventListener;r.addEventListener=function(e,r){if(e!==t)return i.apply(this,arguments);let s=e=>{let t=n(e);t&&(r.handleEvent?r.handleEvent(t):r(t))};return this._eventMap=this._eventMap||{},this._eventMap[t]||(this._eventMap[t]=new Map),this._eventMap[t].set(r,s),i.apply(this,[e,s])};let s=r.removeEventListener;r.removeEventListener=function(e,n){if(e!==t||!this._eventMap||!this._eventMap[t])return s.apply(this,arguments);if(!this._eventMap[t].has(n))return s.apply(this,arguments);let r=this._eventMap[t].get(n);return this._eventMap[t].delete(n),0===this._eventMap[t].size&&delete this._eventMap[t],0===Object.keys(this._eventMap).length&&delete this._eventMap,s.apply(this,[e,r])},Object.defineProperty(r,"on"+t,{get(){return this["_on"+t]},set(e){this["_on"+t]&&(this.removeEventListener(t,this["_on"+t]),delete this["_on"+t]),e&&this.addEventListener(t,this["_on"+t]=e)},enumerable:!0,configurable:!0})}function Mt(e){return"boolean"!=typeof e?new Error("Argument type: "+typeof e+". Please use a boolean."):(Dt=e,e?"adapter.js logging disabled":"adapter.js logging enabled")}function At(e){return"boolean"!=typeof e?new Error("Argument type: "+typeof e+". Please use a boolean."):(It=!e,"adapter.js deprecation warnings "+(e?"disabled":"enabled"))}function ee(){if("object"==typeof window){if(Dt)return;typeof console<"u"&&"function"==typeof console.log&&console.log.apply(console,arguments)}}function A(e,t){It&&console.warn(e+" is deprecated, please use "+t+" instead.")}function Ut(e){let t={browser:null,version:null};if(typeof e>"u"||!e.navigator||!e.navigator.userAgent)return t.browser="Not a browser.",t;let{navigator:n}=e;if(n.userAgentData&&n.userAgentData.brands){let e=n.userAgentData.brands.find((e=>"Chromium"===e.brand));if(e)return{browser:"chrome",version:parseInt(e.version,10)}}if(n.mozGetUserMedia)t.browser="firefox",t.version=z(n.userAgent,/Firefox\/(\d+)\./,1);else if(n.webkitGetUserMedia||!1===e.isSecureContext&&e.webkitRTCPeerConnection)t.browser="chrome",t.version=z(n.userAgent,/Chrom(e|ium)\/(\d+)\./,2);else{if(!e.RTCPeerConnection||!n.userAgent.match(/AppleWebKit\/(\d+)\./))return t.browser="Not a supported browser.",t;t.browser="safari",t.version=z(n.userAgent,/AppleWebKit\/(\d+)\./,1),t.supportsUnifiedPlan=e.RTCRtpTransceiver&&"currentDirection"in e.RTCRtpTransceiver.prototype}return t}function Pt(e){return"[object Object]"===Object.prototype.toString.call(e)}function Ae(e){return Pt(e)?Object.keys(e).reduce((function(t,n){let r=Pt(e[n]),i=r?Ae(e[n]):e[n],s=r&&!Object.keys(i).length;return void 0===i||s?t:Object.assign(t,{[n]:i})}),{}):e}function Me(e,t,n){!t||n.has(t.id)||(n.set(t.id,t),Object.keys(t).forEach((r=>{r.endsWith("Id")?Me(e,e.get(t[r]),n):r.endsWith("Ids")&&t[r].forEach((t=>{Me(e,e.get(t),n)}))})))}function Ue(e,t,n){let r=n?"outbound-rtp":"inbound-rtp",i=new Map;if(null===t)return i;let s=[];return e.forEach((e=>{"track"===e.type&&e.trackIdentifier===t.id&&s.push(e)})),s.forEach((t=>{e.forEach((n=>{n.type===r&&n.trackId===t.id&&Me(e,n,i)}))})),i}var ne={};Q(ne,{fixNegotiationNeeded:()=>Fe,shimAddTrackRemoveTrack:()=>ze,shimAddTrackRemoveTrackWithNative:()=>wt,shimGetSendersWithDtmf:()=>Le,shimGetUserMedia:()=>te,shimMediaStream:()=>Oe,shimOnTrack:()=>we,shimPeerConnection:()=>re,shimSenderReceiverGetStats:()=>Be});var Ot=ee;function te(e,t){let n=e&&e.navigator;if(!n.mediaDevices)return;let r=function(e){if("object"!=typeof e||e.mandatory||e.optional)return e;let t={};return Object.keys(e).forEach((n=>{if("require"===n||"advanced"===n||"mediaSource"===n)return;let r="object"==typeof e[n]?e[n]:{ideal:e[n]};void 0!==r.exact&&"number"==typeof r.exact&&(r.min=r.max=r.exact);let i=function(e,t){return e?e+t.charAt(0).toUpperCase()+t.slice(1):"deviceId"===t?"sourceId":t};if(void 0!==r.ideal){t.optional=t.optional||[];let e={};"number"==typeof r.ideal?(e[i("min",n)]=r.ideal,t.optional.push(e),e={},e[i("max",n)]=r.ideal,t.optional.push(e)):(e[i("",n)]=r.ideal,t.optional.push(e))}void 0!==r.exact&&"number"!=typeof r.exact?(t.mandatory=t.mandatory||{},t.mandatory[i("",n)]=r.exact):["min","max"].forEach((e=>{void 0!==r[e]&&(t.mandatory=t.mandatory||{},t.mandatory[i(e,n)]=r[e])}))})),e.advanced&&(t.optional=(t.optional||[]).concat(e.advanced)),t},i=function(e,i){if(t.version>=61)return i(e);if((e=JSON.parse(JSON.stringify(e)))&&"object"==typeof e.audio){let t=function(e,t,n){t in e&&!(n in e)&&(e[n]=e[t],delete e[t])};t((e=JSON.parse(JSON.stringify(e))).audio,"autoGainControl","googAutoGainControl"),t(e.audio,"noiseSuppression","googNoiseSuppression"),e.audio=r(e.audio)}if(e&&"object"==typeof e.video){let s=e.video.facingMode;s=s&&("object"==typeof s?s:{ideal:s});let a=t.version<66;if(s&&("user"===s.exact||"environment"===s.exact||"user"===s.ideal||"environment"===s.ideal)&&(!n.mediaDevices.getSupportedConstraints||!n.mediaDevices.getSupportedConstraints().facingMode||a)){let t;if(delete e.video.facingMode,"environment"===s.exact||"environment"===s.ideal?t=["back","rear"]:("user"===s.exact||"user"===s.ideal)&&(t=["front"]),t)return n.mediaDevices.enumerateDevices().then((n=>{let a=(n=n.filter((e=>"videoinput"===e.kind))).find((e=>t.some((t=>e.label.toLowerCase().includes(t)))));return!a&&n.length&&t.includes("back")&&(a=n[n.length-1]),a&&(e.video.deviceId=s.exact?{exact:a.deviceId}:{ideal:a.deviceId}),e.video=r(e.video),Ot("chrome: "+JSON.stringify(e)),i(e)}))}e.video=r(e.video)}return Ot("chrome: "+JSON.stringify(e)),i(e)},s=function(e){return t.version>=64?e:{name:{PermissionDeniedError:"NotAllowedError",PermissionDismissedError:"NotAllowedError",InvalidStateError:"NotAllowedError",DevicesNotFoundError:"NotFoundError",ConstraintNotSatisfiedError:"OverconstrainedError",TrackStartError:"NotReadableError",MediaDeviceFailedDueToShutdown:"NotAllowedError",MediaDeviceKillSwitchOn:"NotAllowedError",TabCaptureError:"AbortError",ScreenCaptureError:"AbortError",DeviceCaptureError:"AbortError"}[e.name]||e.name,message:e.message,constraint:e.constraint||e.constraintName,toString(){return this.name+(this.message&&": ")+this.message}}};if(n.getUserMedia=function(e,t,r){i(e,(e=>{n.webkitGetUserMedia(e,t,(e=>{r&&r(s(e))}))}))}.bind(n),n.mediaDevices.getUserMedia){let e=n.mediaDevices.getUserMedia.bind(n.mediaDevices);n.mediaDevices.getUserMedia=function(t){return i(t,(t=>e(t).then((e=>{if(t.audio&&!e.getAudioTracks().length||t.video&&!e.getVideoTracks().length)throw e.getTracks().forEach((e=>{e.stop()})),new DOMException("","NotFoundError");return e}),(e=>Promise.reject(s(e))))))}}}function Oe(e){e.MediaStream=e.MediaStream||e.webkitMediaStream}function we(e){if("object"==typeof e&&e.RTCPeerConnection&&!("ontrack"in e.RTCPeerConnection.prototype)){Object.defineProperty(e.RTCPeerConnection.prototype,"ontrack",{get(){return this._ontrack},set(e){this._ontrack&&this.removeEventListener("track",this._ontrack),this.addEventListener("track",this._ontrack=e)},enumerable:!0,configurable:!0});let t=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){return this._ontrackpoly||(this._ontrackpoly=t=>{t.stream.addEventListener("addtrack",(n=>{let r;r=e.RTCPeerConnection.prototype.getReceivers?this.getReceivers().find((e=>e.track&&e.track.id===n.track.id)):{track:n.track};let i=new Event("track");i.track=n.track,i.receiver=r,i.transceiver={receiver:r},i.streams=[t.stream],this.dispatchEvent(i)})),t.stream.getTracks().forEach((n=>{let r;r=e.RTCPeerConnection.prototype.getReceivers?this.getReceivers().find((e=>e.track&&e.track.id===n.id)):{track:n};let i=new Event("track");i.track=n,i.receiver=r,i.transceiver={receiver:r},i.streams=[t.stream],this.dispatchEvent(i)}))},this.addEventListener("addstream",this._ontrackpoly)),t.apply(this,arguments)}}else T(e,"track",(e=>(e.transceiver||Object.defineProperty(e,"transceiver",{value:{receiver:e.receiver}}),e)))}function Le(e){if("object"==typeof e&&e.RTCPeerConnection&&!("getSenders"in e.RTCPeerConnection.prototype)&&"createDTMFSender"in e.RTCPeerConnection.prototype){let t=function(e,t){return{track:t,get dtmf(){return void 0===this._dtmf&&("audio"===t.kind?this._dtmf=e.createDTMFSender(t):this._dtmf=null),this._dtmf},_pc:e}};if(!e.RTCPeerConnection.prototype.getSenders){e.RTCPeerConnection.prototype.getSenders=function(){return this._senders=this._senders||[],this._senders.slice()};let n=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addTrack=function(e,r){let i=n.apply(this,arguments);return i||(i=t(this,e),this._senders.push(i)),i};let r=e.RTCPeerConnection.prototype.removeTrack;e.RTCPeerConnection.prototype.removeTrack=function(e){r.apply(this,arguments);let t=this._senders.indexOf(e);-1!==t&&this._senders.splice(t,1)}}let n=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(e){this._senders=this._senders||[],n.apply(this,[e]),e.getTracks().forEach((e=>{this._senders.push(t(this,e))}))};let r=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){this._senders=this._senders||[],r.apply(this,[e]),e.getTracks().forEach((e=>{let t=this._senders.find((t=>t.track===e));t&&this._senders.splice(this._senders.indexOf(t),1)}))}}else if("object"==typeof e&&e.RTCPeerConnection&&"getSenders"in e.RTCPeerConnection.prototype&&"createDTMFSender"in e.RTCPeerConnection.prototype&&e.RTCRtpSender&&!("dtmf"in e.RTCRtpSender.prototype)){let t=e.RTCPeerConnection.prototype.getSenders;e.RTCPeerConnection.prototype.getSenders=function(){let e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e},Object.defineProperty(e.RTCRtpSender.prototype,"dtmf",{get(){return void 0===this._dtmf&&("audio"===this.track.kind?this._dtmf=this._pc.createDTMFSender(this.track):this._dtmf=null),this._dtmf}})}}function Be(e){if(!("object"==typeof e&&e.RTCPeerConnection&&e.RTCRtpSender&&e.RTCRtpReceiver))return;if(!("getStats"in e.RTCRtpSender.prototype)){let t=e.RTCPeerConnection.prototype.getSenders;t&&(e.RTCPeerConnection.prototype.getSenders=function(){let e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e});let n=e.RTCPeerConnection.prototype.addTrack;n&&(e.RTCPeerConnection.prototype.addTrack=function(){let e=n.apply(this,arguments);return e._pc=this,e}),e.RTCRtpSender.prototype.getStats=function(){let e=this;return this._pc.getStats().then((t=>Ue(t,e.track,!0)))}}if(!("getStats"in e.RTCRtpReceiver.prototype)){let t=e.RTCPeerConnection.prototype.getReceivers;t&&(e.RTCPeerConnection.prototype.getReceivers=function(){let e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e}),T(e,"track",(e=>(e.receiver._pc=e.srcElement,e))),e.RTCRtpReceiver.prototype.getStats=function(){let e=this;return this._pc.getStats().then((t=>Ue(t,e.track,!1)))}}if(!("getStats"in e.RTCRtpSender.prototype)||!("getStats"in e.RTCRtpReceiver.prototype))return;let t=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){if(arguments.length>0&&arguments[0]instanceof e.MediaStreamTrack){let e,t,n,r=arguments[0];return this.getSenders().forEach((t=>{t.track===r&&(e?n=!0:e=t)})),this.getReceivers().forEach((e=>(e.track===r&&(t?n=!0:t=e),e.track===r))),n||e&&t?Promise.reject(new DOMException("There are more than one sender or receiver for the track.","InvalidAccessError")):e?e.getStats():t?t.getStats():Promise.reject(new DOMException("There is no sender or receiver for the track.","InvalidAccessError"))}return t.apply(this,arguments)}}function wt(e){e.RTCPeerConnection.prototype.getLocalStreams=function(){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},Object.keys(this._shimmedLocalStreams).map((e=>this._shimmedLocalStreams[e][0]))};let t=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addTrack=function(e,n){if(!n)return t.apply(this,arguments);this._shimmedLocalStreams=this._shimmedLocalStreams||{};let r=t.apply(this,arguments);return this._shimmedLocalStreams[n.id]?-1===this._shimmedLocalStreams[n.id].indexOf(r)&&this._shimmedLocalStreams[n.id].push(r):this._shimmedLocalStreams[n.id]=[n,r],r};let n=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(e){this._shimmedLocalStreams=this._shimmedLocalStreams||{},e.getTracks().forEach((e=>{if(this.getSenders().find((t=>t.track===e)))throw new DOMException("Track already exists.","InvalidAccessError")}));let t=this.getSenders();n.apply(this,arguments);let r=this.getSenders().filter((e=>-1===t.indexOf(e)));this._shimmedLocalStreams[e.id]=[e].concat(r)};let r=e.RTCPeerConnection.prototype.removeStream;e.RTCPeerConnection.prototype.removeStream=function(e){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},delete this._shimmedLocalStreams[e.id],r.apply(this,arguments)};let i=e.RTCPeerConnection.prototype.removeTrack;e.RTCPeerConnection.prototype.removeTrack=function(e){return this._shimmedLocalStreams=this._shimmedLocalStreams||{},e&&Object.keys(this._shimmedLocalStreams).forEach((t=>{let n=this._shimmedLocalStreams[t].indexOf(e);-1!==n&&this._shimmedLocalStreams[t].splice(n,1),1===this._shimmedLocalStreams[t].length&&delete this._shimmedLocalStreams[t]})),i.apply(this,arguments)}}function ze(e,t){if(!e.RTCPeerConnection)return;if(e.RTCPeerConnection.prototype.addTrack&&t.version>=65)return wt(e);let n=e.RTCPeerConnection.prototype.getLocalStreams;e.RTCPeerConnection.prototype.getLocalStreams=function(){let e=n.apply(this);return this._reverseStreams=this._reverseStreams||{},e.map((e=>this._reverseStreams[e.id]))};let r=e.RTCPeerConnection.prototype.addStream;e.RTCPeerConnection.prototype.addStream=function(t){if(this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{},t.getTracks().forEach((e=>{if(this.getSenders().find((t=>t.track===e)))throw new DOMException("Track already exists.","InvalidAccessError")})),!this._reverseStreams[t.id]){let n=new e.MediaStream(t.getTracks());this._streams[t.id]=n,this._reverseStreams[n.id]=t,t=n}r.apply(this,[t])};let i=e.RTCPeerConnection.prototype.removeStream;function s(e,t){let n=t.sdp;return Object.keys(e._reverseStreams||[]).forEach((t=>{let r=e._reverseStreams[t],i=e._streams[r.id];n=n.replace(new RegExp(i.id,"g"),r.id)})),new RTCSessionDescription({type:t.type,sdp:n})}e.RTCPeerConnection.prototype.removeStream=function(e){this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{},i.apply(this,[this._streams[e.id]||e]),delete this._reverseStreams[this._streams[e.id]?this._streams[e.id].id:e.id],delete this._streams[e.id]},e.RTCPeerConnection.prototype.addTrack=function(t,n){if("closed"===this.signalingState)throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.","InvalidStateError");let r=[].slice.call(arguments,1);if(1!==r.length||!r[0].getTracks().find((e=>e===t)))throw new DOMException("The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.","NotSupportedError");if(this.getSenders().find((e=>e.track===t)))throw new DOMException("Track already exists.","InvalidAccessError");this._streams=this._streams||{},this._reverseStreams=this._reverseStreams||{};let i=this._streams[n.id];if(i)i.addTrack(t),Promise.resolve().then((()=>{this.dispatchEvent(new Event("negotiationneeded"))}));else{let r=new e.MediaStream([t]);this._streams[n.id]=r,this._reverseStreams[r.id]=n,this.addStream(r)}return this.getSenders().find((e=>e.track===t))},["createOffer","createAnswer"].forEach((function(t){let n=e.RTCPeerConnection.prototype[t],r={[t](){let e=arguments;return arguments.length&&"function"==typeof arguments[0]?n.apply(this,[t=>{let n=s(this,t);e[0].apply(null,[n])},t=>{e[1]&&e[1].apply(null,t)},arguments[2]]):n.apply(this,arguments).then((e=>s(this,e)))}};e.RTCPeerConnection.prototype[t]=r[t]}));let a=e.RTCPeerConnection.prototype.setLocalDescription;e.RTCPeerConnection.prototype.setLocalDescription=function(){return arguments.length&&arguments[0].type?(arguments[0]=function(e,t){let n=t.sdp;return Object.keys(e._reverseStreams||[]).forEach((t=>{let r=e._reverseStreams[t],i=e._streams[r.id];n=n.replace(new RegExp(r.id,"g"),i.id)})),new RTCSessionDescription({type:t.type,sdp:n})}(this,arguments[0]),a.apply(this,arguments)):a.apply(this,arguments)};let o=Object.getOwnPropertyDescriptor(e.RTCPeerConnection.prototype,"localDescription");Object.defineProperty(e.RTCPeerConnection.prototype,"localDescription",{get(){let e=o.get.apply(this);return""===e.type?e:s(this,e)}}),e.RTCPeerConnection.prototype.removeTrack=function(e){if("closed"===this.signalingState)throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.","InvalidStateError");if(!e._pc)throw new DOMException("Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.","TypeError");if(e._pc!==this)throw new DOMException("Sender was not created by this connection.","InvalidAccessError");let t;this._streams=this._streams||{},Object.keys(this._streams).forEach((n=>{this._streams[n].getTracks().find((t=>e.track===t))&&(t=this._streams[n])})),t&&(1===t.getTracks().length?this.removeStream(this._reverseStreams[t.id]):t.removeTrack(e.track),this.dispatchEvent(new Event("negotiationneeded")))}}function re(e,t){!e.RTCPeerConnection&&e.webkitRTCPeerConnection&&(e.RTCPeerConnection=e.webkitRTCPeerConnection),e.RTCPeerConnection&&t.version<53&&["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach((function(t){let n=e.RTCPeerConnection.prototype[t],r={[t](){return arguments[0]=new("addIceCandidate"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),n.apply(this,arguments)}};e.RTCPeerConnection.prototype[t]=r[t]}))}function Fe(e,t){T(e,"negotiationneeded",(e=>{let n=e.target;if(!(t.version<72||n.getConfiguration&&"plan-b"===n.getConfiguration().sdpSemantics)||"stable"===n.signalingState)return e}))}var oe={};function ie(e,t){let n=e&&e.navigator,r=e&&e.MediaStreamTrack;if(n.getUserMedia=function(e,t,r){A("navigator.getUserMedia","navigator.mediaDevices.getUserMedia"),n.mediaDevices.getUserMedia(e).then(t,r)},!(t.version>55&&"autoGainControl"in n.mediaDevices.getSupportedConstraints())){let e=function(e,t,n){t in e&&!(n in e)&&(e[n]=e[t],delete e[t])},t=n.mediaDevices.getUserMedia.bind(n.mediaDevices);if(n.mediaDevices.getUserMedia=function(n){return"object"==typeof n&&"object"==typeof n.audio&&(n=JSON.parse(JSON.stringify(n)),e(n.audio,"autoGainControl","mozAutoGainControl"),e(n.audio,"noiseSuppression","mozNoiseSuppression")),t(n)},r&&r.prototype.getSettings){let t=r.prototype.getSettings;r.prototype.getSettings=function(){let n=t.apply(this,arguments);return e(n,"mozAutoGainControl","autoGainControl"),e(n,"mozNoiseSuppression","noiseSuppression"),n}}if(r&&r.prototype.applyConstraints){let t=r.prototype.applyConstraints;r.prototype.applyConstraints=function(n){return"audio"===this.kind&&"object"==typeof n&&(n=JSON.parse(JSON.stringify(n)),e(n,"autoGainControl","mozAutoGainControl"),e(n,"noiseSuppression","mozNoiseSuppression")),t.apply(this,[n])}}}}function Lt(e,t){e.navigator.mediaDevices&&"getDisplayMedia"in e.navigator.mediaDevices||e.navigator.mediaDevices&&(e.navigator.mediaDevices.getDisplayMedia=function(n){if(!n||!n.video){let e=new DOMException("getDisplayMedia without video constraints is undefined");return e.name="NotFoundError",e.code=8,Promise.reject(e)}return!0===n.video?n.video={mediaSource:t}:n.video.mediaSource=t,e.navigator.mediaDevices.getUserMedia(n)})}function Ne(e){"object"==typeof e&&e.RTCTrackEvent&&"receiver"in e.RTCTrackEvent.prototype&&!("transceiver"in e.RTCTrackEvent.prototype)&&Object.defineProperty(e.RTCTrackEvent.prototype,"transceiver",{get(){return{receiver:this.receiver}}})}function se(e,t){if("object"!=typeof e||!e.RTCPeerConnection&&!e.mozRTCPeerConnection)return;!e.RTCPeerConnection&&e.mozRTCPeerConnection&&(e.RTCPeerConnection=e.mozRTCPeerConnection),t.version<53&&["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach((function(t){let n=e.RTCPeerConnection.prototype[t],r={[t](){return arguments[0]=new("addIceCandidate"===t?e.RTCIceCandidate:e.RTCSessionDescription)(arguments[0]),n.apply(this,arguments)}};e.RTCPeerConnection.prototype[t]=r[t]}));let n={inboundrtp:"inbound-rtp",outboundrtp:"outbound-rtp",candidatepair:"candidate-pair",localcandidate:"local-candidate",remotecandidate:"remote-candidate"},r=e.RTCPeerConnection.prototype.getStats;e.RTCPeerConnection.prototype.getStats=function(){let[e,i,s]=arguments;return r.apply(this,[e||null]).then((e=>{if(t.version<53&&!i)try{e.forEach((e=>{e.type=n[e.type]||e.type}))}catch(t){if("TypeError"!==t.name)throw t;e.forEach(((t,r)=>{e.set(r,Object.assign({},t,{type:n[t.type]||t.type}))}))}return e})).then(i,s)}}function $e(e){if("object"!=typeof e||!e.RTCPeerConnection||!e.RTCRtpSender||e.RTCRtpSender&&"getStats"in e.RTCRtpSender.prototype)return;let t=e.RTCPeerConnection.prototype.getSenders;t&&(e.RTCPeerConnection.prototype.getSenders=function(){let e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e});let n=e.RTCPeerConnection.prototype.addTrack;n&&(e.RTCPeerConnection.prototype.addTrack=function(){let e=n.apply(this,arguments);return e._pc=this,e}),e.RTCRtpSender.prototype.getStats=function(){return this.track?this._pc.getStats(this.track):Promise.resolve(new Map)}}function je(e){if("object"!=typeof e||!e.RTCPeerConnection||!e.RTCRtpSender||e.RTCRtpSender&&"getStats"in e.RTCRtpReceiver.prototype)return;let t=e.RTCPeerConnection.prototype.getReceivers;t&&(e.RTCPeerConnection.prototype.getReceivers=function(){let e=t.apply(this,[]);return e.forEach((e=>e._pc=this)),e}),T(e,"track",(e=>(e.receiver._pc=e.srcElement,e))),e.RTCRtpReceiver.prototype.getStats=function(){return this._pc.getStats(this.track)}}function Ve(e){!e.RTCPeerConnection||"removeStream"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.removeStream=function(e){A("removeStream","removeTrack"),this.getSenders().forEach((t=>{t.track&&e.getTracks().includes(t.track)&&this.removeTrack(t)}))})}function Ge(e){e.DataChannel&&!e.RTCDataChannel&&(e.RTCDataChannel=e.DataChannel)}function Je(e){if("object"!=typeof e||!e.RTCPeerConnection)return;let t=e.RTCPeerConnection.prototype.addTransceiver;t&&(e.RTCPeerConnection.prototype.addTransceiver=function(){this.setParametersPromises=[];let e=arguments[1]&&arguments[1].sendEncodings;void 0===e&&(e=[]),e=[...e];let n=e.length>0;n&&e.forEach((e=>{if("rid"in e&&!/^[a-z0-9]{0,16}$/i.test(e.rid))throw new TypeError("Invalid RID value provided.");if("scaleResolutionDownBy"in e&&!(parseFloat(e.scaleResolutionDownBy)>=1))throw new RangeError("scale_resolution_down_by must be >= 1.0");if("maxFramerate"in e&&!(parseFloat(e.maxFramerate)>=0))throw new RangeError("max_framerate must be >= 0.0")}));let r=t.apply(this,arguments);if(n){let{sender:t}=r,n=t.getParameters();(!("encodings"in n)||1===n.encodings.length&&0===Object.keys(n.encodings[0]).length)&&(n.encodings=e,t.sendEncodings=e,this.setParametersPromises.push(t.setParameters(n).then((()=>{delete t.sendEncodings})).catch((()=>{delete t.sendEncodings}))))}return r})}function He(e){if("object"!=typeof e||!e.RTCRtpSender)return;let t=e.RTCRtpSender.prototype.getParameters;t&&(e.RTCRtpSender.prototype.getParameters=function(){let e=t.apply(this,arguments);return"encodings"in e||(e.encodings=[].concat(this.sendEncodings||[{}])),e})}function Ke(e){if("object"!=typeof e||!e.RTCPeerConnection)return;let t=e.RTCPeerConnection.prototype.createOffer;e.RTCPeerConnection.prototype.createOffer=function(){return this.setParametersPromises&&this.setParametersPromises.length?Promise.all(this.setParametersPromises).then((()=>t.apply(this,arguments))).finally((()=>{this.setParametersPromises=[]})):t.apply(this,arguments)}}function We(e){if("object"!=typeof e||!e.RTCPeerConnection)return;let t=e.RTCPeerConnection.prototype.createAnswer;e.RTCPeerConnection.prototype.createAnswer=function(){return this.setParametersPromises&&this.setParametersPromises.length?Promise.all(this.setParametersPromises).then((()=>t.apply(this,arguments))).finally((()=>{this.setParametersPromises=[]})):t.apply(this,arguments)}}Q(oe,{shimAddTransceiver:()=>Je,shimCreateAnswer:()=>We,shimCreateOffer:()=>Ke,shimGetDisplayMedia:()=>Lt,shimGetParameters:()=>He,shimGetUserMedia:()=>ie,shimOnTrack:()=>Ne,shimPeerConnection:()=>se,shimRTCDataChannel:()=>Ge,shimReceiverGetStats:()=>je,shimRemoveStream:()=>Ve,shimSenderGetStats:()=>$e});var ae={};function Ye(e){if("object"==typeof e&&e.RTCPeerConnection){if("getLocalStreams"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getLocalStreams=function(){return this._localStreams||(this._localStreams=[]),this._localStreams}),!("addStream"in e.RTCPeerConnection.prototype)){let t=e.RTCPeerConnection.prototype.addTrack;e.RTCPeerConnection.prototype.addStream=function(e){this._localStreams||(this._localStreams=[]),this._localStreams.includes(e)||this._localStreams.push(e),e.getAudioTracks().forEach((n=>t.call(this,n,e))),e.getVideoTracks().forEach((n=>t.call(this,n,e)))},e.RTCPeerConnection.prototype.addTrack=function(e,...n){return n&&n.forEach((e=>{this._localStreams?this._localStreams.includes(e)||this._localStreams.push(e):this._localStreams=[e]})),t.apply(this,arguments)}}"removeStream"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.removeStream=function(e){this._localStreams||(this._localStreams=[]);let t=this._localStreams.indexOf(e);if(-1===t)return;this._localStreams.splice(t,1);let n=e.getTracks();this.getSenders().forEach((e=>{n.includes(e.track)&&this.removeTrack(e)}))})}}function Xe(e){if("object"==typeof e&&e.RTCPeerConnection&&("getRemoteStreams"in e.RTCPeerConnection.prototype||(e.RTCPeerConnection.prototype.getRemoteStreams=function(){return this._remoteStreams?this._remoteStreams:[]}),!("onaddstream"in e.RTCPeerConnection.prototype))){Object.defineProperty(e.RTCPeerConnection.prototype,"onaddstream",{get(){return this._onaddstream},set(e){this._onaddstream&&(this.removeEventListener("addstream",this._onaddstream),this.removeEventListener("track",this._onaddstreampoly)),this.addEventListener("addstream",this._onaddstream=e),this.addEventListener("track",this._onaddstreampoly=e=>{e.streams.forEach((e=>{if(this._remoteStreams||(this._remoteStreams=[]),this._remoteStreams.includes(e))return;this._remoteStreams.push(e);let t=new Event("addstream");t.stream=e,this.dispatchEvent(t)}))})}});let t=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){let e=this;return this._onaddstreampoly||this.addEventListener("track",this._onaddstreampoly=function(t){t.streams.forEach((t=>{if(e._remoteStreams||(e._remoteStreams=[]),e._remoteStreams.indexOf(t)>=0)return;e._remoteStreams.push(t);let n=new Event("addstream");n.stream=t,e.dispatchEvent(n)}))}),t.apply(e,arguments)}}}function qe(e){if("object"!=typeof e||!e.RTCPeerConnection)return;let t=e.RTCPeerConnection.prototype,n=t.createOffer,r=t.createAnswer,i=t.setLocalDescription,s=t.setRemoteDescription,a=t.addIceCandidate;t.createOffer=function(e,t){let r=arguments.length>=2?arguments[2]:arguments[0],i=n.apply(this,[r]);return t?(i.then(e,t),Promise.resolve()):i},t.createAnswer=function(e,t){let n=arguments.length>=2?arguments[2]:arguments[0],i=r.apply(this,[n]);return t?(i.then(e,t),Promise.resolve()):i};let o=function(e,t,n){let r=i.apply(this,[e]);return n?(r.then(t,n),Promise.resolve()):r};t.setLocalDescription=o,o=function(e,t,n){let r=s.apply(this,[e]);return n?(r.then(t,n),Promise.resolve()):r},t.setRemoteDescription=o,o=function(e,t,n){let r=a.apply(this,[e]);return n?(r.then(t,n),Promise.resolve()):r},t.addIceCandidate=o}function Ze(e){let t=e&&e.navigator;if(t.mediaDevices&&t.mediaDevices.getUserMedia){let e=t.mediaDevices,n=e.getUserMedia.bind(e);t.mediaDevices.getUserMedia=e=>n(Bt(e))}!t.getUserMedia&&t.mediaDevices&&t.mediaDevices.getUserMedia&&(t.getUserMedia=function(e,n,r){t.mediaDevices.getUserMedia(e).then(n,r)}.bind(t))}function Bt(e){return e&&void 0!==e.video?Object.assign({},e,{video:Ae(e.video)}):e}function Qe(e){if(!e.RTCPeerConnection)return;let t=e.RTCPeerConnection;e.RTCPeerConnection=function(e,n){if(e&&e.iceServers){let t=[];for(let n=0;n<e.iceServers.length;n++){let r=e.iceServers[n];void 0===r.urls&&r.url?(A("RTCIceServer.url","RTCIceServer.urls"),r=JSON.parse(JSON.stringify(r)),r.urls=r.url,delete r.url,t.push(r)):t.push(e.iceServers[n])}e.iceServers=t}return new t(e,n)},e.RTCPeerConnection.prototype=t.prototype,"generateCertificate"in t&&Object.defineProperty(e.RTCPeerConnection,"generateCertificate",{get:()=>t.generateCertificate})}function et(e){"object"==typeof e&&e.RTCTrackEvent&&"receiver"in e.RTCTrackEvent.prototype&&!("transceiver"in e.RTCTrackEvent.prototype)&&Object.defineProperty(e.RTCTrackEvent.prototype,"transceiver",{get(){return{receiver:this.receiver}}})}function tt(e){let t=e.RTCPeerConnection.prototype.createOffer;e.RTCPeerConnection.prototype.createOffer=function(e){if(e){typeof e.offerToReceiveAudio<"u"&&(e.offerToReceiveAudio=!!e.offerToReceiveAudio);let t=this.getTransceivers().find((e=>"audio"===e.receiver.track.kind));!1===e.offerToReceiveAudio&&t?"sendrecv"===t.direction?t.setDirection?t.setDirection("sendonly"):t.direction="sendonly":"recvonly"===t.direction&&(t.setDirection?t.setDirection("inactive"):t.direction="inactive"):!0===e.offerToReceiveAudio&&!t&&this.addTransceiver("audio",{direction:"recvonly"}),typeof e.offerToReceiveVideo<"u"&&(e.offerToReceiveVideo=!!e.offerToReceiveVideo);let n=this.getTransceivers().find((e=>"video"===e.receiver.track.kind));!1===e.offerToReceiveVideo&&n?"sendrecv"===n.direction?n.setDirection?n.setDirection("sendonly"):n.direction="sendonly":"recvonly"===n.direction&&(n.setDirection?n.setDirection("inactive"):n.direction="inactive"):!0===e.offerToReceiveVideo&&!n&&this.addTransceiver("video",{direction:"recvonly"})}return t.apply(this,arguments)}}function rt(e){"object"!=typeof e||e.AudioContext||(e.AudioContext=e.webkitAudioContext)}Q(ae,{shimAudioContext:()=>rt,shimCallbacksAPI:()=>qe,shimConstraints:()=>Bt,shimCreateOfferLegacy:()=>tt,shimGetUserMedia:()=>Ze,shimLocalStreamsAPI:()=>Ye,shimRTCIceServerUrls:()=>Qe,shimRemoteStreamsAPI:()=>Xe,shimTrackEventTransceiver:()=>et});var st={};Q(st,{removeExtmapAllowMixed:()=>he,shimAddIceCandidateNullOrEmpty:()=>j,shimConnectionState:()=>fe,shimMaxMessageSize:()=>N,shimParameterlessSetLocalDescription:()=>V,shimRTCIceCandidate:()=>F,shimRTCIceCandidateRelayProtocol:()=>ce,shimSendThrowTypeError:()=>$});var U=Rt(it());function F(e){if(!e.RTCIceCandidate||e.RTCIceCandidate&&"foundation"in e.RTCIceCandidate.prototype)return;let t=e.RTCIceCandidate;e.RTCIceCandidate=function(e){if("object"==typeof e&&e.candidate&&0===e.candidate.indexOf("a=")&&((e=JSON.parse(JSON.stringify(e))).candidate=e.candidate.substring(2)),e.candidate&&e.candidate.length){let n=new t(e),r=U.default.parseCandidate(e.candidate);for(let e in r)e in n||Object.defineProperty(n,e,{value:r[e]});return n.toJSON=function(){return{candidate:n.candidate,sdpMid:n.sdpMid,sdpMLineIndex:n.sdpMLineIndex,usernameFragment:n.usernameFragment}},n}return new t(e)},e.RTCIceCandidate.prototype=t.prototype,T(e,"icecandidate",(t=>(t.candidate&&Object.defineProperty(t,"candidate",{value:new e.RTCIceCandidate(t.candidate),writable:"false"}),t)))}function ce(e){!e.RTCIceCandidate||e.RTCIceCandidate&&"relayProtocol"in e.RTCIceCandidate.prototype||T(e,"icecandidate",(e=>{if(e.candidate){let t=U.default.parseCandidate(e.candidate.candidate);"relay"===t.type&&(e.candidate.relayProtocol={0:"tls",1:"tcp",2:"udp"}[t.priority>>24])}return e}))}function N(e,t){if(!e.RTCPeerConnection)return;"sctp"in e.RTCPeerConnection.prototype||Object.defineProperty(e.RTCPeerConnection.prototype,"sctp",{get(){return typeof this._sctp>"u"?null:this._sctp}});let n=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(){if(this._sctp=null,"chrome"===t.browser&&t.version>=76){let{sdpSemantics:e}=this.getConfiguration();"plan-b"===e&&Object.defineProperty(this,"sctp",{get(){return typeof this._sctp>"u"?null:this._sctp},enumerable:!0,configurable:!0})}if(function(e){if(!e||!e.sdp)return!1;let t=U.default.splitSections(e.sdp);return t.shift(),t.some((e=>{let t=U.default.parseMLine(e);return t&&"application"===t.kind&&-1!==t.protocol.indexOf("SCTP")}))}(arguments[0])){let e,n=function(e){let t=e.sdp.match(/mozilla...THIS_IS_SDPARTA-(\d+)/);if(null===t||t.length<2)return-1;let n=parseInt(t[1],10);return n!=n?-1:n}(arguments[0]),r=function(e){let n=65536;return"firefox"===t.browser&&(n=t.version<57?-1===e?16384:2147483637:t.version<60?57===t.version?65535:65536:2147483637),n}(n),i=function(e,n){let r=65536;"firefox"===t.browser&&57===t.version&&(r=65535);let i=U.default.matchPrefix(e.sdp,"a=max-message-size:");return i.length>0?r=parseInt(i[0].substring(19),10):"firefox"===t.browser&&-1!==n&&(r=2147483637),r}(arguments[0],n);e=0===r&&0===i?Number.POSITIVE_INFINITY:0===r||0===i?Math.max(r,i):Math.min(r,i);let s={};Object.defineProperty(s,"maxMessageSize",{get:()=>e}),this._sctp=s}return n.apply(this,arguments)}}function $(e){if(!e.RTCPeerConnection||!("createDataChannel"in e.RTCPeerConnection.prototype))return;function t(e,t){let n=e.send;e.send=function(){let r=arguments[0],i=r.length||r.size||r.byteLength;if("open"===e.readyState&&t.sctp&&i>t.sctp.maxMessageSize)throw new TypeError("Message too large (can send a maximum of "+t.sctp.maxMessageSize+" bytes)");return n.apply(e,arguments)}}let n=e.RTCPeerConnection.prototype.createDataChannel;e.RTCPeerConnection.prototype.createDataChannel=function(){let e=n.apply(this,arguments);return t(e,this),e},T(e,"datachannel",(e=>(t(e.channel,e.target),e)))}function fe(e){if(!e.RTCPeerConnection||"connectionState"in e.RTCPeerConnection.prototype)return;let t=e.RTCPeerConnection.prototype;Object.defineProperty(t,"connectionState",{get(){return{completed:"connected",checking:"connecting"}[this.iceConnectionState]||this.iceConnectionState},enumerable:!0,configurable:!0}),Object.defineProperty(t,"onconnectionstatechange",{get(){return this._onconnectionstatechange||null},set(e){this._onconnectionstatechange&&(this.removeEventListener("connectionstatechange",this._onconnectionstatechange),delete this._onconnectionstatechange),e&&this.addEventListener("connectionstatechange",this._onconnectionstatechange=e)},enumerable:!0,configurable:!0}),["setLocalDescription","setRemoteDescription"].forEach((e=>{let n=t[e];t[e]=function(){return this._connectionstatechangepoly||(this._connectionstatechangepoly=e=>{let t=e.target;if(t._lastConnectionState!==t.connectionState){t._lastConnectionState=t.connectionState;let n=new Event("connectionstatechange",e);t.dispatchEvent(n)}return e},this.addEventListener("iceconnectionstatechange",this._connectionstatechangepoly)),n.apply(this,arguments)}}))}function he(e,t){if(!e.RTCPeerConnection||"chrome"===t.browser&&t.version>=71||"safari"===t.browser&&t.version>=605)return;let n=e.RTCPeerConnection.prototype.setRemoteDescription;e.RTCPeerConnection.prototype.setRemoteDescription=function(t){if(t&&t.sdp&&-1!==t.sdp.indexOf("\na=extmap-allow-mixed")){let n=t.sdp.split("\n").filter((e=>"a=extmap-allow-mixed"!==e.trim())).join("\n");e.RTCSessionDescription&&t instanceof e.RTCSessionDescription?arguments[0]=new e.RTCSessionDescription({type:t.type,sdp:n}):t.sdp=n}return n.apply(this,arguments)}}function j(e,t){if(!e.RTCPeerConnection||!e.RTCPeerConnection.prototype)return;let n=e.RTCPeerConnection.prototype.addIceCandidate;!n||0===n.length||(e.RTCPeerConnection.prototype.addIceCandidate=function(){return arguments[0]?("chrome"===t.browser&&t.version<78||"firefox"===t.browser&&t.version<68||"safari"===t.browser)&&arguments[0]&&""===arguments[0].candidate?Promise.resolve():n.apply(this,arguments):(arguments[1]&&arguments[1].apply(null),Promise.resolve())})}function V(e,t){if(!e.RTCPeerConnection||!e.RTCPeerConnection.prototype)return;let n=e.RTCPeerConnection.prototype.setLocalDescription;!n||0===n.length||(e.RTCPeerConnection.prototype.setLocalDescription=function(){let e=arguments[0]||{};if("object"!=typeof e||e.type&&e.sdp)return n.apply(this,arguments);if(e={type:e.type,sdp:e.sdp},!e.type)switch(this.signalingState){case"stable":case"have-local-offer":case"have-remote-pranswer":e.type="offer";break;default:e.type="answer"}return e.sdp||"offer"!==e.type&&"answer"!==e.type?n.apply(this,[e]):("offer"===e.type?this.createOffer:this.createAnswer).apply(this).then((e=>n.apply(this,[e])))})}var lr=Rt(it());function zt({window:e}={},t={shimChrome:!0,shimFirefox:!0,shimSafari:!0}){let n=ee,r=Ut(e),i={browserDetails:r,commonShim:st,extractVersion:z,disableLog:Mt,disableWarnings:At,sdp:lr};switch(r.browser){case"chrome":if(!ne||!re||!t.shimChrome)return n("Chrome shim is not included in this adapter release."),i;if(null===r.version)return n("Chrome shim can not determine version, not shimming."),i;n("adapter.js shimming chrome."),i.browserShim=ne,j(e,r),V(e),te(e,r),Oe(e),re(e,r),we(e),ze(e,r),Le(e),Be(e),Fe(e,r),F(e),ce(e),fe(e),N(e,r),$(e),he(e,r);break;case"firefox":if(!oe||!se||!t.shimFirefox)return n("Firefox shim is not included in this adapter release."),i;n("adapter.js shimming firefox."),i.browserShim=oe,j(e,r),V(e),ie(e,r),se(e,r),Ne(e),Ve(e),$e(e),je(e),Ge(e),Je(e),He(e),Ke(e),We(e),F(e),fe(e),N(e,r),$(e);break;case"safari":if(!ae||!t.shimSafari)return n("Safari shim is not included in this adapter release."),i;n("adapter.js shimming safari."),i.browserShim=ae,j(e,r),V(e),Qe(e),tt(e),qe(e),Ye(e),Xe(e),et(e),Ze(e),rt(e),F(e),ce(e),N(e,r),$(e),he(e,r);break;default:n("Unsupported browser!")}return i}var dr=zt({window:typeof window>"u"?void 0:window}),ot=dr,R=4294967295;function pe(e,t,n){var r=Math.floor(n/4294967296),i=n;e.setUint32(t,r),e.setUint32(t+4,i)}function ue(e,t){return 4294967296*e.getInt32(t)+e.getUint32(t+4)}var at,ct,ft,le=(typeof __Process$>"u"||"never"!==(null===(at=__Process$?.env)||void 0===at?void 0:at.TEXT_ENCODING))&&typeof TextEncoder<"u"&&typeof TextDecoder<"u",G=le?new TextEncoder:void 0;function mr(e,t,n){t.set(G.encode(e),n)}function gr(e,t,n){G.encodeInto(e,t.subarray(n))}le&&typeof __Process$<"u"&&(null===(ct=__Process$?.env)||void 0===ct||ct.TEXT_ENCODING);var yr=4096;function de(e,t,n){for(var r=t,i=r+n,s=[],a="";r<i;){var o=e[r++];if(128&o)if(192==(224&o)){var c=63&e[r++];s.push((31&o)<<6|c)}else if(224==(240&o)){c=63&e[r++];var l=63&e[r++];s.push((31&o)<<12|c<<6|l)}else if(240==(248&o)){var h=(7&o)<<18|(c=63&e[r++])<<12|(l=63&e[r++])<<6|63&e[r++];h>65535&&(h-=65536,s.push(h>>>10&1023|55296),h=56320|1023&h),s.push(h)}else s.push(o);else s.push(o);s.length>=yr&&(a+=String.fromCharCode.apply(String,s),s.length=0)}return s.length>0&&(a+=String.fromCharCode.apply(String,s)),a}le&&new TextDecoder,le&&typeof __Process$<"u"&&(null===(ft=__Process$?.env)||void 0===ft||ft.TEXT_DECODER);var J=function(e,t){this.type=e,this.data=t},_r=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])})(t,n)};return function(t,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),b=function(e){function t(n){var r=e.call(this,n)||this,i=Object.create(t.prototype);return Object.setPrototypeOf(r,i),Object.defineProperty(r,"name",{configurable:!0,enumerable:!1,value:t.name}),r}return _r(t,e),t}(Error),xr=-1,Cr=4294967295,Sr=17179869183;function br(e){var t=e.sec,n=e.nsec;if(t>=0&&n>=0&&t<=Sr){if(0===n&&t<=Cr){var r=new Uint8Array(4);return(a=new DataView(r.buffer)).setUint32(0,t),r}var i=t/4294967296,s=4294967295&t;r=new Uint8Array(8);return(a=new DataView(r.buffer)).setUint32(0,n<<2|3&i),a.setUint32(4,s),r}var a;r=new Uint8Array(12);return(a=new DataView(r.buffer)).setUint32(0,n),pe(a,4,t),r}function Tr(e){var t=e.getTime(),n=Math.floor(t/1e3),r=1e6*(t-1e3*n),i=Math.floor(r/1e9);return{sec:n+i,nsec:r-1e9*i}}function kr(e){return e instanceof Date?br(Tr(e)):null}function Er(e){var t=new DataView(e.buffer,e.byteOffset,e.byteLength);switch(e.byteLength){case 4:return{sec:t.getUint32(0),nsec:0};case 8:var n=t.getUint32(0);return{sec:4294967296*(3&n)+t.getUint32(4),nsec:n>>>2};case 12:return{sec:ue(t,4),nsec:t.getUint32(0)};default:throw new b("Unrecognized data size for timestamp (expected 4, 8, or 12): ".concat(e.length))}}function Rr(e){var t=Er(e);return new Date(1e3*t.sec+t.nsec/1e6)}var Ht={type:xr,encode:kr,decode:Rr};!function(){function e(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(Ht)}e.prototype.register=function(e){var t=e.type,n=e.encode,r=e.decode;if(t>=0)this.encoders[t]=n,this.decoders[t]=r;else{var i=1+t;this.builtInEncoders[i]=n,this.builtInDecoders[i]=r}},e.prototype.tryToEncode=function(e,t){for(var n=0;n<this.builtInEncoders.length;n++){if(null!=(r=this.builtInEncoders[n]))if(null!=(i=r(e,t)))return new J(-1-n,i)}for(n=0;n<this.encoders.length;n++){var r,i;if(null!=(r=this.encoders[n]))if(null!=(i=r(e,t)))return new J(n,i)}return e instanceof J?e:null},e.prototype.decode=function(e,t,n){var r=t<0?this.builtInDecoders[-1-t]:this.decoders[t];return r?r(e,t,n):new J(t,e)},e.defaultCodec=new e}();var Ir=16,Mr=16,Wt=function(){function e(e,t){void 0===e&&(e=Ir),void 0===t&&(t=Mr),this.maxKeyLength=e,this.maxLengthPerKey=t,this.hit=0,this.miss=0,this.caches=[];for(var n=0;n<this.maxKeyLength;n++)this.caches.push([])}return e.prototype.canBeCached=function(e){return e>0&&e<=this.maxKeyLength},e.prototype.find=function(e,t,n){e:for(var r=0,i=this.caches[n-1];r<i.length;r++){for(var s=i[r],a=s.bytes,o=0;o<n;o++)if(a[o]!==e[t+o])continue e;return s.str}return null},e.prototype.store=function(e,t){var n=this.caches[e.length-1],r={bytes:e,str:t};n.length>=this.maxLengthPerKey?n[Math.random()*n.length|0]=r:n.push(r)},e.prototype.decode=function(e,t,n){var r=this.find(e,t,n);if(null!=r)return this.hit++,r;this.miss++;var i=de(e,t,n),s=Uint8Array.prototype.slice.call(e,t,t+n);return this.store(s,i),i},e}(),dt=new DataView(new ArrayBuffer(0));new Uint8Array(dt.buffer);var lt=function(){try{dt.getInt8(0)}catch(e){return e.constructor}throw new Error("never reached")}();function I(e,t,n,r){Object.defineProperty(e,t,{get:n,set:r,enumerable:!0,configurable:!0})}new lt("Insufficient data"),new Wt;var ve=class{constructor(){this.chunkedMTU=16300,this._dataCount=1,this.chunk=e=>{let t=[],n=e.byteLength,r=Math.ceil(n/this.chunkedMTU),i=0,s=0;for(;s<n;){let a=Math.min(n,s+this.chunkedMTU),o=e.slice(s,a),c={__peerData:this._dataCount,n:i,data:o,total:r};t.push(c),s=a,i++}return this._dataCount++,t}}};function jr(e){let t=0;for(let n of e)t+=n.byteLength;let n=new Uint8Array(t),r=0;for(let t of e)n.set(t,r),r+=t.byteLength;return n}var tr,gt=ot.default||ot,K=new class{isWebRTCSupported(){return typeof RTCPeerConnection<"u"}isBrowserSupported(){let e=this.getBrowser(),t=this.getVersion();return!!this.supportedBrowsers.includes(e)&&("chrome"===e?t>=this.minChromeVersion:"firefox"===e?t>=this.minFirefoxVersion:"safari"===e&&(!this.isIOS&&t>=this.minSafariVersion))}getBrowser(){return gt.browserDetails.browser}getVersion(){return gt.browserDetails.version||0}isUnifiedPlanSupported(){let e=this.getBrowser(),t=gt.browserDetails.version||0;if("chrome"===e&&t<this.minChromeVersion)return!1;if("firefox"===e&&t>=this.minFirefoxVersion)return!0;if(!window.RTCRtpTransceiver||!("currentDirection"in RTCRtpTransceiver.prototype))return!1;let n,r=!1;try{n=new RTCPeerConnection,n.addTransceiver("audio"),r=!0}catch{}finally{n&&n.close()}return r}toString(){return`Supports:\n    browser:${this.getBrowser()}\n    version:${this.getVersion()}\n    isIOS:${this.isIOS}\n    isWebRTCSupported:${this.isWebRTCSupported()}\n    isBrowserSupported:${this.isBrowserSupported()}\n    isUnifiedPlanSupported:${this.isUnifiedPlanSupported()}`}constructor(){this.isIOS=typeof navigator<"u"&&["iPad","iPhone","iPod"].includes(navigator.platform),this.supportedBrowsers=["firefox","chrome","safari"],this.minFirefoxVersion=59,this.minChromeVersion=72,this.minSafariVersion=605}},Vr=e=>!e||/^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(e),nr=()=>Math.random().toString(36).slice(2),er={iceServers:[{urls:"stun:stun.l.google.com:19302"},{urls:["turn:eu-0.turn.peerjs.com:3478","turn:us-0.turn.peerjs.com:3478"],username:"peerjs",credential:"peerjsp"}],sdpSemantics:"unified-plan"},yt=class extends ve{noop(){}blobToArrayBuffer(e,t){let n=new FileReader;return n.onload=function(e){e.target&&t(e.target.result)},n.readAsArrayBuffer(e),n}binaryStringToArrayBuffer(e){let t=new Uint8Array(e.length);for(let n=0;n<e.length;n++)t[n]=255&e.charCodeAt(n);return t.buffer}isSecure(){return"https:"===location.protocol}constructor(...e){super(...e),this.CLOUD_HOST="0.peerjs.com",this.CLOUD_PORT=443,this.chunkedBrowsers={Chrome:1,chrome:1},this.defaultConfig=er,this.browser=K.getBrowser(),this.browserVersion=K.getVersion(),this.pack=Ie,this.unpack=De,this.supports=function(){let e,t={browser:K.isBrowserSupported(),webRTC:K.isWebRTCSupported(),audioVideo:!1,data:!1,binaryBlob:!1,reliable:!1};if(!t.webRTC)return t;try{let n;e=new RTCPeerConnection(er),t.audioVideo=!0;try{n=e.createDataChannel("_PEERJSTEST",{ordered:!0}),t.data=!0,t.reliable=!!n.ordered;try{n.binaryType="blob",t.binaryBlob=!K.isIOS}catch{}}catch{}finally{n&&n.close()}}catch{}finally{e&&e.close()}return t}(),this.validateId=Vr,this.randomToken=nr}},S=new yt,Gr="PeerJS: ";!function(e){e[e.Disabled=0]="Disabled",e[e.Errors=1]="Errors",e[e.Warnings=2]="Warnings",e[e.All=3]="All"}(tr||(tr={}));var vt=class{get logLevel(){return this._logLevel}set logLevel(e){this._logLevel=e}log(...e){this._logLevel>=3&&this._print(3,...e)}warn(...e){this._logLevel>=2&&this._print(2,...e)}error(...e){this._logLevel>=1&&this._print(1,...e)}setLogFunction(e){this._print=e}_print(e,...t){let n=[Gr,...t];for(let e in n)n[e]instanceof Error&&(n[e]="("+n[e].name+") "+n[e].message);e>=3?console.log(...n):e>=2?console.warn("WARNING",...n):e>=1&&console.error("ERROR",...n)}constructor(){this._logLevel=0}},d=new vt,kt={},Jr=Object.prototype.hasOwnProperty,C="~";function Y(){}function Hr(e,t,n){this.fn=e,this.context=t,this.once=n||!1}function ir(e,t,n,r,i){if("function"!=typeof n)throw new TypeError("The listener must be a function");var s=new Hr(n,r||e,i),a=C?C+t:t;return e._events[a]?e._events[a].fn?e._events[a]=[e._events[a],s]:e._events[a].push(s):(e._events[a]=s,e._eventsCount++),e}function ye(e,t){0===--e._eventsCount?e._events=new Y:delete e._events[t]}function x(){this._events=new Y,this._eventsCount=0}Object.create&&(Y.prototype=Object.create(null),(new Y).__proto__||(C=!1)),x.prototype.eventNames=function(){var e,t,n=[];if(0===this._eventsCount)return n;for(t in e=this._events)Jr.call(e,t)&&n.push(C?t.slice(1):t);return Object.getOwnPropertySymbols?n.concat(Object.getOwnPropertySymbols(e)):n},x.prototype.listeners=function(e){var t=C?C+e:e,n=this._events[t];if(!n)return[];if(n.fn)return[n.fn];for(var r=0,i=n.length,s=new Array(i);r<i;r++)s[r]=n[r].fn;return s},x.prototype.listenerCount=function(e){var t=C?C+e:e,n=this._events[t];return n?n.fn?1:n.length:0},x.prototype.emit=function(e,t,n,r,i,s){var a=C?C+e:e;if(!this._events[a])return!1;var o,c,l=this._events[a],h=arguments.length;if(l.fn){switch(l.once&&this.removeListener(e,l.fn,void 0,!0),h){case 1:return l.fn.call(l.context),!0;case 2:return l.fn.call(l.context,t),!0;case 3:return l.fn.call(l.context,t,n),!0;case 4:return l.fn.call(l.context,t,n,r),!0;case 5:return l.fn.call(l.context,t,n,r,i),!0;case 6:return l.fn.call(l.context,t,n,r,i,s),!0}for(c=1,o=new Array(h-1);c<h;c++)o[c-1]=arguments[c];l.fn.apply(l.context,o)}else{var u,_=l.length;for(c=0;c<_;c++)switch(l[c].once&&this.removeListener(e,l[c].fn,void 0,!0),h){case 1:l[c].fn.call(l[c].context);break;case 2:l[c].fn.call(l[c].context,t);break;case 3:l[c].fn.call(l[c].context,t,n);break;case 4:l[c].fn.call(l[c].context,t,n,r);break;default:if(!o)for(u=1,o=new Array(h-1);u<h;u++)o[u-1]=arguments[u];l[c].fn.apply(l[c].context,o)}}return!0},x.prototype.on=function(e,t,n){return ir(this,e,t,n,!1)},x.prototype.once=function(e,t,n){return ir(this,e,t,n,!0)},x.prototype.removeListener=function(e,t,n,r){var i=C?C+e:e;if(!this._events[i])return this;if(!t)return ye(this,i),this;var s=this._events[i];if(s.fn)s.fn===t&&(!r||s.once)&&(!n||s.context===n)&&ye(this,i);else{for(var a=0,o=[],c=s.length;a<c;a++)(s[a].fn!==t||r&&!s[a].once||n&&s[a].context!==n)&&o.push(s[a]);o.length?this._events[i]=1===o.length?o[0]:o:ye(this,i)}return this},x.prototype.removeAllListeners=function(e){var t;return e?(t=C?C+e:e,this._events[t]&&ye(this,t)):(this._events=new Y,this._eventsCount=0),this},x.prototype.off=x.prototype.removeListener,x.prototype.addListener=x.prototype.on,x.prefixed=C,x.EventEmitter=x,kt=x;var E,v,X,q,B,k,_,M={};I(M,"ConnectionType",(()=>E)),I(M,"PeerErrorType",(()=>v)),I(M,"BaseConnectionErrorType",(()=>X)),I(M,"DataConnectionErrorType",(()=>q)),I(M,"SerializationType",(()=>B)),I(M,"SocketEventType",(()=>k)),I(M,"ServerMessageType",(()=>_)),function(e){e.Data="data",e.Media="media"}(E||(E={})),function(e){e.BrowserIncompatible="browser-incompatible",e.Disconnected="disconnected",e.InvalidID="invalid-id",e.InvalidKey="invalid-key",e.Network="network",e.PeerUnavailable="peer-unavailable",e.SslUnavailable="ssl-unavailable",e.ServerError="server-error",e.SocketError="socket-error",e.SocketClosed="socket-closed",e.UnavailableID="unavailable-id",e.WebRTC="webrtc"}(v||(v={})),function(e){e.NegotiationFailed="negotiation-failed",e.ConnectionClosed="connection-closed"}(X||(X={})),function(e){e.NotOpenYet="not-open-yet",e.MessageToBig="message-too-big"}(q||(q={})),function(e){e.Binary="binary",e.BinaryUTF8="binary-utf8",e.JSON="json",e.None="raw"}(B||(B={})),function(e){e.Message="message",e.Disconnected="disconnected",e.Error="error",e.Close="close"}(k||(k={})),function(e){e.Heartbeat="HEARTBEAT",e.Candidate="CANDIDATE",e.Offer="OFFER",e.Answer="ANSWER",e.Open="OPEN",e.Error="ERROR",e.IdTaken="ID-TAKEN",e.InvalidKey="INVALID-KEY",e.Leave="LEAVE",e.Expire="EXPIRE"}(_||(_={}));var Et={};Et=JSON.parse('{"name":"peerjs","version":"1.5.4","keywords":["peerjs","webrtc","p2p","rtc"],"description":"PeerJS client","homepage":"https://peerjs.com","bugs":{"url":"https://github.com/peers/peerjs/issues"},"repository":{"type":"git","url":"https://github.com/peers/peerjs"},"license":"MIT","contributors":["Michelle Bu <michelle@michellebu.com>","afrokick <devbyru@gmail.com>","ericz <really.ez@gmail.com>","Jairo <kidandcat@gmail.com>","Jonas Gloning <34194370+jonasgloning@users.noreply.github.com>","Jairo Caro-Accino Viciana <jairo@galax.be>","Carlos Caballero <carlos.caballero.gonzalez@gmail.com>","hc <hheennrryy@gmail.com>","Muhammad Asif <capripio@gmail.com>","PrashoonB <prashoonbhattacharjee@gmail.com>","Harsh Bardhan Mishra <47351025+HarshCasper@users.noreply.github.com>","akotynski <aleksanderkotbury@gmail.com>","lmb <i@lmb.io>","Jairooo <jairocaro@msn.com>","Moritz Stückler <moritz.stueckler@gmail.com>","Simon <crydotsnakegithub@gmail.com>","Denis Lukov <denismassters@gmail.com>","Philipp Hancke <fippo@andyet.net>","Hans Oksendahl <hansoksendahl@gmail.com>","Jess <jessachandler@gmail.com>","khankuan <khankuan@gmail.com>","DUODVK <kurmanov.work@gmail.com>","XiZhao <kwang1imsa@gmail.com>","Matthias Lohr <matthias@lohr.me>","=frank tree <=frnktrb@googlemail.com>","Andre Eckardt <aeckardt@outlook.com>","Chris Cowan <agentme49@gmail.com>","Alex Chuev <alex@chuev.com>","alxnull <alxnull@e.mail.de>","Yemel Jardi <angel.jardi@gmail.com>","Ben Parnell <benjaminparnell.94@gmail.com>","Benny Lichtner <bennlich@gmail.com>","fresheneesz <bitetrudpublic@gmail.com>","bob.barstead@exaptive.com <bob.barstead@exaptive.com>","chandika <chandika@gmail.com>","emersion <contact@emersion.fr>","Christopher Van <cvan@users.noreply.github.com>","eddieherm <edhermoso@gmail.com>","Eduardo Pinho <enet4mikeenet@gmail.com>","Evandro Zanatta <ezanatta@tray.net.br>","Gardner Bickford <gardner@users.noreply.github.com>","Gian Luca <gianluca.cecchi@cynny.com>","PatrickJS <github@gdi2290.com>","jonnyf <github@jonathanfoss.co.uk>","Hizkia Felix <hizkifw@gmail.com>","Hristo Oskov <hristo.oskov@gmail.com>","Isaac Madwed <i.madwed@gmail.com>","Ilya Konanykhin <ilya.konanykhin@gmail.com>","jasonbarry <jasbarry@me.com>","Jonathan Burke <jonathan.burke.1311@googlemail.com>","Josh Hamit <josh.hamit@gmail.com>","Jordan Austin <jrax86@gmail.com>","Joel Wetzell <jwetzell@yahoo.com>","xizhao <kevin.wang@cloudera.com>","Alberto Torres <kungfoobar@gmail.com>","Jonathan Mayol <mayoljonathan@gmail.com>","Jefferson Felix <me@jsfelix.dev>","Rolf Erik Lekang <me@rolflekang.com>","Kevin Mai-Husan Chia <mhchia@users.noreply.github.com>","Pepijn de Vos <pepijndevos@gmail.com>","JooYoung <qkdlql@naver.com>","Tobias Speicher <rootcommander@gmail.com>","Steve Blaurock <sblaurock@gmail.com>","Kyrylo Shegeda <shegeda@ualberta.ca>","Diwank Singh Tomer <singh@diwank.name>","Sören Balko <Soeren.Balko@gmail.com>","Arpit Solanki <solankiarpit1997@gmail.com>","Yuki Ito <yuki@gnnk.net>","Artur Zayats <zag2art@gmail.com>"],"funding":{"type":"opencollective","url":"https://opencollective.com/peer"},"collective":{"type":"opencollective","url":"https://opencollective.com/peer"},"files":["dist/*"],"sideEffects":["lib/global.ts","lib/supports.ts"],"main":"dist/bundler.cjs","module":"dist/bundler.mjs","browser-minified":"dist/peerjs.min.js","browser-unminified":"dist/peerjs.js","browser-minified-msgpack":"dist/serializer.msgpack.mjs","types":"dist/types.d.ts","engines":{"node":">= 14"},"targets":{"types":{"source":"lib/exports.ts"},"main":{"source":"lib/exports.ts","sourceMap":{"inlineSources":true}},"module":{"source":"lib/exports.ts","includeNodeModules":["eventemitter3"],"sourceMap":{"inlineSources":true}},"browser-minified":{"context":"browser","outputFormat":"global","optimize":true,"engines":{"browsers":"chrome >= 83, edge >= 83, firefox >= 80, safari >= 15"},"source":"lib/global.ts"},"browser-unminified":{"context":"browser","outputFormat":"global","optimize":false,"engines":{"browsers":"chrome >= 83, edge >= 83, firefox >= 80, safari >= 15"},"source":"lib/global.ts"},"browser-minified-msgpack":{"context":"browser","outputFormat":"esmodule","isLibrary":true,"optimize":true,"engines":{"browsers":"chrome >= 83, edge >= 83, firefox >= 102, safari >= 15"},"source":"lib/dataconnection/StreamConnection/MsgPack.ts"}},"scripts":{"contributors":"git-authors-cli --print=false && prettier --write package.json && git add package.json package-lock.json && git commit -m \\"chore(contributors): update and sort contributors list\\"","check":"tsc --noEmit && tsc -p e2e/tsconfig.json --noEmit","watch":"parcel watch","build":"rm -rf dist && parcel build","prepublishOnly":"npm run build","test":"jest","test:watch":"jest --watch","coverage":"jest --coverage --collectCoverageFrom=\\"./lib/**\\"","format":"prettier --write .","format:check":"prettier --check .","semantic-release":"semantic-release","e2e":"wdio run e2e/wdio.local.conf.ts","e2e:bstack":"wdio run e2e/wdio.bstack.conf.ts"},"devDependencies":{"@parcel/config-default":"^2.9.3","@parcel/packager-ts":"^2.9.3","@parcel/transformer-typescript-tsc":"^2.9.3","@parcel/transformer-typescript-types":"^2.9.3","@semantic-release/changelog":"^6.0.1","@semantic-release/git":"^10.0.1","@swc/core":"^1.3.27","@swc/jest":"^0.2.24","@types/jasmine":"^4.3.4","@wdio/browserstack-service":"^8.11.2","@wdio/cli":"^8.11.2","@wdio/globals":"^8.11.2","@wdio/jasmine-framework":"^8.11.2","@wdio/local-runner":"^8.11.2","@wdio/spec-reporter":"^8.11.2","@wdio/types":"^8.10.4","http-server":"^14.1.1","jest":"^29.3.1","jest-environment-jsdom":"^29.3.1","mock-socket":"^9.0.0","parcel":"^2.9.3","prettier":"^3.0.0","semantic-release":"^21.0.0","ts-node":"^10.9.1","typescript":"^5.0.0","wdio-geckodriver-service":"^5.0.1"},"dependencies":{"@msgpack/msgpack":"^2.8.0","eventemitter3":"^4.0.7","peerjs-js-binarypack":"^2.1.0","webrtc-adapter":"^9.0.0"},"alias":{"process":false,"buffer":false}}');var _t=class extends kt.EventEmitter{constructor(e,t,n,r,i,s=5e3){super(),this.pingInterval=s,this._disconnected=!0,this._messagesQueue=[];let a=e?"wss://":"ws://";this._baseUrl=a+t+":"+n+r+"peerjs?key="+i}start(e,t){this._id=e;let n=`${this._baseUrl}&id=${e}&token=${t}`;this._socket||!this._disconnected||(this._socket=new WebSocket(n+"&version="+Et.version),this._disconnected=!1,this._socket.onmessage=e=>{let t;try{t=JSON.parse(e.data),d.log("Server message received:",t)}catch{return void d.log("Invalid server message",e.data)}this.emit(k.Message,t)},this._socket.onclose=e=>{this._disconnected||(d.log("Socket closed.",e),this._cleanup(),this._disconnected=!0,this.emit(k.Disconnected))},this._socket.onopen=()=>{this._disconnected||(this._sendQueuedMessages(),d.log("Socket open"),this._scheduleHeartbeat())})}_scheduleHeartbeat(){this._wsPingTimer=setTimeout((()=>{this._sendHeartbeat()}),this.pingInterval)}_sendHeartbeat(){if(!this._wsOpen())return void d.log("Cannot send heartbeat, because socket closed");let e=JSON.stringify({type:_.Heartbeat});this._socket.send(e),this._scheduleHeartbeat()}_wsOpen(){return!!this._socket&&1===this._socket.readyState}_sendQueuedMessages(){let e=[...this._messagesQueue];this._messagesQueue=[];for(let t of e)this.send(t)}send(e){if(this._disconnected)return;if(!this._id)return void this._messagesQueue.push(e);if(!e.type)return void this.emit(k.Error,"Invalid message");if(!this._wsOpen())return;let t=JSON.stringify(e);this._socket.send(t)}close(){this._disconnected||(this._cleanup(),this._disconnected=!0)}_cleanup(){this._socket&&(this._socket.onopen=this._socket.onmessage=this._socket.onclose=null,this._socket.close(),this._socket=void 0),clearTimeout(this._wsPingTimer)}},_e=class{constructor(e){this.connection=e}startConnection(e){let t=this._startPeerConnection();if(this.connection.peerConnection=t,this.connection.type===E.Media&&e._stream&&this._addTracksToConnection(e._stream,t),e.originator){let n=this.connection,r={ordered:!!e.reliable},i=t.createDataChannel(n.label,r);n._initializeDataChannel(i),this._makeOffer()}else this.handleSDP("OFFER",e.sdp)}_startPeerConnection(){d.log("Creating RTCPeerConnection.");let e=new RTCPeerConnection(this.connection.provider.options.config);return this._setupListeners(e),e}_setupListeners(e){let t=this.connection.peer,n=this.connection.connectionId,r=this.connection.type,i=this.connection.provider;d.log("Listening for ICE candidates."),e.onicecandidate=e=>{!e.candidate||!e.candidate.candidate||(d.log(`Received ICE candidates for ${t}:`,e.candidate),i.socket.send({type:_.Candidate,payload:{candidate:e.candidate,type:r,connectionId:n},dst:t}))},e.oniceconnectionstatechange=()=>{switch(e.iceConnectionState){case"failed":d.log("iceConnectionState is failed, closing connections to "+t),this.connection.emitError(X.NegotiationFailed,"Negotiation of connection to "+t+" failed."),this.connection.close();break;case"closed":d.log("iceConnectionState is closed, closing connections to "+t),this.connection.emitError(X.ConnectionClosed,"Connection to "+t+" closed."),this.connection.close();break;case"disconnected":d.log("iceConnectionState changed to disconnected on the connection with "+t);break;case"completed":e.onicecandidate=()=>{}}this.connection.emit("iceStateChanged",e.iceConnectionState)},d.log("Listening for data channel"),e.ondatachannel=e=>{d.log("Received data channel");let r=e.channel;i.getConnection(t,n)._initializeDataChannel(r)},d.log("Listening for remote stream"),e.ontrack=e=>{d.log("Received remote stream");let r=e.streams[0],s=i.getConnection(t,n);if(s.type===E.Media){let e=s;this._addStreamToMediaConnection(r,e)}}}cleanup(){d.log("Cleaning up PeerConnection to "+this.connection.peer);let e=this.connection.peerConnection;if(!e)return;this.connection.peerConnection=null,e.onicecandidate=e.oniceconnectionstatechange=e.ondatachannel=e.ontrack=()=>{};let t="closed"!==e.signalingState,n=!1,r=this.connection.dataChannel;r&&(n=!!r.readyState&&"closed"!==r.readyState),(t||n)&&e.close()}async _makeOffer(){let e=this.connection.peerConnection,t=this.connection.provider;try{let n=await e.createOffer(this.connection.options.constraints);d.log("Created offer."),this.connection.options.sdpTransform&&"function"==typeof this.connection.options.sdpTransform&&(n.sdp=this.connection.options.sdpTransform(n.sdp)||n.sdp);try{await e.setLocalDescription(n),d.log("Set localDescription:",n,`for:${this.connection.peer}`);let r={sdp:n,type:this.connection.type,connectionId:this.connection.connectionId,metadata:this.connection.metadata};if(this.connection.type===E.Data){let e=this.connection;r={...r,label:e.label,reliable:e.reliable,serialization:e.serialization}}t.socket.send({type:_.Offer,payload:r,dst:this.connection.peer})}catch(e){"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer"!=e&&(t.emitError(v.WebRTC,e),d.log("Failed to setLocalDescription, ",e))}}catch(e){t.emitError(v.WebRTC,e),d.log("Failed to createOffer, ",e)}}async _makeAnswer(){let e=this.connection.peerConnection,t=this.connection.provider;try{let n=await e.createAnswer();d.log("Created answer."),this.connection.options.sdpTransform&&"function"==typeof this.connection.options.sdpTransform&&(n.sdp=this.connection.options.sdpTransform(n.sdp)||n.sdp);try{await e.setLocalDescription(n),d.log("Set localDescription:",n,`for:${this.connection.peer}`),t.socket.send({type:_.Answer,payload:{sdp:n,type:this.connection.type,connectionId:this.connection.connectionId},dst:this.connection.peer})}catch(e){t.emitError(v.WebRTC,e),d.log("Failed to setLocalDescription, ",e)}}catch(e){t.emitError(v.WebRTC,e),d.log("Failed to create answer, ",e)}}async handleSDP(e,t){t=new RTCSessionDescription(t);let n=this.connection.peerConnection,r=this.connection.provider;d.log("Setting remote description",t);let i=this;try{await n.setRemoteDescription(t),d.log(`Set remoteDescription:${e} for:${this.connection.peer}`),"OFFER"===e&&await i._makeAnswer()}catch(e){r.emitError(v.WebRTC,e),d.log("Failed to setRemoteDescription, ",e)}}async handleCandidate(e){d.log("handleCandidate:",e);try{await this.connection.peerConnection.addIceCandidate(e),d.log(`Added ICE candidate for:${this.connection.peer}`)}catch(e){this.connection.provider.emitError(v.WebRTC,e),d.log("Failed to handleCandidate, ",e)}}_addTracksToConnection(e,t){if(d.log(`add tracks from stream ${e.id} to peer connection`),!t.addTrack)return d.error("Your browser does't support RTCPeerConnection#addTrack. Ignored.");e.getTracks().forEach((n=>{t.addTrack(n,e)}))}_addStreamToMediaConnection(e,t){d.log(`add stream ${e.id} to media connection ${t.connectionId}`),t.addStream(e)}},xe=class extends kt.EventEmitter{emitError(e,t){d.error("Error:",t),this.emit("error",new xt(`${e}`,t))}},xt=class extends Error{constructor(e,t){"string"==typeof t?super(t):(super(),Object.assign(this,t)),this.type=e}},Ce=class extends xe{get open(){return this._open}constructor(e,t,n){super(),this.peer=e,this.provider=t,this.options=n,this._open=!1,this.metadata=n.metadata}},Se=class e extends Ce{static#e=this.ID_PREFIX="mc_";get type(){return E.Media}get localStream(){return this._localStream}get remoteStream(){return this._remoteStream}constructor(t,n,r){super(t,n,r),this._localStream=this.options._stream,this.connectionId=this.options.connectionId||e.ID_PREFIX+S.randomToken(),this._negotiator=new _e(this),this._localStream&&this._negotiator.startConnection({_stream:this._localStream,originator:!0})}_initializeDataChannel(e){this.dataChannel=e,this.dataChannel.onopen=()=>{d.log(`DC#${this.connectionId} dc connection success`),this.emit("willCloseOnRemote")},this.dataChannel.onclose=()=>{d.log(`DC#${this.connectionId} dc closed for:`,this.peer),this.close()}}addStream(e){d.log("Receiving stream",e),this._remoteStream=e,super.emit("stream",e)}handleMessage(e){let t=e.type,n=e.payload;switch(e.type){case _.Answer:this._negotiator.handleSDP(t,n.sdp),this._open=!0;break;case _.Candidate:this._negotiator.handleCandidate(n.candidate);break;default:d.warn(`Unrecognized message type:${t} from peer:${this.peer}`)}}answer(e,t={}){if(this._localStream)return void d.warn("Local stream already exists on this MediaConnection. Are you answering a call twice?");this._localStream=e,t&&t.sdpTransform&&(this.options.sdpTransform=t.sdpTransform),this._negotiator.startConnection({...this.options._payload,_stream:e});let n=this.provider._getMessages(this.connectionId);for(let e of n)this.handleMessage(e);this._open=!0}close(){this._negotiator&&(this._negotiator.cleanup(),this._negotiator=null),this._localStream=null,this._remoteStream=null,this.provider&&(this.provider._removeConnection(this),this.provider=null),this.options&&this.options._stream&&(this.options._stream=null),this.open&&(this._open=!1,super.emit("close"))}},Ct=class{constructor(e){this._options=e}_buildRequest(e){let t=this._options.secure?"https":"http",{host:n,port:r,path:i,key:s}=this._options,a=new URL(`${t}://${n}:${r}${i}${s}/${e}`);return a.searchParams.set("ts",`${Date.now()}${Math.random()}`),a.searchParams.set("version",Et.version),fetch(a.href,{referrerPolicy:this._options.referrerPolicy})}async retrieveId(){try{let e=await this._buildRequest("id");if(200!==e.status)throw new Error(`Error. Status:${e.status}`);return e.text()}catch(e){d.error("Error retrieving ID",e);let t="";throw"/"===this._options.path&&this._options.host!==S.CLOUD_HOST&&(t=" If you passed in a `path` to your self-hosted PeerServer, you'll also need to pass in that same path when creating a new Peer."),new Error("Could not get an ID from the server."+t)}}async listAllPeers(){try{let e=await this._buildRequest("peers");if(200!==e.status){if(401===e.status){let e="";throw e=this._options.host===S.CLOUD_HOST?"It looks like you're using the cloud server. You can email team@peerjs.com to enable peer listing for your API key.":"You need to enable `allow_discovery` on your self-hosted PeerServer to use this feature.",new Error("It doesn't look like you have permission to list peers IDs. "+e)}throw new Error(`Error. Status:${e.status}`)}return e.json()}catch(e){throw d.error("Error retrieving list peers",e),new Error("Could not get list peers from the server."+e)}}},D=class e extends Ce{static#e=this.ID_PREFIX="dc_";static#t=this.MAX_BUFFERED_AMOUNT=8388608;get type(){return E.Data}constructor(t,n,r){super(t,n,r),this.connectionId=this.options.connectionId||e.ID_PREFIX+nr(),this.label=this.options.label||this.connectionId,this.reliable=!!this.options.reliable,this._negotiator=new _e(this),this._negotiator.startConnection(this.options._payload||{originator:!0,reliable:this.reliable})}_initializeDataChannel(e){this.dataChannel=e,this.dataChannel.onopen=()=>{d.log(`DC#${this.connectionId} dc connection success`),this._open=!0,this.emit("open")},this.dataChannel.onmessage=e=>{d.log(`DC#${this.connectionId} dc onmessage:`,e.data)},this.dataChannel.onclose=()=>{d.log(`DC#${this.connectionId} dc closed for:`,this.peer),this.close()}}close(e){e?.flush?this.send({__peerData:{type:"close"}}):(this._negotiator&&(this._negotiator.cleanup(),this._negotiator=null),this.provider&&(this.provider._removeConnection(this),this.provider=null),this.dataChannel&&(this.dataChannel.onopen=null,this.dataChannel.onmessage=null,this.dataChannel.onclose=null,this.dataChannel=null),this.open&&(this._open=!1,super.emit("close")))}send(e,t=!1){if(this.open)return this._send(e,t);this.emitError(q.NotOpenYet,"Connection is not open. You should listen for the `open` event before sending messages.")}async handleMessage(e){let t=e.payload;switch(e.type){case _.Answer:await this._negotiator.handleSDP(e.type,t.sdp);break;case _.Candidate:await this._negotiator.handleCandidate(t.candidate);break;default:d.warn("Unrecognized message type:",e.type,"from peer:",this.peer)}}},Z=class extends D{get bufferSize(){return this._bufferSize}_initializeDataChannel(e){super._initializeDataChannel(e),this.dataChannel.binaryType="arraybuffer",this.dataChannel.addEventListener("message",(e=>this._handleDataMessage(e)))}_bufferedSend(e){(this._buffering||!this._trySend(e))&&(this._buffer.push(e),this._bufferSize=this._buffer.length)}_trySend(e){if(!this.open)return!1;if(this.dataChannel.bufferedAmount>D.MAX_BUFFERED_AMOUNT)return this._buffering=!0,setTimeout((()=>{this._buffering=!1,this._tryBuffer()}),50),!1;try{this.dataChannel.send(e)}catch(e){return d.error(`DC#:${this.connectionId} Error when sending:`,e),this._buffering=!0,this.close(),!1}return!0}_tryBuffer(){if(!this.open||0===this._buffer.length)return;let e=this._buffer[0];this._trySend(e)&&(this._buffer.shift(),this._bufferSize=this._buffer.length,this._tryBuffer())}close(e){e?.flush?this.send({__peerData:{type:"close"}}):(this._buffer=[],this._bufferSize=0,super.close())}constructor(...e){super(...e),this._buffer=[],this._bufferSize=0,this._buffering=!1}},W=class extends Z{close(e){super.close(e),this._chunkedData={}}constructor(e,t,n){super(e,t,n),this.chunker=new ve,this.serialization=B.Binary,this._chunkedData={}}_handleDataMessage({data:e}){let t=De(e),n=t.__peerData;if(n)return"close"===n.type?void this.close():void this._handleChunk(t);this.emit("data",t)}_handleChunk(e){let t=e.__peerData,n=this._chunkedData[t]||{data:[],count:0,total:e.total};if(n.data[e.n]=new Uint8Array(e.data),n.count++,this._chunkedData[t]=n,n.total===n.count){delete this._chunkedData[t];let e=jr(n.data);this._handleDataMessage({data:e})}}_send(e,t){let n=Ie(e);if(n instanceof Promise)return this._send_blob(n);!t&&n.byteLength>this.chunker.chunkedMTU?this._sendChunks(n):this._bufferedSend(n)}async _send_blob(e){let t=await e;t.byteLength>this.chunker.chunkedMTU?this._sendChunks(t):this._bufferedSend(t)}_sendChunks(e){let t=this.chunker.chunk(e);d.log(`DC#${this.connectionId} Try to send ${t.length} chunks...`);for(let e of t)this.send(e,!0)}},St=class extends Z{_handleDataMessage({data:e}){super.emit("data",e)}_send(e,t){this._bufferedSend(e)}constructor(...e){super(...e),this.serialization=B.None}},bt=class extends Z{_handleDataMessage({data:e}){let t=this.parse(this.decoder.decode(e)),n=t.__peerData;n&&"close"===n.type?this.close():this.emit("data",t)}_send(e,t){let n=this.encoder.encode(this.stringify(e));n.byteLength>=S.chunkedMTU?this.emitError(q.MessageToBig,"Message too big for JSON channel"):this._bufferedSend(n)}constructor(...e){super(...e),this.serialization=B.JSON,this.encoder=new TextEncoder,this.decoder=new TextDecoder,this.stringify=JSON.stringify,this.parse=JSON.parse}},be=class e extends xe{static#e=this.DEFAULT_KEY="peerjs";get id(){return this._id}get options(){return this._options}get open(){return this._open}get socket(){return this._socket}get connections(){let e=Object.create(null);for(let[t,n]of this._connections)e[t]=n;return e}get destroyed(){return this._destroyed}get disconnected(){return this._disconnected}constructor(t,n){let r;super(),this._serializers={raw:St,json:bt,binary:W,"binary-utf8":W,default:W},this._id=null,this._lastServerId=null,this._destroyed=!1,this._disconnected=!1,this._open=!1,this._connections=new Map,this._lostMessages=new Map,t&&t.constructor==Object?n=t:t&&(r=t.toString()),n={debug:0,host:S.CLOUD_HOST,port:S.CLOUD_PORT,path:"/",key:e.DEFAULT_KEY,token:S.randomToken(),config:S.defaultConfig,referrerPolicy:"strict-origin-when-cross-origin",serializers:{},...n},this._options=n,this._serializers={...this._serializers,...this.options.serializers},"/"===this._options.host&&(this._options.host=window.location.hostname),this._options.path&&("/"!==this._options.path[0]&&(this._options.path="/"+this._options.path),"/"!==this._options.path[this._options.path.length-1]&&(this._options.path+="/")),void 0===this._options.secure&&this._options.host!==S.CLOUD_HOST?this._options.secure=S.isSecure():this._options.host==S.CLOUD_HOST&&(this._options.secure=!0),this._options.logFunction&&d.setLogFunction(this._options.logFunction),d.logLevel=this._options.debug||0,this._api=new Ct(n),this._socket=this._createServerConnection(),S.supports.audioVideo||S.supports.data?!r||S.validateId(r)?r?this._initialize(r):this._api.retrieveId().then((e=>this._initialize(e))).catch((e=>this._abort(v.ServerError,e))):this._delayedAbort(v.InvalidID,`ID "${r}" is invalid`):this._delayedAbort(v.BrowserIncompatible,"The current browser does not support WebRTC")}_createServerConnection(){let e=new _t(this._options.secure,this._options.host,this._options.port,this._options.path,this._options.key,this._options.pingInterval);return e.on(k.Message,(e=>{this._handleMessage(e)})),e.on(k.Error,(e=>{this._abort(v.SocketError,e)})),e.on(k.Disconnected,(()=>{this.disconnected||(this.emitError(v.Network,"Lost connection to server."),this.disconnect())})),e.on(k.Close,(()=>{this.disconnected||this._abort(v.SocketClosed,"Underlying socket is already closed.")})),e}_initialize(e){this._id=e,this.socket.start(e,this._options.token)}_handleMessage(e){let t=e.type,n=e.payload,r=e.src;switch(t){case _.Open:this._lastServerId=this.id,this._open=!0,this.emit("open",this.id);break;case _.Error:this._abort(v.ServerError,n.msg);break;case _.IdTaken:this._abort(v.UnavailableID,`ID "${this.id}" is taken`);break;case _.InvalidKey:this._abort(v.InvalidKey,`API KEY "${this._options.key}" is invalid`);break;case _.Leave:d.log(`Received leave message from ${r}`),this._cleanupPeer(r),this._connections.delete(r);break;case _.Expire:this.emitError(v.PeerUnavailable,`Could not connect to peer ${r}`);break;case _.Offer:{let e=n.connectionId,t=this.getConnection(r,e);if(t&&(t.close(),d.warn(`Offer received for existing Connection ID:${e}`)),n.type===E.Media){let i=new Se(r,this,{connectionId:e,_payload:n,metadata:n.metadata});t=i,this._addConnection(r,t),this.emit("call",i)}else{if(n.type!==E.Data)return void d.warn(`Received malformed connection type:${n.type}`);{let i=new this._serializers[n.serialization](r,this,{connectionId:e,_payload:n,metadata:n.metadata,label:n.label,serialization:n.serialization,reliable:n.reliable});t=i,this._addConnection(r,t),this.emit("connection",i)}}let i=this._getMessages(e);for(let e of i)t.handleMessage(e);break}default:{if(!n)return void d.warn(`You received a malformed message from ${r} of type ${t}`);let i=n.connectionId,s=this.getConnection(r,i);s&&s.peerConnection?s.handleMessage(e):i?this._storeMessage(i,e):d.warn("You received an unrecognized message:",e);break}}}_storeMessage(e,t){this._lostMessages.has(e)||this._lostMessages.set(e,[]),this._lostMessages.get(e).push(t)}_getMessages(e){let t=this._lostMessages.get(e);return t?(this._lostMessages.delete(e),t):[]}connect(e,t={}){if(t={serialization:"default",...t},this.disconnected)return d.warn("You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect, or call reconnect on this peer if you believe its ID to still be available."),void this.emitError(v.Disconnected,"Cannot connect to new Peer after disconnecting from server.");let n=new this._serializers[t.serialization](e,this,t);return this._addConnection(e,n),n}call(e,t,n={}){if(this.disconnected)return d.warn("You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect."),void this.emitError(v.Disconnected,"Cannot connect to new Peer after disconnecting from server.");if(!t)return void d.error("To call a peer, you must provide a stream from your browser's `getUserMedia`.");let r=new Se(e,this,{...n,_stream:t});return this._addConnection(e,r),r}_addConnection(e,t){d.log(`add connection ${t.type}:${t.connectionId} to peerId:${e}`),this._connections.has(e)||this._connections.set(e,[]),this._connections.get(e).push(t)}_removeConnection(e){let t=this._connections.get(e.peer);if(t){let n=t.indexOf(e);-1!==n&&t.splice(n,1)}this._lostMessages.delete(e.connectionId)}getConnection(e,t){let n=this._connections.get(e);if(!n)return null;for(let e of n)if(e.connectionId===t)return e;return null}_delayedAbort(e,t){setTimeout((()=>{this._abort(e,t)}),0)}_abort(e,t){d.error("Aborting!"),this.emitError(e,t),this._lastServerId?this.disconnect():this.destroy()}destroy(){this.destroyed||(d.log(`Destroy peer with ID:${this.id}`),this.disconnect(),this._cleanup(),this._destroyed=!0,this.emit("close"))}_cleanup(){for(let e of this._connections.keys())this._cleanupPeer(e),this._connections.delete(e);this.socket.removeAllListeners()}_cleanupPeer(e){let t=this._connections.get(e);if(t)for(let e of t)e.close()}disconnect(){if(this.disconnected)return;let e=this.id;d.log(`Disconnect peer with ID:${e}`),this._disconnected=!0,this._open=!1,this.socket.close(),this._lastServerId=e,this._id=null,this.emit("disconnected",e)}reconnect(){if(this.disconnected&&!this.destroyed)d.log(`Attempting reconnection to server with ID ${this._lastServerId}`),this._disconnected=!1,this._initialize(this._lastServerId);else{if(this.destroyed)throw new Error("This peer cannot reconnect to the server. It has already been destroyed.");if(this.disconnected||this.open)throw new Error(`Peer ${this.id} cannot reconnect because it is not disconnected from the server!`);d.error("In a hurry? We're still trying to make the initial connection!")}}listAllPeers(e=e=>{}){this._api.listAllPeers().then((t=>e(t))).catch((e=>this._abort(v.ServerError,e)))}};class Client{id;audio;video;close;input;state;data;constructor(e,t,n,r,i,s,a){this.id=e,this.audio=t,this.video=n,this.close=r,this.input=i,this.state=s,this.data=a}}let no_client=e=>new Client((()=>0),(()=>0),(()=>0),(()=>0),(()=>new Input(0,0,(()=>!1),[],[],[])),(()=>"empty"),(()=>e)),camera=(e,t,n)=>{let r=[t,translate(0,0,0)];return!1===e.init||!1===e.xr_support||null===e.xr_cameras?r:e.xr_cameras[n]};class HostClient{id;conn;canvas;canvas_sync;state;data;input;audio_context;audio_destination;init;xr_support;xr_cameras;xr_hands;constructor(e,t,n,r,i,s,a,o,c,l,h,u,_){this.id=e,this.conn=t,this.canvas=n,this.canvas_sync=r,this.state=i,this.data=s,this.input=a,this.audio_context=o,this.audio_destination=c,this.init=l,this.xr_support=h,this.xr_cameras=u,this.xr_hands=_}}let peer_on_connection=e=>new Promise((t=>{e.on("open",(e=>{t(e)}))}));const host=(e,t)=>{let n=null;return{open:r=>{if(null!==n)throw new Error;return n=new_host(r,e,t),n.open()},clients:()=>null===n?[]:n.clients()}};let new_host=(e,t,n)=>{let r=n?.slots,i=players_new(r),s=[],a=0,o=new be(e,{secure:!0,debug:3,config:{iceServers:[{urls:"turn:uclient.io:3478",username:"anon",credential:"none"}]},host:"uclient.io",port:443,key:"none",path:"/peerjs"});o.on("error",(e=>{console.error(e)}));let c=null;peer_on_connection(o).then((e=>{c=e,o.on("connection",(e=>{a++;let r=new Map,i=new Input(0,0,(e=>!!r.get(e)),[],[],[]),o=new HostClient(a,e,document.createElement("canvas"),!1,"connect",t(),i,null,null,!1,!1,null,null);e.on("open",(()=>{s.push(o),e.send(n?.title),e.on("data",(e=>{let t=JSON.parse(e);if(!0!==t?.log)return t?.login?(o.init=!0,void(o.xr_support=!!t?.xr)):void(!1!==o.init&&(o.xr_cameras=t.xr_mat4s,o.xr_hands=t.xr_hands,o.input.keys=o.input.keys.concat(t.keys),o.input.ptrs=o.input.ptrs.concat(t.ptrs),o.input.clicks=o.input.clicks.concat(t.clicks),t.keys.forEach((e=>{r.set(e.code,"down"===e.action)}))));console.warn(t?.text)}))})),e.on("close",(()=>{console.log("close"),o.state="closed"}))}))}));return{open:()=>new Promise((e=>{let t=()=>{null===c?setTimeout(t,1):e()};t()})),clients:()=>{let e=s.map((e=>{let t=e.input,n=e.state;return new Client((()=>e.id),(t=>{if(null!==e.audio_context){let n=new Audio(t),r=e.audio_context.createMediaElementSource(n);null!==e.audio_destination&&r.connect(e.audio_destination),n.loop=!1,n.play()}}),((t,n)=>{if(!1===e.init)return;let r=camera(e,t,0),i=n(r[0],r[1]);if(!1===e.canvas_sync){let t=new AudioContext;if("suspended"===t.state)return;e.canvas_sync=!0,e.canvas.width=i.width*(e.xr_support?2:1),e.canvas.height=i.height;let n=e.canvas.captureStream(60);e.audio_context=t,e.audio_destination=e.audio_context.createMediaStreamDestination();let r=e.audio_destination.stream.getAudioTracks()[0];n.addTrack(r),o.call(e.conn.peer,n)}if(e.canvas.getContext("2d")?.drawImage(i,0,0,i.width,i.height),!1===e.xr_support)return;if(r=camera(e,t,1),i=n(r[0],r[1]),e.canvas.getContext("2d")?.drawImage(i,i.width,0,i.width,i.height),null===e.xr_hands)return;let s=t=>{t.forEach((t=>{let n=i.width/2+t[12]*i.width,r=i.height/2+-t[13]*i.height,s=e.canvas.getContext("2d");s.beginPath(),s.arc(n,r,5,0,2*Math.PI),s.fillStyle="black",s.fill()}))};s(e.xr_hands[0]),s(e.xr_hands[1])}),(()=>{}),(()=>t),(()=>n),(()=>e.data))}));return s=s.filter((e=>(e.input=new Input(0,0,e.input.key,[],[],[]),"connect"===e.state&&(e.state="ready"),"ready"===e.state))),null!==i&&(e=i.from_clients(e,t)),e}}},players_new=e=>{let t=[];for(let n=0;n<e;n++)t.push(0);let n={join:n=>{for(let r=0;r<e;r++)if(0===t[r])return t[r]=n,!0;return!1},leave:n=>{for(let r=0;r<e;r++)if(t[r]===n)return t[r]=0,!0;return!1},get:n=>{for(let r=0;r<e;r++)if(t[r]===n)return r+1;return 0},from_clients:(e,r)=>{e.forEach((e=>{"connect"===e.state()&&!1===n.join(e.id())&&e.close()}));let i=t.map((t=>{let n=e.findIndex((e=>e.id()===t));return-1!==n?e[n]:no_client(r())}));return e.forEach((e=>{"closed"===e.state()&&n.leave(e.id())})),i}};return n};class Player{hp;action;img;turn;constructor(e,t,n,r){this.hp=e,this.action=t,this.img=n,this.turn=r}}let solve=(e,t)=>{if(e===t)return"draw";if("rock"===e)return"paper"===t?"1p":"2p";if("paper"===e)return"scissor"===t?"1p":"2p";if("scissor"===e)return"rock"===t?"1p":"2p";throw new Error};const damage=.21,wait=.45,enemy_hp_framex=400,enemy_hp_framey=400;let handle_input=e=>{if(0!==e.clicks.length){let t=e.clicks[0].x;if(e.clicks[0].y>.7)return t<.333?"rock":t<.666?"paper":"scissor"}return e.key("KeyA")?"rock":e.key("KeyS")?"paper":e.key("KeyD")?"scissor":""},app=async(e,t)=>{let n=t(1e3,1e3),r=gfx(n),i=r.buffer(),s=r.texture(await image(e+"a.png")),a=r.texture(await image(e+"b.png")),o=[r.texture(await image(e+"0.png")),r.texture(await image(e+"1.png")),r.texture(await image(e+"2.png")),r.texture(await image(e+"3.png"))],c=[r.texture(await image(e+"e1.png")),r.texture(await image(e+"e2.png")),r.texture(await image(e+"e3.png"))],l=r.texture(await image(e+"hp_100.png")),h=r.texture(await image(e+"hp_80.png")),u=r.texture(await image(e+"hp_60.png")),_=r.texture(await image(e+"hp_40.png")),p=r.texture(await image(e+"hp_20.png")),d=r.texture(await image(e+"hp_0.png")),f=e=>e<.1?d:e<.3?p:e<.5?_:e<.7?u:e<.9?h:l,E=r.texture(await image(e+"showdown.png")),m=r.texture(await image(e+"idle.png")),T=r.texture(await image(e+"end_1p.png")),R=r.texture(await image(e+"end_2p.png")),g=r.texture(await image(e+"end_draw.png")),v=host((()=>new Player(1,"",a,"2p")),{slots:1,title:"uClient Demo - $"}),A=!1,S=new Player(1,"",s,"1p"),C=0,L="",N=0;return async e=>{if(0!==e.clicks.length&&!1===A&&(A=!0,await v.open(prompt()??"abc")),!1===A)return;let t=v.clients(),s=[[e,S]].concat(t.map((e=>[e.input(),e.data()])));if(2===s.length){let t=s[0],n=s[1];0===C&&""!==t[1].action&&""!==n[1].action&&(C=1,L=solve(t[1].action,n[1].action)),0!==C&&(C-=.45*e.delta,C=Math.max(C,0),0===C&&("1p"!==L&&"draw"!==L||(n[1].hp-=.21),"2p"!==L&&"draw"!==L||(t[1].hp-=.21),L="",t[1].action="",n[1].action="")),0===C&&(""===t[1].action&&(t[1].action=handle_input(t[0])),""===n[1].action&&(n[1].action=handle_input(n[0]))),0===N&&0===C&&(t[1].hp<=0||n[1].hp<=0)&&(N=1),0!==N&&(N-=.225*e.delta,N=Math.max(N,0),0===N&&(t[1].hp=1,n[1].hp=1))}let a=(e,t,n,s)=>{i.clear(),i.draw({shader:"\n                    vec4 pixel(px p) {\n                        return vec4(1);\n                    }\n                "}),blit(i,e.img),blit(i,(e=>{if(""===e)return o[0];if("rock"===e)return o[1];if("paper"===e)return o[2];if("scissor"===e)return o[3];throw new Error})(e.action)),blit(i,f(e.hp)),blit(i,f(t.hp),400,400),blit(i,E,0,0,{alpha:C}),""!==e.action&&""===t.action&&blit(i,m),0!==C&&""!==t.action&&blit(i,(e=>{if("rock"===e)return c[0];if("paper"===e)return c[1];if("scissor"===e)return c[2];throw new Error})(t.action)),0!==N&&(e.hp<=0&&t.hp<=0?blit(i,g):e.hp<=0?blit(i,"1p"===e.turn?T:R):blit(i,"1p"===e.turn?R:T)),r.flush(i)},l=perspective(90,r.width()/r.height(),.1,1e3);t.forEach(((e,t)=>{0!==e.id()&&e.video(l,((t,r)=>(a(e.data(),S),n)))})),a(S,t[0]?.data())}},main=()=>run(app,"");export{app,main};